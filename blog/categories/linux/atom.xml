<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-09-24T11:38:09-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KVM virtualization on Linux hosts]]></title>
    <link href="http://chousensha.github.io/blog/2017/09/24/kvm-virtualization-on-linux-hosts/"/>
    <updated>2017-09-24T11:34:34-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/09/24/kvm-virtualization-on-linux-hosts</id>
    <content type="html"><![CDATA[<p>By now you probably noticed that the last topics were centered more around Linux than the usual. That&rsquo;s because I am studying for my LFCS certification, and creating posts as I go through the material. This time, we&rsquo;re going to look at using virtualization on a Linux physical host. Since my only physical Linux at the moment is Kali, this is what I&rsquo;m going to use for today&rsquo;s post.</p>

<!-- more -->


<p>The first step before starting anything else, is to check if virtualization is enabled on your machine. For this, you can query your <code>/proc/cpuinfo</code> file and look for the following flags:</p>

<ul>
<li><p><strong>vmx</strong> for Intel CPUs</p></li>
<li><p><strong>svm</strong> for AMD CPUs</p></li>
</ul>


<p>I already knew the result in my case, but I checked anyway with <code>grep &mdash;color vmx /proc/cpuinfo</code>:</p>

<p><img class="center" src="/images/sysadmin/kvm/vmx.png" title="&lsquo;vmx&rsquo; &lsquo;vmx enabled&rsquo;" ></p>

<p>Ok, the next step is to install the virtualization utilities:</p>

<p><code>
apt-get install qemu-kvm virt-manager libvirt0 qemu-system virt-viewer virt-top
</code></p>

<p>KVM (Kernel Virtual Machine) is a full virtualization solution for Linux on x86 and x64 hardware containing virtualization extensions (Intel VT or AMD-V). It consists of a loadable kernel module, kvm.ko, that provides the core virtualization infrastructure and a processor specific module, kvm-intel.ko or kvm-amd.ko.</p>

<p>libvirt is an API toolkit for managing virtualization hosts</p>

<p>The virt-manager application is a graphical tool for managing virtual machines through libvirt. It primarily targets KVM VMs, but also manages Xen and LXC (linux containers).</p>

<p>virt-viewer allows access to the virtual machine console</p>

<p>virt-top is for monitoring VMs performance</p>

<p>After installing everything, you can go to <code>/etc/libvirt/qemu/networks</code> and look inside the <strong>default.xml</strong> file to see how the default virtual network will be configured:</p>

<p>```</p>

<!--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  virsh net-edit default
or other application using the libvirt API.
-->


<p><network>
  <name>default</name>
  <uuid>d67cdb82-233e-44f1-a6ac-9293faa2258d</uuid>
  <forward mode='nat'/>
  <bridge name='virbr0' stp='on' delay='0'/>
  <mac address='52:54:00:b2:a7:6e'/>
  <ip address='192.168.122.1' netmask='255.255.255.0'></p>

<pre><code>&lt;dhcp&gt;
  &lt;range start='192.168.122.2' end='192.168.122.254'/&gt;
&lt;/dhcp&gt;
</code></pre>

<p>  </ip>
</network>
```</p>

<p>Let&rsquo;s see if the default network has been created. Don&rsquo;t forget to start the <strong>libvirtd</strong> daemon first, with <code>systemctl start libvirtd</code> and then use virsh to list the defined networks. <strong>virsh</strong> is a powerful command line interface tool for managing guests and the hypervisor. It can also be used as an interactive prompt.</p>

<p>```
virsh
Welcome to virsh, the virtualization interactive terminal.</p>

<p>Type:  &lsquo;help&rsquo; for help with commands</p>

<pre><code>   'quit' to quit
</code></pre>

<p>virsh # help
Grouped commands:</p>

<p> Domain Management (help keyword &lsquo;domain&rsquo;):</p>

<pre><code>attach-device                  attach device from an XML file
attach-disk                    attach disk device
attach-interface               attach network interface
autostart                      autostart a domain
blkdeviotune                   Set or query a block device I/O tuning parameters.
blkiotune                      Get or set blkio parameters
blockcommit                    Start a block commit operation.
blockcopy                      Start a block copy operation.
blockjob                       Manage active block operations
blockpull                      Populate a disk from its backing image.
blockresize                    Resize block device of domain.
change-media                   Change media of CD or floppy drive
console                        connect to the guest console
cpu-baseline                   compute baseline CPU
cpu-compare                    compare host CPU with a CPU described by an XML file
cpu-stats                      show domain cpu statistics
create                         create a domain from an XML file
define                         define (but don't start) a domain from an XML file
desc                           show or set domain's description or title
destroy                        destroy (stop) a domain
detach-device                  detach device from an XML file
detach-disk                    detach disk device
detach-interface               detach network interface
domdisplay                     domain display connection URI
domfsfreeze                    Freeze domain's mounted filesystems.
domfsthaw                      Thaw domain's mounted filesystems.
domfsinfo                      Get information of domain's mounted filesystems.
domfstrim                      Invoke fstrim on domain's mounted filesystems.
domhostname                    print the domain's hostname
domid                          convert a domain name or UUID to domain id
domif-setlink                  set link state of a virtual interface
domiftune                      get/set parameters of a virtual interface
domjobabort                    abort active domain job
domjobinfo                     domain job information
domname                        convert a domain id or UUID to domain name
domrename                      rename a domain
dompmsuspend                   suspend a domain gracefully using power management functions
dompmwakeup                    wakeup a domain from pmsuspended state
domuuid                        convert a domain name or id to domain UUID
domxml-from-native             Convert native config to domain XML
domxml-to-native               Convert domain XML to native config
dump                           dump the core of a domain to a file for analysis
dumpxml                        domain information in XML
edit                           edit XML configuration for a domain
event                          Domain Events
inject-nmi                     Inject NMI to the guest
iothreadinfo                   view domain IOThreads
iothreadpin                    control domain IOThread affinity
iothreadadd                    add an IOThread to the guest domain
iothreaddel                    delete an IOThread from the guest domain
send-key                       Send keycodes to the guest
send-process-signal            Send signals to processes
lxc-enter-namespace            LXC Guest Enter Namespace
managedsave                    managed save of a domain state
managedsave-remove             Remove managed save of a domain
memtune                        Get or set memory parameters
perf                           Get or set perf event
metadata                       show or set domain's custom XML metadata
migrate                        migrate domain to another host
migrate-setmaxdowntime         set maximum tolerable downtime
migrate-compcache              get/set compression cache size
migrate-setspeed               Set the maximum migration bandwidth
migrate-getspeed               Get the maximum migration bandwidth
migrate-postcopy               Switch running migration from pre-copy to post-copy
numatune                       Get or set numa parameters
qemu-attach                    QEMU Attach
qemu-monitor-command           QEMU Monitor Command
qemu-monitor-event             QEMU Monitor Events
qemu-agent-command             QEMU Guest Agent Command
reboot                         reboot a domain
reset                          reset a domain
restore                        restore a domain from a saved state in a file
resume                         resume a domain
save                           save a domain state to a file
save-image-define              redefine the XML for a domain's saved state file
save-image-dumpxml             saved state domain information in XML
save-image-edit                edit XML for a domain's saved state file
schedinfo                      show/set scheduler parameters
screenshot                     take a screenshot of a current domain console and store it into a file
set-user-password              set the user password inside the domain
setmaxmem                      change maximum memory limit
setmem                         change memory allocation
setvcpus                       change number of virtual CPUs
shutdown                       gracefully shutdown a domain
start                          start a (previously defined) inactive domain
suspend                        suspend a domain
ttyconsole                     tty console
undefine                       undefine a domain
update-device                  update device from an XML file
vcpucount                      domain vcpu counts
vcpuinfo                       detailed domain vcpu information
vcpupin                        control or query domain vcpu affinity
emulatorpin                    control or query domain emulator affinity
vncdisplay                     vnc display
guestvcpus                     query or modify state of vcpu in the guest (via agent)
setvcpu                        attach/detach vcpu or groups of threads
domblkthreshold                set the threshold for block-threshold event for a given block device or it's backing chain element
</code></pre>

<p> Domain Monitoring (help keyword &lsquo;monitor&rsquo;):</p>

<pre><code>domblkerror                    Show errors on block devices
domblkinfo                     domain block device size information
domblklist                     list all domain blocks
domblkstat                     get device block stats for a domain
domcontrol                     domain control interface state
domif-getlink                  get link state of a virtual interface
domifaddr                      Get network interfaces' addresses for a running domain
domiflist                      list all domain virtual interfaces
domifstat                      get network interface stats for a domain
dominfo                        domain information
dommemstat                     get memory statistics for a domain
domstate                       domain state
domstats                       get statistics about one or multiple domains
domtime                        domain time
list                           list domains
</code></pre>

<p> Host and Hypervisor (help keyword &lsquo;host&rsquo;):</p>

<pre><code>allocpages                     Manipulate pages pool size
capabilities                   capabilities
cpu-models                     CPU models
domcapabilities                domain capabilities
freecell                       NUMA free memory
freepages                      NUMA free pages
hostname                       print the hypervisor hostname
maxvcpus                       connection vcpu maximum
node-memory-tune               Get or set node memory parameters
nodecpumap                     node cpu map
nodecpustats                   Prints cpu stats of the node.
nodeinfo                       node information
nodememstats                   Prints memory stats of the node.
nodesuspend                    suspend the host node for a given time duration
sysinfo                        print the hypervisor sysinfo
uri                            print the hypervisor canonical URI
version                        show version
</code></pre>

<p> Interface (help keyword &lsquo;interface&rsquo;):</p>

<pre><code>iface-begin                    create a snapshot of current interfaces settings, which can be later committed (iface-commit) or restored (iface-rollback)
iface-bridge                   create a bridge device and attach an existing network device to it
iface-commit                   commit changes made since iface-begin and free restore point
iface-define                   define an inactive persistent physical host interface or modify an existing persistent one from an XML file
iface-destroy                  destroy a physical host interface (disable it / "if-down")
iface-dumpxml                  interface information in XML
iface-edit                     edit XML configuration for a physical host interface
iface-list                     list physical host interfaces
iface-mac                      convert an interface name to interface MAC address
iface-name                     convert an interface MAC address to interface name
iface-rollback                 rollback to previous saved configuration created via iface-begin
iface-start                    start a physical host interface (enable it / "if-up")
iface-unbridge                 undefine a bridge device after detaching its slave device
iface-undefine                 undefine a physical host interface (remove it from configuration)
</code></pre>

<p> Network Filter (help keyword &lsquo;filter&rsquo;):</p>

<pre><code>nwfilter-define                define or update a network filter from an XML file
nwfilter-dumpxml               network filter information in XML
nwfilter-edit                  edit XML configuration for a network filter
nwfilter-list                  list network filters
nwfilter-undefine              undefine a network filter
</code></pre>

<p> Networking (help keyword &lsquo;network&rsquo;):</p>

<pre><code>net-autostart                  autostart a network
net-create                     create a network from an XML file
net-define                     define an inactive persistent virtual network or modify an existing persistent one from an XML file
net-destroy                    destroy (stop) a network
net-dhcp-leases                print lease info for a given network
net-dumpxml                    network information in XML
net-edit                       edit XML configuration for a network
net-event                      Network Events
net-info                       network information
net-list                       list networks
net-name                       convert a network UUID to network name
net-start                      start a (previously defined) inactive network
net-undefine                   undefine a persistent network
net-update                     update parts of an existing network's configuration
net-uuid                       convert a network name to network UUID
</code></pre>

<p> Node Device (help keyword &lsquo;nodedev&rsquo;):</p>

<pre><code>nodedev-create                 create a device defined by an XML file on the node
nodedev-destroy                destroy (stop) a device on the node
nodedev-detach                 detach node device from its device driver
nodedev-dumpxml                node device details in XML
nodedev-list                   enumerate devices on this host
nodedev-reattach               reattach node device to its device driver
nodedev-reset                  reset node device
nodedev-event                  Node Device Events
</code></pre>

<p> Secret (help keyword &lsquo;secret&rsquo;):</p>

<pre><code>secret-define                  define or modify a secret from an XML file
secret-dumpxml                 secret attributes in XML
secret-event                   Secret Events
secret-get-value               Output a secret value
secret-list                    list secrets
secret-set-value               set a secret value
secret-undefine                undefine a secret
</code></pre>

<p> Snapshot (help keyword &lsquo;snapshot&rsquo;):</p>

<pre><code>snapshot-create                Create a snapshot from XML
snapshot-create-as             Create a snapshot from a set of args
snapshot-current               Get or set the current snapshot
snapshot-delete                Delete a domain snapshot
snapshot-dumpxml               Dump XML for a domain snapshot
snapshot-edit                  edit XML for a snapshot
snapshot-info                  snapshot information
snapshot-list                  List snapshots for a domain
snapshot-parent                Get the name of the parent of a snapshot
snapshot-revert                Revert a domain to a snapshot
</code></pre>

<p> Storage Pool (help keyword &lsquo;pool&rsquo;):</p>

<pre><code>find-storage-pool-sources-as   find potential storage pool sources
find-storage-pool-sources      discover potential storage pool sources
pool-autostart                 autostart a pool
pool-build                     build a pool
pool-create-as                 create a pool from a set of args
pool-create                    create a pool from an XML file
pool-define-as                 define a pool from a set of args
pool-define                    define an inactive persistent storage pool or modify an existing persistent one from an XML file
pool-delete                    delete a pool
pool-destroy                   destroy (stop) a pool
pool-dumpxml                   pool information in XML
pool-edit                      edit XML configuration for a storage pool
pool-info                      storage pool information
pool-list                      list pools
pool-name                      convert a pool UUID to pool name
pool-refresh                   refresh a pool
pool-start                     start a (previously defined) inactive pool
pool-undefine                  undefine an inactive pool
pool-uuid                      convert a pool name to pool UUID
pool-event                     Storage Pool Events
</code></pre>

<p> Storage Volume (help keyword &lsquo;volume&rsquo;):</p>

<pre><code>vol-clone                      clone a volume.
vol-create-as                  create a volume from a set of args
vol-create                     create a vol from an XML file
vol-create-from                create a vol, using another volume as input
vol-delete                     delete a vol
vol-download                   download volume contents to a file
vol-dumpxml                    vol information in XML
vol-info                       storage vol information
vol-key                        returns the volume key for a given volume name or path
vol-list                       list vols
vol-name                       returns the volume name for a given volume key or path
vol-path                       returns the volume path for a given volume name or key
vol-pool                       returns the storage pool for a given volume key or path
vol-resize                     resize a vol
vol-upload                     upload file contents to a volume
vol-wipe                       wipe a vol
</code></pre>

<p> Virsh itself (help keyword &lsquo;virsh&rsquo;):</p>

<pre><code>cd                             change the current directory
echo                           echo arguments
exit                           quit this interactive terminal
help                           print help
pwd                            print the current directory
quit                           quit this interactive terminal
connect                        (re)connect to hypervisor
</code></pre>

<p>```</p>

<p>Ok, default network check now:</p>

<p>```
virsh net-list &mdash;all</p>

<h2> Name                 State      Autostart     Persistent</h2>

<p> default              inactive   no            yes
```</p>

<p>The default network is inactive, so we have to enable it:</p>

<p><code>
virsh net-start default
Network default started
</code></p>

<p>Now, if you do an <em>ifconfig</em>, you should see the new bridge interface:</p>

<p>```
virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500</p>

<pre><code>    inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
    ether 52:54:00:b2:a7:6e  txqueuelen 1000  (Ethernet)
    RX packets 0  bytes 0 (0.0 B)
    RX errors 0  dropped 0  overruns 0  frame 0
    TX packets 0  bytes 0 (0.0 B)
    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</code></pre>

<p>```</p>

<p>To get more info about your bridge, you can use the <strong>brctl</strong> command:</p>

<p>```
brctl
Usage: brctl [commands]
commands:</p>

<pre><code>addbr       &lt;bridge&gt;        add bridge
delbr       &lt;bridge&gt;        delete bridge
addif       &lt;bridge&gt; &lt;device&gt;   add interface to bridge
delif       &lt;bridge&gt; &lt;device&gt;   delete interface from bridge
hairpin     &lt;bridge&gt; &lt;port&gt; {on|off}    turn hairpin on/off
setageing   &lt;bridge&gt; &lt;time&gt;     set ageing time
setbridgeprio   &lt;bridge&gt; &lt;prio&gt;     set bridge priority
setfd       &lt;bridge&gt; &lt;time&gt;     set bridge forward delay
sethello    &lt;bridge&gt; &lt;time&gt;     set hello time
setmaxage   &lt;bridge&gt; &lt;time&gt;     set max message age
setpathcost &lt;bridge&gt; &lt;port&gt; &lt;cost&gt;  set path cost
setportprio &lt;bridge&gt; &lt;port&gt; &lt;prio&gt;  set port priority
show        [ &lt;bridge&gt; ]        show a list of bridges
showmacs    &lt;bridge&gt;        show a list of mac addrs
showstp     &lt;bridge&gt;        show bridge stp info
stp         &lt;bridge&gt; {on|off}   turn stp on/off
</code></pre>

<p>```</p>

<blockquote><p>brctl is used to set up, maintain, and inspect the ethernet bridge configuration in the linux kernel.</p>

<p>An ethernet bridge is a device commonly used to connect different  networks of ethernets together, so that these
ethernets will appear as one ethernet to the participants.</p>

<p>Each of the ethernets  being  connected  corresponds  to  one  physical interface  in  the  bridge. These individual
ethernets are bundled into one bigger (&lsquo;logical&rsquo;) ethernet, this bigger  ethernet  corresponds  to the bridge
network interface.</p></blockquote>

<p><code>
brctl show
bridge name bridge id       STP enabled interfaces
virbr0      8000.525400b2a76e   yes     virbr0-nic
</code></p>

<p>Ok, now we have the default network set. It&rsquo;s time to actually start some VMs. In KVM, VMs can be managed both from the command line with virsh, and from the GUI, with Virtual Network Manager, which you can find under System Tools.</p>

<p><img class="center" src="/images/sysadmin/kvm/virtmanager.png" title="&lsquo;virtmanager&rsquo; &lsquo;virtmanager&rsquo;" ></p>

<p><strong>Before starting to create VMs, please reboot your host to save you time and headaches</strong>.</p>

<p>I grabbed a Debian iso to showcase its live CD, and I created a VM from it:</p>

<p><img class="center" src="/images/sysadmin/kvm/1-new.png" title="&lsquo;new vm&rsquo; &lsquo;new vm&rsquo;" ></p>

<p><img class="center" src="/images/sysadmin/kvm/2-os.png" title="&lsquo;os&rsquo; &lsquo;os&rsquo;" ></p>

<p><img class="center" src="/images/sysadmin/kvm/3-hw.png" title="&lsquo;hardware&rsquo; &lsquo;hardware specs&rsquo;" ></p>

<p><img class="center" src="/images/sysadmin/kvm/4-space.png" title="&lsquo;disk&rsquo; &lsquo;disk&rsquo;" ></p>

<p><img class="center" src="/images/sysadmin/kvm/5-final.png" title="&lsquo;create vm&rsquo; &lsquo;create vm&rsquo;" ></p>

<p>I had to do one more step before getting rid of errors every time I finished with the VM creation. libvirt was pointing to the qemu-kvm binary, but I had no such file, so I created a symlink as specified in this <a href="https://bbs.archlinux.org/viewtopic.php?pid=1240205#p1240205">Arch Linux forum</a>:</p>

<p><code>
ln -s /usr/bin/qemu-{system-x86_64,kvm}
ls -la /usr/bin/qemu-kvm
lrwxrwxrwx 1 root root 27 Sep 17 13:19 /usr/bin/qemu-kvm -&gt; /usr/bin/qemu-system-x86_64
</code></p>

<p><img class="center" src="/images/sysadmin/kvm/vm.png" title="&lsquo;vm&rsquo; &lsquo;working vm&rsquo;" ></p>

<p><img class="center" src="/images/sysadmin/kvm/details.png" title="&lsquo;vm details&rsquo; &lsquo;vm details&rsquo;" ></p>

<p>KVM graphical interface is nice, but we are not limited to a GUI. We can create and interact with VMs from the command line!</p>

<p>First, let&rsquo;s see if what VMs we&rsquo;ve got:</p>

<p>```
virsh list &mdash;all</p>

<h2> Id    Name                           State</h2>

<ul>
<li>   generic                        shut off
```</li>
</ul>


<p>If we only wanted to list the running VMs, we could do it with <code>virsh list</code></p>

<p>Now, I&rsquo;m going to start a VM, which in virsh talk is called a domain, and look at some info about it:</p>

<p>```
virsh # start generic
Domain generic started</p>

<p>virsh # dominfo generic
Id:             1
Name:           generic
UUID:           c4982e35-ec8d-4b5f-9ad3-c8491bcd9181
OS Type:        hvm
State:          running
CPU(s):         1
CPU time:       0.4s
Max memory:     1048576 KiB
Used memory:    1048576 KiB
Persistent:     yes
Autostart:      disable
Managed save:   no
Security model: none
Security DOI:   0
```</p>

<p>Now we have a better grasp on Linux-based hypervisors, and we don&rsquo;t have to rely on VMware and Virtualbox only. In a future post I will show how to install a VM from the command line.</p>

<p>```</p>

<hr />

<p>/ Q: How did you get into artificial   \
| intelligence? A: Seemed logical &mdash; I |
\ didn&rsquo;t have any real intelligence.   /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NFS shares on CentOS 7]]></title>
    <link href="http://chousensha.github.io/blog/2017/09/10/nfs-shares-on-centos-7/"/>
    <updated>2017-09-10T07:45:30-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/09/10/nfs-shares-on-centos-7</id>
    <content type="html"><![CDATA[<p>Today we will go over an alternate way of setting up shares on CentOS 7. In an <a href="https://chousensha.github.io/blog/2017/06/09/quick-shares-with-samba-on-centos/">earlier post</a> we saw how we can share stuff with Samba, which is the preferred way, especially if you have mixed environments. But today I also wanted to go through the process using the veteran: NFS! For this example, we&rsquo;ll be looking at the newest version, NFS4, which adds performance and security features, but also operates a little bit differently than its predecessors.</p>

<!-- more -->


<p>The Network File System allows clients to mount remote filesystems as if they were present locally. By default, the NFS server is listening on port 2049. In version 4, NFS requires the use of TCP.</p>

<h3>Server configuration</h3>

<p>If you don&rsquo;t have it already, install the <code>nfs-utils</code> package. Next, start NFS with the command: <code>systemctl start nfs</code>. For the share, I created some directory and put a file in it:</p>

<p><code>
mkdir /var/nfs-share
chmod 777 /var/nfs-share/
</code></p>

<p>Now we have to edit the <code>/etc/exports</code> file, which contains the configuration for the shares. The format is as follows:</p>

<p><code>
/sharepath client(options)
</code></p>

<p>You can specify the client by hostname, domain name, IP address or network range. In this example, I will allow all hosts on my local subnet to have read write access to the share, and permit root users to retain their privileges:</p>

<p><code>
/var/nfs-share 192.168.217.0/24(rw,no_root_squash)
</code></p>

<p>Now restart the server for the configuration to take effect: <code>systemctl restart nfs</code>. You can see NFS statistics with <strong>nfstat</strong>:</p>

<p>```
nfsstat
Server rpc stats:
calls      badcalls   badclnt    badauth    xdrcall
91         0          0          0          0</p>

<p>Server nfs v4:
null         compound   <br/>
2         2% 89       97%</p>

<p>Server nfs v4 operations:
op0-unused   op1-unused   op2-future   access       close        commit     <br/>
0         0% 0         0% 0         0% 7         2% 1         0% 0         0%
create       delegpurge   delegreturn  getattr      getfh        link       <br/>
0         0% 0         0% 1         0% 52       20% 8         3% 0         0%
lock         lockt        locku        lookup       lookup_root  nverify    <br/>
0         0% 0         0% 0         0% 16        6% 0         0% 0         0%
open         openattr     open_conf    open_dgrd    putfh        putpubfh   <br/>
1         0% 0         0% 0         0% 0         0% 63       25% 0         0%
putrootfh    read         readdir      readlink     remove       rename     <br/>
4         1% 1         0% 2         0% 0         0% 0         0% 0         0%
renew        restorefh    savefh       secinfo      setattr      setcltid   <br/>
0         0% 0         0% 0         0% 0         0% 0         0% 0         0%
setcltidconf verify       write        rellockowner bc_ctl       bind_conn  <br/>
0         0% 0         0% 0         0% 0         0% 0         0% 0         0%
exchange_id  create_ses   destroy_ses  free_stateid getdirdeleg  getdevinfo <br/>
2         0% 2         0% 1         0% 0         0% 0         0% 0         0%
getdevlist   layoutcommit layoutget    layoutreturn secinfononam sequence   <br/>
0         0% 0         0% 0         0% 0         0% 2         0% 83       33%
set_ssv      test_stateid want_deleg   destroy_clid reclaim_comp
0         0% 0         0% 0         0% 1         0% 2         0%
```</p>

<p>To see the available exports and their options, use <strong>exportfs</strong>:</p>

<p><code>
exportfs -v
/var/nfs-share  192.168.217.0/24(rw,wdelay,no_root_squash,no_subtree_check,sec=sys,rw,secure,no_root_squash,no_all_squash)
</code></p>

<h3>Client configuration</h3>

<p>On the client, I first made a directory for the shares:</p>

<p><code>
mkdir /mnt/nfs
</code></p>

<p>To mount the share, the command looks like this:</p>

<p><code>
mount -t nfs -o options server:/export /mount/directory
</code></p>

<p>In my case, I mounted the exported share with:</p>

<p><code>
mount -t nfs 192.168.217.131:/var/nfs-share /mnt/nfs/
</code></p>

<p>Then I went to the directory and read the file:</p>

<p><code>
root@kali:/mnt/nfs# ls
file.txt
root@kali:/mnt/nfs# cat file.txt
something here
</code></p>

<p>When done, unmount the filesystem:</p>

<p><code>
umount /mnt/nfs
</code></p>

<p>If instead of manually mounting the share, we would want it automatically mounted at boot, we&rsquo;d have to edit <code>/etc/fstab</code>:</p>

<p>```</p>

<h1>/etc/fstab: static file system information.</h1>

<p>#</p>

<h1>Use &lsquo;blkid&rsquo; to print the universally unique identifier for a</h1>

<h1>device; this may be used with UUID= as a more robust way to name devices</h1>

<h1>that works even if disks are added and removed. See fstab(5).</h1>

<p>#</p>

<h1><file system> <mount point>   <type>  <options>       <dump>  <pass></h1>

<p>192.168.217.131:/var/nfs-share /mnt/nfs nfs rw 0 0
```</p>

<p>Now reboot the client and check that the share was mounted:</p>

<p><code>
mount | grep nfs
192.168.217.131:/var/nfs-share on /mnt/nfs type nfs4 (rw,relatime,vers=4.2,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=0.0.0.0,local_lock=none,addr=192.168.217.131)
</code></p>

<p>So, it&rsquo;s pretty easy and fast to set up NFS shares, but keep in mind this tutorial only scratched the surface of the available configuration options.</p>

<p>```</p>

<hr />

<p>/ Q: What&rsquo;s tiny and yellow and very,   \
| very, dangerous? A: A canary with the |
\ super-user password.                  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick shares with Samba on CentOS]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/09/quick-shares-with-samba-on-centos/"/>
    <updated>2017-06-09T05:47:05-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/09/quick-shares-with-samba-on-centos</id>
    <content type="html"><![CDATA[<p>The interwebz is thundering with doomsday predictions about the <a href="https://blog.qualys.com/securitylabs/2017/05/26/samba-vulnerability-cve-2017-7494">Samba CVE-2017-7494 exploit</a>, and here I am, deciding that now is the best time to make a post on setting up Samba shares! xD</p>

<p>On a related note, if for some reason you can&rsquo;t patch the vulnerability yet, there is a workaround (with some drawbacks). Edit the global section in smb.conf and add the line <code>nt pipe support = no</code>.</p>

<!-- more -->


<p>Back to the matter at hand. First, let&rsquo;s verify if Samba is installed on the CentOS system:</p>

<p><code>
rpm -q samba
package samba is not installed
</code></p>

<p>Since it&rsquo;s not installed on my machine, I installed it with <code>yum install samba</code>, and then ran the previous command again, to check the version:</p>

<p><code>
rpm -q samba
samba-4.4.4-14.el7_3.x86_64
</code></p>

<p>Now, let&rsquo;s start Samba and see it running:</p>

<p>```
service smb start
Redirecting to /bin/systemctl start  smb.service
service smb status
Redirecting to /bin/systemctl status  smb.service
● smb.service &ndash; Samba SMB Daemon
   Loaded: loaded (/usr/lib/systemd/system/smb.service; disabled; vendor preset: disabled)
   Active: active (running) since Thu 2017-06-08 10:56:54 EEST; 5s ago
 Main PID: 61874 (smbd)
   Status: &ldquo;smbd: ready to serve connections&hellip;&rdquo;
   CGroup: /system.slice/smb.service</p>

<pre><code>       ├─61874 /usr/sbin/smbd
       ├─61875 /usr/sbin/smbd
       ├─61876 /usr/sbin/smbd
       └─61879 /usr/sbin/smbd
</code></pre>

<p>Jun 08 10:56:52 localhost.localdomain systemd[1]: Starting Samba SMB Daemon&hellip;
Jun 08 10:56:54 localhost.localdomain smbd[61874]: [2017/06/08 10:56:54.513901,  0] ../lib/util/become_daemon.c:124(daemon_ready)
Jun 08 10:56:54 localhost.localdomain smbd[61874]:   STATUS=daemon &lsquo;smbd&rsquo; finished starting up and ready to serve connections
Jun 08 10:56:54 localhost.localdomain systemd[1]: Started Samba SMB Daemon.
```</p>

<h2>Samba daemons</h2>

<p>The Samba functionality is contained within 3 daemons:</p>

<ul>
<li><p><strong>smbd</strong> &ndash; file sharing, printing services, authentication. Default ports are 139 and 445</p></li>
<li><p><strong>nmbd</strong> &ndash; NetBIOS name service requests and browsing protocols</p></li>
<li><p><strong>winbindd</strong> &ndash; used for Windows domains membership</p></li>
</ul>


<h2>Samba configuration</h2>

<p>The Samba configuration file is <code>/etc/samba/smb.conf</code>. Here is how a fresh config file looks after installation:</p>

<p>```</p>

<h1>See smb.conf.example for a more detailed config file or</h1>

<h1>read the smb.conf manpage.</h1>

<h1>Run &lsquo;testparm&rsquo; to verify the config is correct after</h1>

<h1>you modified it.</h1>

<p>[global]</p>

<pre><code>workgroup = SAMBA
security = user

passdb backend = tdbsam

printing = cups
printcap name = cups
load printers = yes
cups options = raw
</code></pre>

<p>[homes]</p>

<pre><code>comment = Home Directories
valid users = %S, %D%w%S
browseable = No
read only = No
inherit acls = Yes
</code></pre>

<p>[printers]</p>

<pre><code>comment = All Printers
path = /var/tmp
printable = Yes
create mask = 0600
browseable = No
</code></pre>

<p>[print$]</p>

<pre><code>comment = Printer Drivers
path = /var/lib/samba/drivers
write list = root
create mask = 0664
directory mask = 0775
</code></pre>

<p>```</p>

<p>For much more detailed information and examples, see the <a href="/downloads/code/smb.conf.example">smb.conf.example file</a></p>

<h2>Create Samba share</h2>

<p>In this example, let&rsquo;s create a share that users can also write to. First, create the directory that you will share: <code>mkdir -p /srv/samba/myshare</code>. I placed a text file with some random stuff inside. Then I gave full access to the path and its subfolders with <code>chmod -R 777 /srv/samba</code></p>

<p>Next, we need to create a Samba user, but this account is not the same as a user account on the system. We have to make a user account on the system before assigning it to Samba:</p>

<p><code>
adduser smbuser -s /sbin/nologin
</code></p>

<p>Here I created a user just for Samba, with no login shell. Attempting to login will give the user a message that they are not allowed to login. If you prefer that the user is disconnected with no message, you can specify <code>/bin/false</code> instead.</p>

<p>Then, I gave the user account a description, which you can find inside <em>/etc/passwd</em>:</p>

<p><code>
usermod -c 'Samba access is allowed for this user' smbuser
[root@localhost ~]# cat /etc/passwd | grep smbuser
smbuser:x:1001:1001:Samba access is allowed for this user:/home/smbuser:/sbin/nologin
</code></p>

<p>Have to give the user account a password:</p>

<p><code>
[root@localhost ~]# passwd smbuser
Changing password for user smbuser.
New password:
Retype new password:
passwd: all authentication tokens updated successfully.
</code></p>

<p>Next, we create a Samba user, by using the previously created account:</p>

<p><code>
[root@localhost ~]# smbpasswd -a smbuser
New SMB password:
Retype new SMB password:
Added user smbuser.
</code></p>

<p>To be safe, check that the Samba user was created:</p>

<p><code>
[root@localhost ~]# pdbedit -L
smbuser:1001:Samba access is allowed for this user
</code></p>

<p>We have the share location and the user, now we need to edit the smb.conf file with the relevant information:</p>

<p>```
[global]</p>

<pre><code># workgroup name or Windows NT domain name
workgroup = SAMBA
# default: user and password authentication
security = user
# optional comment for Windows
server string = Samba File Server
# default backend for user information
passdb backend = tdbsam
</code></pre>

<p>[sharename]</p>

<pre><code>path = /srv/samba/myshare
comment = Only authorized users
# allow these users
valid users = smbuser
# same can be achieved with writable = yes
read only = no  
# allow subnet range
allow hosts = 192.168.217.
# deny access
invalid users = root  
</code></pre>

<p>```</p>

<p>I used comments for easier understanding, but for performance reasons, you might want to keep your file to minimum size, by removing all those comment lines. You can do that by keeping a configuration file with all the additional remarks, while using a smb.conf with only the required configuration. All the comments will be stripped from the config file:</p>

<p><code>
[root@localhost samba]# testparm -s smb.conf.old &gt; smb.conf
Load smb config files from smb.conf.old
rlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)
Processing section "[sharename]"
Loaded services file OK.
Server role: ROLE_STANDALONE
</code></p>

<p>We checked that our config file is valid, so now it&rsquo;s time to test it. Restart Samba for the configurations to take effect with <code>service smb restart</code>. And now let&rsquo;s access the share! From another machine, I used <strong>smbclient</strong> to list the available services on the Samba server:</p>

<p>```
smbclient -L 192.168.217.131 -U smbuser
WARNING: The &ldquo;syslog&rdquo; option is deprecated
Enter smbuser&rsquo;s password:
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]</p>

<pre><code>Sharename       Type      Comment
---------       ----      -------
sharename       Disk      Only authorized users
IPC$            IPC       IPC Service (Samba File Server)
</code></pre>

<p>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]</p>

<pre><code>Server               Comment
---------            -------

Workgroup            Master
---------            -------
</code></pre>

<p>```</p>

<p>There is one last step that you need to accomplish if you have SELinux enabled. You have to label the directory you&rsquo;re sharing with the <strong>samba_share_t</strong> label:</p>

<p><code>
chcon -R -t samba_share_t /srv/samba
</code></p>

<p>Now the /srv/samba directory and everything it contains is labeled correctly, and SELinux won&rsquo;t interfere. View the security context of the path with:</p>

<p><code>
ls -ldZ /srv/samba/
drwxr-xr-x. root root unconfined_u:object_r:samba_share_t:s0 /srv/samba/
</code></p>

<p>Changes made with chcon are temporary. To survive a relabel or running <em>restorerecon</em>, make the changes permanent with:</p>

<p><code>
semanage fcontext -a -t samba_share_t "path(/.*)?"
</code></p>

<p>Then apply them with <code>restorecon -R -v /path</code>.</p>

<p>Finally, to connect to a share, use the syntax: <code>smbclient  //host/sharename -U username</code> (in the below examle, the name of my share is sharename, because laziness):</p>

<p>```
smbclient  //192.168.217.131/sharename -U smbuser
WARNING: The &ldquo;syslog&rdquo; option is deprecated
Enter smbuser&rsquo;s password:
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
smb: > ls</p>

<pre><code>  .                                   D        0  Thu Jun  8 09:39:42 2017
  ..                                  D        0  Thu Jun  8 09:26:38 2017
  read.txt                            N       11  Thu Jun  8 09:39:42 2017

        18307072 blocks of size 1024. 13091600 blocks available
</code></pre>

<p>```</p>

<p>List available commands:</p>

<p>```</p>

<pre><code>smb: \&gt; ?
?              allinfo        altname        archive        backup         
blocksize      cancel         case_sensitive cd             chmod          
chown          close          del            dir            du             
echo           exit           get            getfacl        geteas         
hardlink       help           history        iosize         lcd            
link           lock           lowercase      ls             l              
mask           md             mget           mkdir          more           
mput           newer          notify         open           posix          
posix_encrypt  posix_open     posix_mkdir    posix_rmdir    posix_unlink   
posix_whoami   print          prompt         put            pwd            
q              queue          quit           readlink       rd             
recurse        reget          rename         reput          rm             
rmdir          showacls       setea          setmode        scopy          
stat           symlink        tar            tarmode        timeout        
translate      unlock         volume         vuid           wdel           
logon          listconnect    showconnect    tcon           tdis           
tid            logoff         ..             !              
</code></pre>

<p>```</p>

<p>Download file:</p>

<p><code>
smb: \&gt; get read.txt
getting file \read.txt of size 11 as read.txt (3.6 KiloBytes/sec) (average 3.6 KiloBytes/sec)
</code></p>

<p>Delete file:</p>

<p><code>
smb: \&gt; del read.txt
</code></p>

<p>Upload file:</p>

<p>```
smb: > put test.png
putting file test.png as \test.png (0.2 kb/s) (average 0.2 kb/s)
smb: > ls
  .                                   D        0  Thu Jun  8 13:24:14 2017
  ..                                  D        0  Thu Jun  8 09:26:38 2017
  test.png                            A       35  Thu Jun  8 13:22:09 2017</p>

<pre><code>    18307072 blocks of size 1024. 13091480 blocks available
</code></pre>

<p>```</p>

<p>From a Windows system, you can run <code>\192.168.217.131\sharename</code> to connect to the share, or use the <em>net use</em> command.</p>

<p>View shares:</p>

<p>```
C:\Documents and Settings\admin>net use
New connections will be remembered.</p>

<p>Status       Local     Remote                    Network</p>

<hr />

<p>OK                     \192.168.217.131\sharename</p>

<pre><code>                                             Microsoft Windows Network
</code></pre>

<p>The command completed successfully.
```</p>

<p>Connect to shares:</p>

<p>```
C:\Documents and Settings\admin>net use S: \192.168.217.131\sharename
The command completed successfully.</p>

<p>C:\Documents and Settings\admin>s:</p>

<p>S:>dir
 Volume in drive S is sharename
 Volume Serial Number is DCCC-194F</p>

<p> Directory of S:\</p>

<p>06/09/2017  02:24 AM    <DIR>          .
06/08/2017  10:26 PM    <DIR>          ..
06/09/2017  02:22 AM                35 test.png</p>

<pre><code>           1 File(s)             35 bytes
           2 Dir(s)  13,405,708,288 bytes free
</code></pre>

<p>```</p>

<h3>Other useful options</h3>

<p>You can drill down into the smb.conf file and customize it to your liking. Here are a few options:</p>

<ul>
<li><p>read list = user1, user2 &ndash; set read only users on a writable share</p></li>
<li><p>write list = user1, user2 &ndash; set write access for users on a read only share</p></li>
<li><p>deny hosts  = ip &ndash; deny access to the specified IPs</p></li>
<li><p>hide unreadable = yes &ndash; don&rsquo;t let users see files they don&rsquo;t have access to</p></li>
<li><p>browseable = no &ndash; hide shares from Windows network</p></li>
</ul>


<p>Key takeaways:</p>

<ul>
<li><p>server and share security levels are deprecated, so best to avoid them</p></li>
<li><p>specifying a share in the smb.conf file is not enough. Ensure that you have created the path and gave it sufficient permissins</p></li>
<li><p>Samba users need to already exist on the system</p></li>
<li><p>you can have both a well documented config file and a minimal size one for performance, by using <code>testparm -s</code></p></li>
<li><p>if you use SELinux, don&rsquo;t forget to label your share with <code>samba_share_t</code></p></li>
</ul>


<p>Learn more:</p>

<ul>
<li><p><a href="http://linux-training.be/linuxsrv.pdf">Samba section in Paul Cobbaut&rsquo;s Linux Servers course</a></p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/smb.conf.5.html">smb.conf manpage</a> &ndash; The configuration file for the Samba suite</p></li>
<li><p><a href="https://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-samba.html">CentOS Samba guide</a></p></li>
<li><p><a href="smbpasswd%20-%20The%20Samba%20encrypted%20password%20file">smbpasswd man page</a> &ndash; The Samba encrypted password file</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages/pdbedit.8.html">pdbedit manpage</a> &ndash; manage the SAM database (Database of Samba Users)</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/testparm.1.html">testparm manpage</a> &ndash; check an smb.conf configuration file for internal correctness</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/smbclient.1.html">smbclient manpage</a> &ndash; ftp-like client to access SMB/CIFS resources on servers</p></li>
</ul>


<p>```
/ Nothing so needs reforming as other \
| people&rsquo;s habits.                    |
|                                     |
\ &mdash; Mark Twain                       /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iptables firewall]]></title>
    <link href="http://chousensha.github.io/blog/2017/05/23/iptables-firewall/"/>
    <updated>2017-05-23T12:27:45-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/05/23/iptables-firewall</id>
    <content type="html"><![CDATA[<p>iptables is a CLI tool for configuring firewall functionality in Linux. It operates on a series of tables, which on a CentOS 7 system are:</p>

<!-- more -->


<ul>
<li><p><strong>filter</strong> &ndash; the default table used for packet filtering</p></li>
<li><p><strong>nat</strong> &ndash; for nat</p></li>
<li><p><strong>mangle</strong> &ndash; specialized packet alteration</p></li>
<li><p><strong>raw</strong> &ndash; used mainly for configuring connection exemptions</p></li>
<li><p><strong>security</strong> &ndash; Mandatory Access Control networking rules</p></li>
</ul>


<p>For the purpose of this post, we will be focusing on the filter table, which uses sets of rules to send (or not) packets on their merry way. These rules are called chains and they are as follows:</p>

<ul>
<li><p>INPUT &ndash; incoming connections</p></li>
<li><p>OUTPUT &ndash; outbound connections</p></li>
<li><p>FORWARD &ndash; packets being forwarded through the system</p></li>
</ul>


<p>Let&rsquo;s see the currently configured rules:</p>

<p><code>plain
iptables -t filter -L | grep policy
Chain INPUT (policy ACCEPT)
Chain FORWARD (policy ACCEPT)
Chain OUTPUT (policy ACCEPT)
</code></p>

<p>Well, everything is set to ACCEPT. The opposite of accepting connections is DROP, where the packets are silently dropped. Let&rsquo;s see it in action. First, change the policy to drop the packets: <code>iptables -P INPUT DROP</code>. Then try to ping the machine:</p>

<p>``` plain
ping 192.168.217.131</p>

<p>Pinging 192.168.217.131 with 32 bytes of data:
Request timed out.
Request timed out.
Request timed out.
Request timed out.</p>

<p>Ping statistics for 192.168.217.131:</p>

<pre><code>Packets: Sent = 4, Received = 0, Lost = 4 (100% loss),
</code></pre>

<p>```</p>

<p>It is possible to also use the REJECT extension,  where packets are being dropped but the source host receives an error, thereby being notified that there may be filtering in place: <code>iptables -I INPUT -j REJECT</code>. Here the REJECT was inserted at the beginning of the INPUT chain, to ensure that it will be matched before anything else:</p>

<p>``` plain
ping 192.168.217.131</p>

<p>Pinging 192.168.217.131 with 32 bytes of data:
Reply from 192.168.217.131: Destination port unreachable.
Reply from 192.168.217.131: Destination port unreachable.
Reply from 192.168.217.131: Destination port unreachable.
Reply from 192.168.217.131: Destination port unreachable.</p>

<p>Ping statistics for 192.168.217.131:</p>

<pre><code>Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
</code></pre>

<p>```</p>

<p>Some example scenarios:</p>

<h3>only allow SSH connections from specific IP</h3>

<p>Let&rsquo;s assume that a computer has to be locked down, and only accept SSH connections from a certain IP:</p>

<p><code>plain
iptables -I INPUT -p tcp --dport 22 -s 192.168.217.137 -j ACCEPT
</code></p>

<p>With a policy of dropping packets, running the above will allow TCP connections for port 22, from the 192.168.217.137 source address, while still denying everything else.</p>

<h3>traffic forwarding</h3>

<p>Next, we have a machine with the IP 192.168.217.131 that we want to use to forward traffic to 192.168.217.137. How would we accomplish that?</p>

<p>First, we enable forwarding in the forwarding machine&rsquo;s kernel by putting a 1 inside <code>/proc/sys/net/ipv4/ip_forward</code>. On the .137 machine, I have a netcat listener on port 8000. On the .131 box, I also have netcat listening on port 4444. All connections coming to port 4444 on this machine will be routed to port 8000 on .137. The iptables rules to make that happen are:</p>

<ul>
<li><p><code>iptables -t nat -A PREROUTING -p tcp &mdash;dport 4444 -j DNAT &mdash;to-destination 192.168.217.137:8000</code> &ndash; we operate on the nat table. PREROUTING is used for altering packets as soon as they  come  in. We append a rule to this chain, stating that for TCP packets coming to port 4444 on this host, the destination IP will be changed to 192.168.217.137, on port 8000</p></li>
<li><p><code>iptables -t nat -A POSTROUTING -j MASQUERADE</code> &ndash; next we append to the POSTROUTING chain, that alters packets as they are about to go out, telling iptables to masquerate packets: replacing the IP of the sender to the IP of the forwarding machine</p></li>
</ul>


<p>Now I connect to port 4444 on 192.168.217.131 and send some random text, and checking my 192.168.217.137 listener, I see the traffic:</p>

<p><code>plain
c -vnlp 8000
listening on [any] 8000 ...
connect to [192.168.217.137] from (UNKNOWN) [192.168.217.131] 1859
dasa
knock kncok
</code></p>

<h3>list rules of a table</h3>

<ul>
<li><code>iptables -L -n -v</code> &ndash; display the rules of the default filter table, also printing the number of packets and bytes processed by each chain, and use numerical format for ports and addresses</li>
</ul>


<p>``` plain
Chain INPUT (policy ACCEPT 172 packets, 21210 bytes)
 pkts bytes target     prot opt in     out     source               destination</p>

<p>Chain FORWARD (policy ACCEPT 37 packets, 1523 bytes)
 pkts bytes target     prot opt in     out     source               destination</p>

<p>Chain OUTPUT (policy ACCEPT 82 packets, 6554 bytes)
 pkts bytes target     prot opt in     out     source               destination <br/>
```</p>

<h3>flush all the rules</h3>

<ul>
<li><code>iptables -F</code> &ndash; delete your rules and start anew</li>
</ul>


<h3>save rules to survive reboots</h3>

<p><code>plain
service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]
</code></p>

<h3>block specific IP</h3>

<ul>
<li><code>iptables -A INPUT -s 192.168.217.137 -j DROP</code> &ndash; packets from .137 will be dropped</li>
</ul>


<h3>block outgoing connections to a host or range</h3>

<p>Let&rsquo;s imagine that you are tired of your users spending all their day on Twitter. First, find out Twitter&rsquo;s IPs:</p>

<p><code>plain
host twitter.com
twitter.com has address 104.244.42.65
twitter.com has address 104.244.42.1
twitter.com mail is handled by 20 alt1.aspmx.l.google.com.
twitter.com mail is handled by 30 aspmx2.googlemail.com.
twitter.com mail is handled by 20 alt2.aspmx.l.google.com.
twitter.com mail is handled by 10 aspmx.l.google.com.
twitter.com mail is handled by 30 aspmx3.googlemail.com.
</code></p>

<p>Next, do a whois lookup on the IP, looking for the CIDR range it belongs to:</p>

<p><code>plain
hois 104.244.42.65 | grep CIDR
CIDR:           104.244.40.0/21
</code></p>

<p>Block access to Twitter&rsquo;s IP range: <code>iptables -A OUTPUT -p tcp -d 66.220.144.0/20 -j DROP</code></p>

<h3>log dropped packets</h3>

<ul>
<li><code>iptables -A INPUT -i eth0 -j LOG &mdash;log-prefix &ldquo;Packets dropped by firewall:&rdquo;</code> &ndash; turn on kernel logging for matching packets and prefix the log messages with some text to make them stand out</li>
</ul>


<p><code>plain
root@pwnbox:~#grep "Packets dropped by firewall:" /var/log/messages
May 23 12:11:34 pwnbox kernel: [ 3285.154203] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=288 TOS=0x00 PREC=0x00 TTL=128 ID=20858 PROTO=UDP SPT=53 DPT=57477 LEN=268
May 23 12:11:34 pwnbox kernel: [ 3285.158231] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=356 TOS=0x00 PREC=0x00 TTL=128 ID=20859 PROTO=UDP SPT=53 DPT=36464 LEN=336
May 23 12:11:34 pwnbox kernel: [ 3285.162645] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=360 TOS=0x00 PREC=0x00 TTL=128 ID=20860 PROTO=UDP SPT=53 DPT=47777 LEN=340
...
</code></p>

<p>This post only scratched the tip of the iceberg when it comes to Linux firewalls. The key takeaway should be that iptables is a very powerful utility that can be customized to meet your specific networking needs.</p>

<p>``` plain</p>

<hr />

<p>&lt; You will wish you hadn&rsquo;t. ></p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DHCP server on CentOS]]></title>
    <link href="http://chousensha.github.io/blog/2017/04/13/dhcp-server-on-centos/"/>
    <updated>2017-04-13T13:59:25-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/04/13/dhcp-server-on-centos</id>
    <content type="html"><![CDATA[<p>In this post I will continue the series on configuring various servers on the CentOS 7 distribution. Let&rsquo;s see how we can get a DHCP server up and running!</p>

<!-- more -->


<h2>Installing DHCP server</h2>

<p>First, we need to intall the server component, which can be done with the <code>yum install dhcp</code> command:</p>

<h1>``` plain</h1>

<h1> Package                       Arch                            Version                                           Repository                     Size</h1>

<p>Installing:
 dhcp                          x86_64                          12:4.2.5-47.el7.centos                            base                          511 k</p>

<h1>Transaction Summary</h1>

<p>Install  1 Package</p>

<p>Total download size: 511 k
Installed size: 1.4 M
Is this ok [y/d/N]: y
Downloading packages:
dhcp-4.2.5-47.el7.centos.x86_64.rpm                                                                                           | 511 kB  00:00:00   <br/>
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : 12:dhcp-4.2.5-47.el7.centos.x86_64                                                                                                1/1
  Verifying  : 12:dhcp-4.2.5-47.el7.centos.x86_64                                                                                                1/1</p>

<p>Installed:
  dhcp.x86_64 12:4.2.5-47.el7.centos</p>

<p>Complete!
```</p>

<p>We now have a <code>/etc/dhcp/dhcpd.conf</code> file for configuring the server. There isn&rsquo;t much in it to start with, except pointers to the <code>dhcpd.conf</code> man page and a sample config file in <code>/usr/share/doc/dhcp*/dhcpd.conf.example</code>:</p>

<p>``` plain</p>

<h1>dhcpd.conf</h1>

<p>#</p>

<h1>Sample configuration file for ISC dhcpd</h1>

<p>#</p>

<h1>option definitions common to all supported networks&hellip;</h1>

<p>option domain-name &ldquo;example.org&rdquo;;
option domain-name-servers ns1.example.org, ns2.example.org;</p>

<p>default-lease-time 600;
max-lease-time 7200;</p>

<h1>Use this to enble / disable dynamic dns updates globally.</h1>

<h1>ddns-update-style none;</h1>

<h1>If this DHCP server is the official DHCP server for the local</h1>

<h1>network, the authoritative directive should be uncommented.</h1>

<h1>authoritative;</h1>

<h1>Use this to send dhcp log messages to a different log file (you also</h1>

<h1>have to hack syslog.conf to complete the redirection).</h1>

<p>log-facility local7;</p>

<h1>No service will be given on this subnet, but declaring it helps the</h1>

<h1>DHCP server to understand the network topology.</h1>

<p>subnet 10.152.187.0 netmask 255.255.255.0 {
}</p>

<h1>This is a very basic subnet declaration.</h1>

<p>subnet 10.254.239.0 netmask 255.255.255.224 {
  range 10.254.239.10 10.254.239.20;
  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
}</p>

<h1>This declaration allows BOOTP clients to get dynamic addresses,</h1>

<h1>which we don&rsquo;t really recommend.</h1>

<p>subnet 10.254.239.32 netmask 255.255.255.224 {
  range dynamic-bootp 10.254.239.40 10.254.239.60;
  option broadcast-address 10.254.239.31;
  option routers rtr-239-32-1.example.org;
}</p>

<h1>A slightly different configuration for an internal subnet.</h1>

<p>subnet 10.5.5.0 netmask 255.255.255.224 {
  range 10.5.5.26 10.5.5.30;
  option domain-name-servers ns1.internal.example.org;
  option domain-name &ldquo;internal.example.org&rdquo;;
  option routers 10.5.5.1;
  option broadcast-address 10.5.5.31;
  default-lease-time 600;
  max-lease-time 7200;
}</p>

<h1>Hosts which require special configuration options can be listed in</h1>

<h1>host statements.   If no address is specified, the address will be</h1>

<h1>allocated dynamically (if possible), but the host-specific information</h1>

<h1>will still come from the host declaration.</h1>

<p>host passacaglia {
  hardware ethernet 0:0:c0:5d:bd:95;
  filename &ldquo;vmunix.passacaglia&rdquo;;
  server-name &ldquo;toccata.fugue.com&rdquo;;
}</p>

<h1>Fixed IP addresses can also be specified for hosts.   These addresses</h1>

<h1>should not also be listed as being available for dynamic assignment.</h1>

<h1>Hosts for which fixed IP addresses have been specified can boot using</h1>

<h1>BOOTP or DHCP.   Hosts for which no fixed address is specified can only</h1>

<h1>be booted with DHCP, unless there is an address range on the subnet</h1>

<h1>to which a BOOTP client is connected which has the dynamic-bootp flag</h1>

<h1>set.</h1>

<p>host fantasia {
  hardware ethernet 08:00:07:26:c0:a5;
  fixed-address fantasia.fugue.com;
}</p>

<h1>You can declare a class of clients and then do address allocation</h1>

<h1>based on that.   The example below shows a case where all clients</h1>

<h1>in a certain class get addresses on the 10.17.224/24 subnet, and all</h1>

<h1>other clients get addresses on the 10.0.29/24 subnet.</h1>

<p>class &ldquo;foo&rdquo; {
  match if substring (option vendor-class-identifier, 0, 4) = &ldquo;SUNW&rdquo;;
}</p>

<p>shared-network 224-29 {
  subnet 10.17.224.0 netmask 255.255.255.0 {</p>

<pre><code>option routers rtr-224.example.org;
</code></pre>

<p>  }
  subnet 10.0.29.0 netmask 255.255.255.0 {</p>

<pre><code>option routers rtr-29.example.org;
</code></pre>

<p>  }
  pool {</p>

<pre><code>allow members of "foo";
range 10.17.224.10 10.17.224.250;
</code></pre>

<p>  }
  pool {</p>

<pre><code>deny members of "foo";
range 10.0.29.10 10.0.29.230;
</code></pre>

<p>  }
}
```</p>

<p>This is how the config file looks like. We&rsquo;ll use this example as a basis for making our own. Copy the example file and name it <strong>dhcpd.conf</strong> file:</p>

<p><code>plain
cp /usr/share/doc/dhcp*/dhcpd.conf.example /etc/dhcp/dhcpd.conf
</code></p>

<p>Now edit it and make changes according to your network:</p>

<p>``` plain</p>

<h1>option definitions common to all supported networks&hellip;</h1>

<p>option domain-name &ldquo;localdomain.com&rdquo;;</p>

<h1>DNS server address &ndash; look in your /etc/resolv.conf</h1>

<p>option domain-name-servers 192.168.217.2;</p>

<p>default-lease-time 600;
max-lease-time 7200;</p>

<h1>declare your subnet config</h1>

<p>subnet 192.168.217.0 netmask 255.255.255.0 {
  # range of IPs to serve
  range 192.168.217.10 192.168.217.20;
  # the address of the routers &ndash; look for the gateway address in the route -n # command (entry containing UG)
  option routers 192.168.217.2;
}</p>

<p>host kaliclient {
hardware ethernet 00:0c:29:22:f9:ae;
fixed-address 192.168.217.12;
}
```</p>

<p>Here I declared the subnet for which the server would handle addresses, and I reserved an IP address for a client. For more options, you can look at the <code>dhcpd-options</code> man page.</p>

<p>Time to start the server. First, verify that the <code>/var/lib/dhcpd/dhcpd.leases</code> file exists, otherwise you will need to create an empty one before starting the server with the command <code>systemctl start dhcpd</code>. I changed my VMs connection settings to host-only, and then looked at the new IP configuration:</p>

<p>``` plain</p>

<h1>ifconfig on the host running the DHCP server</h1>

<p>inet 192.168.217.10  netmask 255.255.255.0  broadcast 192.168.217.255</p>

<h1>ifconfig on the kali client</h1>

<p>inet 192.168.217.12  netmask 255.255.255.0  broadcast 192.168.217.255
```</p>

<p>Success! Our DHCP server kicked in and gave addresses to 2 machines on the network!</p>

<p>``` plain
/ F.S. Fitzgerald to Hemingway:        \
|                                      |
| &ldquo;Ernest, the rich are different from |
| us.&rdquo; Hemingway:                      |
|                                      |
\ &ldquo;Yes. They have more money.&rdquo;         /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
