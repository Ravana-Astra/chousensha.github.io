<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2016-08-29T15:52:15-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cloning Octopress blog]]></title>
    <link href="http://chousensha.github.io/blog/2015/11/26/cloning-octopress-blog/"/>
    <updated>2015-11-26T11:16:32-05:00</updated>
    <id>http://chousensha.github.io/blog/2015/11/26/cloning-octopress-blog</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently had some problems with Octopress breaking on my old Kali 1.0 box. And since the Kali 1.0 reached its end of life, figured this might be a good time to jump ship and install the 2.0 version, and set up a fresh Octopress there. So in this post I will quickly overview the steps needed to clone an already existing Octopress blog on a new machine and resume blogging from there.</p>

<!-- more -->


<h4>clone the source branch repository</h4>

<p>git clone -b source <a href="https://github.com/chousensha/chousensha.github.io.git">https://github.com/chousensha/chousensha.github.io.git</a> octopress</p>

<p>cd octopress</p>

<h4>clone master branch to _deploy</h4>

<p>git clone <a href="https://github.com/chousensha/chousensha.github.io.git">https://github.com/chousensha/chousensha.github.io.git</a> _deploy</p>

<p>The <code>source</code> branch contains the source of your blog, while the content that you generate is in the <code>master</code> branch.</p>

<p>Before proceeding with installing dependencies, I followed the instructions on <a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a> to install rvm, Ruby 1.9.3 and ExecJs:</p>

<h4>install rvm</h4>

<p>command curl -sSL <a href="https://rvm.io/mpapis.asc">https://rvm.io/mpapis.asc</a> | gpg2 &mdash;import &ndash;
curl -L <a href="https://get.rvm.io">https://get.rvm.io</a> | bash -s stable &mdash;ruby</p>

<h4>run below to be able to use rvm in the shell windows, and add it to your shell rc file or you will need to always run it before using rvm</h4>

<p>source /usr/local/rvm/scripts/rvm</p>

<h4>install Ruby 1.9.3</h4>

<p>rvm install 1.9.3</p>

<p>You will get a message that this version of Ruby is no longer maintained, but I had problems with Ruby 2~ so keeping this for Octopress.</p>

<h4>use Ruby 1.9.3</h4>

<p>rvm use 1.9.3</p>

<h4>update the rubygems to the latest available</h4>

<p>rvm rubygems latest</p>

<h4>optional: check that your Ruby version is the right one</h4>

<p>ruby &mdash;version</p>

<h4>install JS runtime for Ruby</h4>

<p>gem install execjs</p>

<h4>now install dependencies</h4>

<p>gem install bundler
bundle install</p>

<h4>setup github pages</h4>

<p>bundle exec rake setup_github_pages</p>

<p>And you&rsquo;re good to go!</p>

<p>Note for <em>zsh</em> users: because of the globbing of <em>zsh</em>, you will need to add <code>alias rake=&ldquo;noglob rake&rdquo;</code> to your .zshrc file or you will get a no matches found error. Or you can quote the arguments given to rake: <code>rake &ldquo;new_post[Whatever]&rdquo;</code></p>

<p>``` plain</p>

<hr />

<p>/ Few things are harder to put up with  \
| than the annoyance of a good example. |
|                                       |
| &mdash; &ldquo;Mark Twain, Pudd'nhead Wilson&rsquo;s   |
\ Calendar&rdquo;                             /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
