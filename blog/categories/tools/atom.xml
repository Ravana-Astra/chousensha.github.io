<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-07-06T11:40:31-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[urlcrazy - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/05/urlcrazy-kali-linux-tools/"/>
    <updated>2017-07-05T06:44:07-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/05/urlcrazy-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong> you want to detect possible URL hijacking or phishing of a domain, where unsuspecting users are lured to a malicious domain that is very similar to the original one. urlcrazy ftw!</p>

<p>Homepage: <a href="https://www.morningstarsecurity.com/research/urlcrazy">https://www.morningstarsecurity.com/research/urlcrazy</a></p>

<!-- more -->


<p></p>

<h2>urlcrazy description</h2>

<blockquote><p>Generate and test domain typos and variations to detect and perform typo squatting, URL hijacking,
phishing, and corporate espionage.</p>

<p>Usage</p>

<p>Detect typo squatters profiting from typos on your domain name</p>

<p>Protect your brand by registering popular typos</p>

<p>Identify typo domain names that will receive traffic intended for another domain</p>

<p>Conduct phishing attacks during a penetration test</p>

<p>Features</p>

<p>Generates 15 types of domain variants</p>

<p>Knows over 8000 common misspellings</p>

<p>Supports cosmic ray induced bit flipping</p>

<p>Multiple keyboard layouts (qwerty, azerty, qwertz, dvorak)</p>

<p>Checks if a domain variant is valid</p>

<p>Test if domain variants are in use</p>

<p>Estimate popularity of a domain variant URLCrazy requires Linux and the Ruby interpreter.</p></blockquote>

<h2>urlcrazy options</h2>

<p>```
urlcrazy -h
URLCrazy version 0.5
by Andrew Horton (urbanadventurer)
<a href="http://www.morningstarsecurity.com/research/urlcrazy">http://www.morningstarsecurity.com/research/urlcrazy</a></p>

<p>Generate and test domain typos and variations to detect and perform typo squatting, URL hijacking,
phishing, and corporate espionage.</p>

<p>Supports the following domain variations:
Character omission, character repeat, adjacent character swap, adjacent character replacement, double
character replacement, adjacent character insertion, missing dot, strip dashes, singular or pluralise,
common misspellings, vowel swaps, homophones, bit flipping (cosmic rays), homoglyphs, wrong top level
domain, and wrong second level domain.</p>

<p>Usage: /usr/bin/urlcrazy [options] domain</p>

<p>Options
 -k, &mdash;keyboard=LAYOUT  Options are: qwerty, azerty, qwertz, dvorak (default: qwerty)
 -p, &mdash;popularity   Check domain popularity with Google
 -r, &mdash;no-resolve   Do not resolve DNS
 -i, &mdash;show-invalid Show invalid domain names
 -f, &mdash;format=TYPE  Human readable or CSV (default: human readable)
 -o, &mdash;output=FILE  Output file
 -h, &mdash;help     This help
 -v, &mdash;version      Print version information. This version is 0.5
```</p>

<h2>urlcrazy usage</h2>

<p>```
urlcrazy kali.org
/usr/share/urlcrazy/tld.rb:81: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 81
/usr/share/urlcrazy/tld.rb:89: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 89
/usr/share/urlcrazy/tld.rb:91: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 91
URLCrazy Domain Report
Domain    : kali.org
Keyboard  : qwerty
At        : 2017-07-05 06:57:50 -0400</p>

<h1>Please wait. 63 hostnames to process</h1>

<h2>Typo Type              Typo         DNS-A            CC-A               DNS-MX                                Extn  </h2>

<p>Character Omission     kai.org      111.89.129.15    JP,JAPAN           kai.org                               org <br/>
Character Omission     kal.org      69.172.201.153   US,UNITED STATES                                         org <br/>
Character Omission     kli.org      208.97.188.67    US,UNITED STATES   vade-in2.mail.dreamhost.com           org <br/>
Character Repeat       kaali.org    184.168.221.56   US,UNITED STATES   mailstore1.secureserver.net           org <br/>
Character Repeat       kalii.org                     ?                                                        org <br/>
Character Repeat       kalli.org                     ?                  mail.joker.com                        org <br/>
Character Repeat       kkali.org                     ?                                                        org <br/>
Character Swap         akli.org     180.240.134.81   SG,SINGAPORE       mail.akli.org                         org <br/>
Character Swap         kail.org     185.53.178.9                        mail.h-email.net                      org <br/>
Character Swap         klai.org     74.208.59.167    US,UNITED STATES   mx01.1and1.com                        org <br/>
Character Replacement  jali.org                      ?                  mailin1.totalweb.net.uk               org <br/>
Character Replacement  kaki.org                      ?                                                        org <br/>
Character Replacement  kalo.org     54.214.44.86     US,UNITED STATES   aspmx5.googlemail.com                 org <br/>
Character Replacement  kalu.org     64.85.171.16     US,UNITED STATES   host.rack-host.net                    org <br/>
Character Replacement  ksli.org     203.184.176.168  HK,HONG KONG                                             org <br/>
Character Replacement  lali.org     194.232.43.3     AT,AUSTRIA         dedi3762.your-server.de               org <br/>
Character Insertion    kalio.org    213.186.33.87    FR,FRANCE          mx2.ovh.net                           org <br/>
Character Insertion    kaliu.org    67.205.40.20     US,UNITED STATES   vade-in1.mail.dreamhost.com           org <br/>
Character Insertion    kalki.org    97.74.42.79      US,UNITED STATES   smtp.secureserver.net                 org <br/>
Character Insertion    kasli.org    217.112.35.116   GB,UNITED KINGDOM  mx25.valuehost.ru                     org <br/>
Character Insertion    kjali.org                     ?                                                        org <br/>
Character Insertion    klali.org                     ?                                                        org <br/>
Missing Dot            kaliorg.com                   ?                                                        com <br/>
Missing Dot            wwwkali.org                   ?                                                        org <br/>
Singular or Pluralise  kalis.org    217.160.233.111  DE,GERMANY         mx00.kundenserver.de                  org <br/>
Vowel Swap             kala.org     64.111.125.111   US,UNITED STATES   ASPMX2.GOOGLEMAIL.COM                 org <br/>
Vowel Swap             kale.org     185.53.178.9                        mail.h-email.net                      org <br/>
Vowel Swap             keli.org                      ?                  mail.hti.ag                           org <br/>
Vowel Swap             kili.org     69.172.201.153   US,UNITED STATES                                         org <br/>
Vowel Swap             koli.org     72.52.4.122      US,UNITED STATES   localhost                             org <br/>
Vowel Swap             kuli.org     37.120.172.191   JP,JAPAN           v2.v1.biz                             org <br/>
Homophones             kalaye.org                    ?                                                        org <br/>
Homophones             kaleye.org                    ?                                                        org <br/>
Bit Flipping           cali.org     23.21.169.243    US,UNITED STATES   alt1.aspmx.l.google.com               org <br/>
Bit Flipping           iali.org                      ?                                                        org <br/>
Bit Flipping           kadi.org     146.148.34.125   US,UNITED STATES   mail.hope-mail.com                    org <br/>
Bit Flipping           kahi.org     206.126.4.4      պ,                kahi-org.mail.protection.outlook.com  org <br/>
Bit Flipping           kalh.org     50.63.33.1       E�,                mailstore1.secureserver.net           org <br/>
Bit Flipping           kalk.org     137.74.127.233                                                            org <br/>
Bit Flipping           kalm.org                      ?                  mx.kalm.org.cust.a.hostedemail.com    org <br/>
Bit Flipping           kaly.org     207.148.248.143  US,UNITED STATES                                         org <br/>
Bit Flipping           kami.org     69.172.201.153   ��,                                                      org <br/>
Bit Flipping           kani.org     178.33.20.67     FR,FRANCE          mail.kani.org                         org <br/>
Bit Flipping           kcli.org     50.63.202.44     US,UNITED STATES   ALT1.ASPMX.L.GOOGLE.COM               org <br/>
Bit Flipping           kqli.org                      ?                                                        org <br/>
Bit Flipping           oali.org     184.107.215.202  CA,CANADA          oali.org                              org <br/>
Homoglyphs             ka1i.org                      ?                                                        org <br/>
Homoglyphs             kall.org     65.254.238.128   US,UNITED STATES   mx.kall.org                           org <br/>
Wrong TLD              kali.ca      76.74.246.51     US,UNITED STATES   kali.ca                               ca  <br/>
Wrong TLD              kali.ch      81.221.254.5     CH,SWITZERLAND     kali.ch.2.arsmtp.com                  ch  <br/>
Wrong TLD              kali.com     75.164.208.82    US,UNITED STATES   alt2.aspmx.l.google.com               com <br/>
Wrong TLD              kali.de      193.238.9.165    DE,GERMANY                                               de  <br/>
Wrong TLD              kali.edu                      ?                                                        edu <br/>
Wrong TLD              kali.es      212.227.247.181  DE,GERMANY         mx01.1and1.es                         es  <br/>
Wrong TLD              kali.fr      103.224.182.248                     mx92.mb5p.com                         fr  <br/>
Wrong TLD              kali.it      195.110.124.188  IT,ITALY           mail.register.it                      it  <br/>
Wrong TLD              kali.jp      8.6.19.68        US,UNITED STATES   smtp.secureserver.net                 jp  <br/>
Wrong TLD              kali.net     45.40.165.16                        ASPMX.L.GOOGLE.COM                    net <br/>
Wrong TLD              kali.nl      72.52.4.121      US,UNITED STATES   localhost                             nl  <br/>
Wrong TLD              kali.no      194.63.248.52    NO,NORWAY          mx02.domeneshop.no                    no  <br/>
Wrong TLD              kali.ru      185.53.179.40                                                             ru  <br/>
Wrong TLD              kali.se      92.42.73.20      SE,SWEDEN          kali-se.mail.protection.outlook.com   se  <br/>
Wrong TLD              kali.us      184.168.221.28   US,UNITED STATES   209.150.186.51                        us <br/>
```</p>

<ul>
<li>check domain popularity with no DNS resolution</li>
</ul>


<p>```
urlcrazy -p -r paypal.com
/usr/share/urlcrazy/tld.rb:81: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 81
/usr/share/urlcrazy/tld.rb:89: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 89
/usr/share/urlcrazy/tld.rb:91: warning: key &ldquo;2nd_level_registration&rdquo; is duplicated and overwritten on line 91
URLCrazy Domain Report
Domain    : paypal.com
Keyboard  : qwerty
At        : 2017-07-05 07:01:52 -0400</p>

<h1>Please wait. 80 hostnames to process</h1>

<h2>Typo Type              Typo           Pop  CC-A  Extn  </h2>

<p>Character Omission     papal.com           ?     com <br/>
Character Omission     payal.com           ?     com <br/>
Character Omission     paypa.com           ?     com <br/>
Character Omission     paypal.cm           ?     cm  <br/>
Character Omission     paypl.com           ?     com <br/>
Character Omission     pypal.com           ?     com <br/>
Character Repeat       paaypal.com         ?     com <br/>
Character Repeat       paypaal.com         ?     com <br/>
Character Repeat       paypall.com         ?     com <br/>
Character Repeat       payppal.com         ?     com <br/>
Character Repeat       payypal.com         ?     com <br/>
Character Repeat       ppaypal.com         ?     com <br/>
Character Swap         apypal.com          ?     com <br/>
Character Swap         papyal.com          ?     com <br/>
Character Swap         payapl.com          ?     com <br/>
Character Swap         paypla.com          ?     com <br/>
Character Swap         pyapal.com          ?     com <br/>
Character Replacement  oaypal.com          ?     com <br/>
Character Replacement  patpal.com          ?     com <br/>
Character Replacement  paupal.com          ?     com <br/>
Character Replacement  payoal.com          ?     com <br/>
Character Replacement  paypak.com          ?     com <br/>
Character Replacement  paypsl.com          ?     com <br/>
Character Replacement  psypal.com          ?     com <br/>
Character Insertion    pasypal.com         ?     com <br/>
Character Insertion    paypalk.com         ?     com <br/>
Character Insertion    paypasl.com         ?     com <br/>
Character Insertion    paypoal.com         ?     com <br/>
Character Insertion    paytpal.com         ?     com <br/>
Character Insertion    payupal.com         ?     com <br/>
Character Insertion    poaypal.com         ?     com <br/>
Missing Dot            paypalcom.com       ?     com <br/>
Missing Dot            wwwpaypal.com       ?     com <br/>
Singular or Pluralise  paypals.com         ?     com <br/>
Vowel Swap             peypel.com          ?     com <br/>
Vowel Swap             piypil.com          ?     com <br/>
Vowel Swap             poypol.com          ?     com <br/>
Vowel Swap             puypul.com          ?     com <br/>
Bit Flipping           0aypal.com          ?     com <br/>
Bit Flipping           pa9pal.com          ?     com <br/>
Bit Flipping           paipal.com          ?     com <br/>
Bit Flipping           paqpal.com          ?     com <br/>
Bit Flipping           paxpal.com          ?     com <br/>
Bit Flipping           pay0al.com          ?     com <br/>
Bit Flipping           paypad.com          ?     com <br/>
Bit Flipping           paypah.com          ?     com <br/>
Bit Flipping           paypam.com          ?     com <br/>
Bit Flipping           paypan.com          ?     com <br/>
Bit Flipping           paypcl.com          ?     com <br/>
Bit Flipping           paypel.com          ?     com <br/>
Bit Flipping           paypil.com          ?     com <br/>
Bit Flipping           paypql.com          ?     com <br/>
Bit Flipping           payqal.com          ?     com <br/>
Bit Flipping           payral.com          ?     com <br/>
Bit Flipping           paytal.com          ?     com <br/>
Bit Flipping           payxal.com          ?     com <br/>
Bit Flipping           pcypal.com          ?     com <br/>
Bit Flipping           peypal.com          ?     com <br/>
Bit Flipping           piypal.com          ?     com <br/>
Bit Flipping           pqypal.com          ?     com <br/>
Bit Flipping           qaypal.com          ?     com <br/>
Bit Flipping           raypal.com          ?     com <br/>
Bit Flipping           taypal.com          ?     com <br/>
Bit Flipping           xaypal.com          ?     com <br/>
Homoglyphs             paypa1.com          ?     com <br/>
Wrong TLD              paypal.ca           ?     ca  <br/>
Wrong TLD              paypal.ch           ?     ch  <br/>
Wrong TLD              paypal.de           ?     de  <br/>
Wrong TLD              paypal.edu          ?     edu <br/>
Wrong TLD              paypal.es           ?     es  <br/>
Wrong TLD              paypal.fr           ?     fr  <br/>
Wrong TLD              paypal.it           ?     it  <br/>
Wrong TLD              paypal.jp           ?     jp  <br/>
Wrong TLD              paypal.net          ?     net <br/>
Wrong TLD              paypal.nl           ?     nl  <br/>
Wrong TLD              paypal.no           ?     no  <br/>
Wrong TLD              paypal.org          ?     org <br/>
Wrong TLD              paypal.ru           ?     ru  <br/>
Wrong TLD              paypal.se           ?     se  <br/>
Wrong TLD              paypal.us           ?     us  <br/>
```</p>

<p>```</p>

<hr />

<p>/ Everything that you know is wrong, but \
\ you can be straightened out.           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TheHarvester - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/07/02/theharvester-kali-linux-tools/"/>
    <updated>2017-07-02T08:32:26-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/07/02/theharvester-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to perform OSINT recon on a target and aggregate information from different sources. TheHarvester is an e-mail, subdomain and people names harvester written in Python.</p>

<p>Homepage: <a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></p>

<!-- more -->


<h2>theharvester description</h2>

<blockquote><p>theHarvester is a tool for gathering e-mail accounts, subdomain names, virtual
hosts, open ports/ banners, and employee names from different public sources
(search engines, pgp key servers).</p>

<p>Is a really simple tool, but very effective for the early stages of a penetration
test or just to know the visibility of your company in the Internet.</p>

<p>The sources are:</p>

<p>Passive:</p>

<p>-google: google search engine  &ndash; www.google.com</p>

<p>-googleCSE: google custom search engine</p>

<p>-google-profiles: google search engine, specific search for Google profiles</p>

<p>-bing: microsoft search engine  &ndash; www.bing.com</p>

<p>-bingapi: microsoft search engine, through the API (you need to add your Key in the discovery/bingsearch.py file)</p>

<p>-dogpile: Dogpile search engine &ndash; www.dogpile.com</p>

<p>-pgp: pgp key server &ndash; mit.edu</p>

<p>-linkedin: google search engine, specific search for Linkedin users</p>

<p>-vhost: Bing virtual hosts search</p>

<p>-twitter: twitter accounts related to an specific domain (uses google search)</p>

<p>-googleplus: users that works in target company (uses google search)</p>

<p>-yahoo: Yahoo search engine</p>

<p>-baidu: Baidu search engine</p>

<p>-shodan: Shodan Computer search engine, will search for ports and banner of the
discovered hosts  (<a href="http://www.shodanhq.com/">http://www.shodanhq.com/</a>)</p>

<p>Active:</p>

<p>-DNS brute force: this plugin will run a dictionary brute force enumeration</p>

<p>-DNS reverse lookup: reverse lookup of ip´s discovered in order to find hostnames</p>

<p>-DNS TDL expansion: TLD dictionary brute force enumeration</p>

<p>Modules that need API keys to work:</p>

<p>-googleCSE: You need to create a Google Custom Search engine(CSE), and add your
Google API key and CSE ID in the plugin (discovery/googleCSE.py)</p>

<p>-shodan: You need to provide your API key in discovery/shodansearch.py</p></blockquote>

<h2>theharvester options</h2>

<p>```</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#99;&#x6d;&#97;&#114;&#x74;&#x6f;&#x72;&#x65;&#x6c;&#x6c;&#x61;&#x40;&#101;&#100;&#x67;&#101;&#x2d;&#115;&#x65;&#99;&#117;&#114;&#x69;&#116;&#x79;&#x2e;&#99;&#111;&#109;">&#x63;&#x6d;&#97;&#114;&#x74;&#111;&#114;&#101;&#x6c;&#x6c;&#x61;&#x40;&#x65;&#x64;&#x67;&#x65;&#45;&#x73;&#101;&#x63;&#x75;&#114;&#x69;&#x74;&#121;&#x2e;&#99;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>Usage: theharvester options</p>

<pre><code>   -d: Domain to search or company name
   -b: data source: google, googleCSE, bing, bingapi, pgp, linkedin,
                    google-profiles, jigsaw, twitter, googleplus, all

   -s: Start in result number X (default: 0)
   -v: Verify host name via dns resolution and search for virtual hosts
   -f: Save the results into an HTML and XML file (both)
   -n: Perform a DNS reverse query on all ranges discovered
   -c: Perform a DNS brute force for the domain name
   -t: Perform a DNS TLD expansion discovery
   -e: Use this DNS server
   -l: Limit the number of results to work with(bing goes from 50 to 50 results,
        google 100 to 100, and pgp doesn't use this option)
   -h: use SHODAN database to query discovered hosts
</code></pre>

<p>Examples:</p>

<pre><code>    theharvester -d microsoft.com -l 500 -b google -h myresults.html
    theharvester -d microsoft.com -b pgp
    theharvester -d microsoft -l 200 -b linkedin
    theharvester -d apple.com -b googleCSE -l 500 -s 300
</code></pre>

<p>```</p>

<h2>theharvester usage</h2>

<ul>
<li>search with all options for a given domain</li>
</ul>


<p>```
theharvester -d hackerone.com -l 200 -b all -f harvested</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#99;&#x6d;&#x61;&#114;&#116;&#111;&#x72;&#x65;&#x6c;&#108;&#97;&#64;&#101;&#x64;&#x67;&#x65;&#x2d;&#115;&#101;&#x63;&#117;&#114;&#x69;&#x74;&#121;&#46;&#99;&#x6f;&#109;">&#x63;&#x6d;&#x61;&#114;&#116;&#x6f;&#114;&#x65;&#108;&#108;&#97;&#64;&#101;&#100;&#103;&#x65;&#x2d;&#x73;&#x65;&#99;&#x75;&#114;&#105;&#x74;&#x79;&#x2e;&#x63;&#111;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>Full harvest..
[&ndash;] Searching in Google..</p>

<pre><code>Searching 0 results...
Searching 100 results...
Searching 200 results...
</code></pre>

<p>[&ndash;] Searching in PGP Key server..
[&ndash;] Searching in Bing..</p>

<pre><code>Searching 50 results...
Searching 100 results...
Searching 150 results...
Searching 200 results...
</code></pre>

<p>[&ndash;] Searching in Exalead..</p>

<pre><code>Searching 50 results...
Searching 100 results...
Searching 150 results...
Searching 200 results...
Searching 250 results...
</code></pre>

<h2>[+] Emails found:</h2>

<p><a href="&#109;&#97;&#105;&#108;&#x74;&#111;&#58;&#102;&#x65;&#x65;&#100;&#x62;&#97;&#x63;&#x6b;&#64;&#x68;&#x61;&#99;&#x6b;&#101;&#114;&#111;&#110;&#101;&#46;&#99;&#x6f;&#x6d;">&#102;&#x65;&#101;&#100;&#x62;&#97;&#99;&#107;&#64;&#104;&#x61;&#99;&#x6b;&#101;&#114;&#111;&#x6e;&#101;&#x2e;&#99;&#111;&#109;</a>
<a href="&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#115;&#117;&#x70;&#x70;&#111;&#x72;&#116;&#64;&#x68;&#97;&#x63;&#107;&#x65;&#x72;&#x6f;&#x6e;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#x73;&#117;&#x70;&#112;&#111;&#114;&#x74;&#x40;&#x68;&#97;&#x63;&#x6b;&#x65;&#114;&#111;&#110;&#101;&#46;&#99;&#x6f;&#x6d;</a>
[REDACTED}</p>

<h2>[+] Hosts found in search engines:</h2>

<p>[&ndash;] Resolving hostnames IPs&hellip;
162.159.0.31:a.ns.hackerone.com
104.16.13.26:support.hackerone.com
104.16.99.52:www.hackerone.com</p>

<h1>[+] Virtual hosts:</h1>

<p>104.16.13.26    support.hackerone
104.16.13.26    support.hackerone.com
104.16.99.52    hackerone
[+] Saving files&hellip;
Files saved!
```</p>

<p>Keep in mind that I&rsquo;m editing some results from the output for privacy reasons. I&rsquo;m also saving all results in HTML</p>

<ul>
<li>Linkedin enumeration</li>
</ul>


<p>```
theharvester -d cisco.com -b linkedin -l 100 -f cisco</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x63;&#x6d;&#97;&#114;&#x74;&#x6f;&#114;&#x65;&#x6c;&#x6c;&#97;&#64;&#x65;&#x64;&#103;&#101;&#x2d;&#115;&#x65;&#99;&#117;&#x72;&#x69;&#116;&#x79;&#x2e;&#99;&#111;&#x6d;">&#99;&#109;&#97;&#x72;&#116;&#x6f;&#114;&#101;&#x6c;&#x6c;&#x61;&#x40;&#101;&#100;&#103;&#x65;&#45;&#x73;&#x65;&#99;&#117;&#x72;&#105;&#x74;&#121;&#46;&#99;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>[&ndash;] Searching in Linkedin..</p>

<pre><code>Searching 100 results..
</code></pre>

<h1>Users from Linkedin:</h1>

<p>Name
Another name
Names
Names everywhere
```</p>

<ul>
<li>Twitter enumeration</li>
</ul>


<p>```
theharvester -d chousensha.github.io -l 10 -b twitter</p>

<hr />

<ul>
<li><pre><code>                                                          *
</code></pre></li>
<li>| |<em>| |<strong>   </strong></em>    /\  /_<em> _ _ </em><strong><em>   </em></strong><strong>  </strong><em>| |</em> <strong>_ _ </strong>  *</li>
<li>| <strong>| &lsquo;<em> \ / _ \  / /</em>/ / _` | &rsquo;</strong>\ \ / / _ \/ <strong>| </strong>/ _ \ &lsquo;__| *</li>
<li>| |<em>| | | |  <strong>/ / </strong>  / (</em>| | |   \ V /  <strong>/__ \ ||  </strong>/ |    *</li>
<li>_<em>|</em>| |<em>|___| \/ /</em>/ _<em>,</em>|<em>|    _/ _<strong>||</strong></em>/_<em>___|</em>|    *</li>
<li><pre><code>                                                          *
</code></pre></li>
<li>TheHarvester Ver. 2.7                                           *</li>
<li>Coded by Christian Martorella                                   *</li>
<li>Edge-Security Research                                          *</li>
<li><a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#99;&#109;&#97;&#114;&#x74;&#111;&#x72;&#x65;&#108;&#x6c;&#x61;&#64;&#101;&#100;&#103;&#101;&#x2d;&#115;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#x79;&#x2e;&#x63;&#x6f;&#x6d;">&#x63;&#109;&#x61;&#x72;&#116;&#x6f;&#114;&#101;&#108;&#108;&#97;&#64;&#x65;&#100;&#103;&#x65;&#45;&#x73;&#101;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#46;&#x63;&#x6f;&#x6d;</a>                                   *</li>
</ul>


<hr />

<p>[&ndash;] Searching in Twitter ..</p>

<pre><code>Searching 100 results..
</code></pre>

<h1>Users from Twitter:</h1>

<p>@-moz-keyframes gb<strong>a
@keyframes gb</strong>a
@-moz-keyframes gb<strong>nb
@keyframes gb</strong>nb
@media
@keyframes qli-container-rotate
@keyframes qli-fill-unfill-rotate
@keyframes qli-blue-fade-in-out
@keyframes qli-red-fade-in-out
@keyframes qli-yellow-fade-in-out
@keyframes qli-green-fade-in-out
@keyframes qli-left-spin
@keyframes qli-right-spin
@kalilinux load balancer detector &hellip;
@chous3nsha
@
```</p>

<ul>
<li>sample HTML output</li>
</ul>


<p><img class="center" src="/images/tools/harvester.png" title="&lsquo;theharvester&rsquo; &lsquo;theharvester HTML report&rsquo;" ></p>

<p>Also note that doing a reverse query on the discovered ranges takes long and the output might be overwhelming.</p>

<p>```</p>

<hr />

<p>/ In India, &ldquo;cold weather&rdquo; is merely a    \
| conventional phrase and has come into   |
| use through the necessity of having     |
| some way to distinguish between weather |
| which will melt a brass door-knob and   |
| weather which will only make it mushy.  |
|                                         |
\ &mdash; Mark Twain                           /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wafw00f - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/30/wafw00f-kali-linux-tools/"/>
    <updated>2017-06-30T04:46:55-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/30/wafw00f-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you need to establish if a web application firewall is in place, and ideally, what type of WAF it is. You can go bark at it with wafw00f!</p>

<p>Homepage: <a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p>

<!-- more -->


<h2>wafw00f description</h2>

<blockquote><p>WAFW00F identifies and fingerprints Web Application Firewall (WAF) products.</p>

<p>How does it work?</p>

<p>To do its magic, WAFW00F does the following:</p>

<p> Sends a normal HTTP request and analyses the response; this identifies a number of WAF solutions</p>

<p> If that is not successful, it sends a number of (potentially malicious) HTTP requests and uses simple logic to
deduce which WAF it is</p>

<p> If that is also not successful, it analyses the responses previously returned and uses another simple algorithm
to guess if a WAF or security solution is actively responding to our attacks</p></blockquote>

<h2>wafw00f options</h2>

<p>```
wafw00f -h</p>

<pre><code>                             ^     ^
    _   __  _   ____ _   __  _    _   ____
   ///7/ /.' \ / __////7/ /,' \ ,' \ / __/
  | V V // o // _/ | V V // 0 // 0 // _/
  |_n_,'/_n_//_/   |_n_,' \_,' \_,'/_/
                            &lt;
                             ...'

WAFW00F - Web Application Firewall Detection Tool

By Sandro Gauci &amp;&amp; Wendel G. Henrique
</code></pre>

<p>Usage: wafw00f url1 [url2 [url3 &hellip; ]]
example: wafw00f <a href="http://www.victim.org/">http://www.victim.org/</a></p>

<p>Options:
  -h, &mdash;help            show this help message and exit
  -v, &mdash;verbose         enable verbosity &ndash; multiple -v options increase</p>

<pre><code>                    verbosity
</code></pre>

<p>  -a, &mdash;findall         Find all WAFs, do not stop testing on the first one
  -r, &mdash;disableredirect</p>

<pre><code>                    Do not follow redirections given by 3xx responses
</code></pre>

<p>  -t TEST, &mdash;test=TEST  Test for one specific WAF
  -l, &mdash;list            List all WAFs that we are able to detect
  &mdash;xmlrpc              Switch on the XML-RPC interface instead of CUI
  &mdash;xmlrpcport=XMLRPCPORT</p>

<pre><code>                    Specify an alternative port to listen on, default 8001
</code></pre>

<p>  -V, &mdash;version         Print out the version
```</p>

<h2>wafw00f usage</h2>

<ul>
<li>see what WAFs it can detect at the moment</li>
</ul>


<p>```
wafw00f -l</p>

<pre><code>                             ^     ^
    _   __  _   ____ _   __  _    _   ____
   ///7/ /.' \ / __////7/ /,' \ ,' \ / __/
  | V V // o // _/ | V V // 0 // 0 // _/
  |_n_,'/_n_//_/   |_n_,' \_,' \_,'/_/
                            &lt;
                             ...'

WAFW00F - Web Application Firewall Detection Tool

By Sandro Gauci &amp;&amp; Wendel G. Henrique
</code></pre>

<p>Can test for these WAFs:</p>

<p>Profense
NetContinuum
Incapsula WAF
CloudFlare
USP Secure Entry Server
Cisco ACE XML Gateway
Barracuda Application Firewall
Art of Defence HyperGuard
BinarySec
Teros WAF
F5 BIG-IP LTM
F5 BIG-IP APM
F5 BIG-IP ASM
F5 FirePass
F5 Trafficshield
InfoGuard Airlock
Citrix NetScaler
Trustwave ModSecurity
IBM Web Application Security
IBM DataPower
DenyALL WAF
Applicure dotDefender
Juniper WebApp Secure
Microsoft URLScan
Aqtronix WebKnight
eEye Digital Security SecureIIS
Imperva SecureSphere
Microsoft ISA Server
```</p>

<ul>
<li>detect WAF</li>
</ul>


<p>```
wafw00f <a href="https://bugcrowd.com">https://bugcrowd.com</a></p>

<pre><code>                             ^     ^
    _   __  _   ____ _   __  _    _   ____
   ///7/ /.' \ / __////7/ /,' \ ,' \ / __/
  | V V // o // _/ | V V // 0 // 0 // _/
  |_n_,'/_n_//_/   |_n_,' \_,' \_,'/_/
                            &lt;
                             ...'

WAFW00F - Web Application Firewall Detection Tool

By Sandro Gauci &amp;&amp; Wendel G. Henrique
</code></pre>

<p>Checking <a href="https://bugcrowd.com">https://bugcrowd.com</a>
The site <a href="https://bugcrowd.com">https://bugcrowd.com</a> is behind a CloudFlare
Number of requests: 1
```</p>

<ul>
<li>not detecting WAF</li>
</ul>


<p>```
wafw00f cisco.com</p>

<pre><code>                             ^     ^
    _   __  _   ____ _   __  _    _   ____
   ///7/ /.' \ / __////7/ /,' \ ,' \ / __/
  | V V // o // _/ | V V // 0 // 0 // _/
  |_n_,'/_n_//_/   |_n_,' \_,' \_,'/_/
                            &lt;
                             ...'

WAFW00F - Web Application Firewall Detection Tool

By Sandro Gauci &amp;&amp; Wendel G. Henrique
</code></pre>

<p>Checking <a href="http://cisco.com">http://cisco.com</a>
Generic Detection results:
No WAF detected by the generic detection
Number of requests: 13
```</p>

<ul>
<li>establish there is a WAF but without detecting its type</li>
</ul>


<p>```
wafw00f -a microsoft.com</p>

<pre><code>                             ^     ^
    _   __  _   ____ _   __  _    _   ____
   ///7/ /.' \ / __////7/ /,' \ ,' \ / __/
  | V V // o // _/ | V V // 0 // 0 // _/
  |_n_,'/_n_//_/   |_n_,' \_,' \_,'/_/
                            &lt;
                             ...'

WAFW00F - Web Application Firewall Detection Tool

By Sandro Gauci &amp;&amp; Wendel G. Henrique
</code></pre>

<p>Checking <a href="http://microsoft.com">http://microsoft.com</a>
Generic Detection results:
The site <a href="http://microsoft.com">http://microsoft.com</a> seems to be behind a WAF or some sort of security solution
Reason: The server returned a different response code when a string trigged the blacklist.
Normal response code is &ldquo;400&rdquo;, while the response code to an attack is &ldquo;301&rdquo;
Number of requests: 13
```</p>

<p>```</p>

<hr />

<p>/ You&rsquo;ll wish that you had done some of \
| the hard things when they were easier |
\ to do.                                /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dnsmap - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/27/dnsmap-kali-linux-tools/"/>
    <updated>2017-06-27T04:12:46-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/27/dnsmap-kali-linux-tools</id>
    <content type="html"><![CDATA[<p>Today we&rsquo;ll explore another tool for DNS enumeration: the DNS Network Mapper (dnsmap). Although at the time of this post, its last update was in 2010, this tool has survived the passage of time, and has been packaged with versions of both Backtrack and Kali. There is quite a wealth of information about the tool on its homepage, and it comes with a built-in wordlist for domain bruteforcing.</p>

<p>Homepage: <a href="https://github.com/makefu/dnsmap">https://github.com/makefu/dnsmap</a></p>

<!-- more -->


<h2>dnsmap description</h2>

<blockquote><p>dnsmap was originally released back in 2006 and was inspired by the
fictional story &ldquo;The Thief No One Saw&rdquo; by Paul Craig, which can be found
in the book &ldquo;Stealing the Network &ndash; How to 0wn the Box&rdquo;</p>

<p>dnsmap is mainly meant to be used by pentesters during the information
gathering/enumeration phase of infrastructure security assessments. During the
enumeration stage, the security consultant would typically discover the target
company&rsquo;s IP netblocks, domain names, phone numbers, etc &hellip;</p>

<p>Subdomain brute-forcing is another technique that should be used in the
enumeration stage, as it&rsquo;s especially useful when other domain enumeration
techniques such as zone transfers don&rsquo;t work (I rarely see zone transfers
being <em>publicly</em> allowed these days by the way).</p>

<p>LIMITATIONS</p>

<p>Lack of multi-threading. This speed issue will hopefully be resolved in future versions.</p>

<p>FUN THINGS THAT CAN HAPPEN</p>

<ol>
<li><p>Finding interesting remote access servers (e.g.: <a href="https://extranet.targetdomain.com">https://extranet.targetdomain.com</a>)</p></li>
<li><p>Finding badly configured and/or unpatched servers (e.g.: test.targetdomain.com)</p></li>
<li><p>Finding new domain names which will allow you to map non-obvious/hard-to-find netblocks
of your target organization (registry lookups &ndash; aka whois is your friend)</p></li>
<li><p>Sometimes you find that some bruteforced subdomains resolve to internal IP addresses
(RFC 1918). This is great as sometimes they are real up-to-date &ldquo;A&rdquo; records which means
that it <em>is</em> possible to enumerate internal servers of a target organization from the
Internet by only using standard DNS resolving (as oppossed to zone transfers for instance).</p></li>
<li><p>Discover embedded devices configured using Dynamic DNS services (e.g.: linksys-cam.com).
This method is an alternative to finding devices via Google hacking techniques</p></li>
</ol>


<p>USAGE</p>

<p>Bruteforcing can be done either with dnsmap&rsquo;s built-in wordlist or a user-supplied wordlist.
Results can be saved in CSV and human-readable format for further processing. dnsmap does
NOT require root privileges to be run, and should NOT be run with such privileges for security reasons.</p></blockquote>

<h2>dnsmap options</h2>

<p>```
dnsmap 0.30 &ndash; DNS Network Mapper by pagvac (gnucitizen.org)</p>

<p>usage: dnsmap &lt;target-domain> [options]
options:
-w &lt;wordlist-file>
-r &lt;regular-results-file>
-c &lt;csv-results-file>
-d &lt;delay-millisecs>
-i &lt;ips-to-ignore> (useful if you&rsquo;re obtaining false positives)</p>

<p>e.g.:
dnsmap target-domain.foo
dnsmap target-domain.foo -w yourwordlist.txt -r /tmp/domainbf_results.txt
dnsmap target-fomain.foo -r /tmp/ -d 3000
dnsmap target-fomain.foo -r ./domainbf_results.txt
```</p>

<h2>dnsmap usage</h2>

<p>```
dnsmap slack.com
dnsmap 0.30 &ndash; DNS Network Mapper by pagvac (gnucitizen.org)</p>

<p>[+] warning: domain might use wildcards. 54.230.203.126 will be ignored from results
[+] searching (sub)domains for slack.com using built-in wordlist
[+] using maximum random delay of 10 millisecond(s) between requests</p>

<p>email.slack.com
IP address #1: 34.196.74.192
IP address #2: 54.88.163.82</p>

<p>files.slack.com
IP address #1: 52.85.178.60</p>

<p>qa.slack.com
IP address #1: 54.192.201.191</p>

<p>staging.slack.com
IP address #1: 52.87.251.252</p>

<p>upload.slack.com
IP address #1: 34.197.50.42
IP address #2: 52.22.100.1
IP address #3: 52.44.55.102
IP address #4: 52.54.239.215</p>

<p>[+] 5 (sub)domains and 9 IP address(es) found
[+] completion time: 122 second(s)
```</p>

<p>Here is how the output looks in the CSV format:</p>

<p><img class="center" src="/images/tools/dnsmap.png" title="&lsquo;dnsmap&rsquo; &lsquo;dnsmap CSV report&rsquo;" ></p>

<p>```</p>

<hr />

<p>/ In the stairway of life, you&rsquo;d best \
\ take the elevator.                  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sslscan - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/24/sslscan-kali-linux-tools/"/>
    <updated>2017-06-24T07:36:03-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/24/sslscan-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to assess the SSL security posture of a target by listing the supported cipher suites. sslscan is a fast SSL/TLS scanner that has been extended from its original version, and at the time of this post, its last update was 2 days ago.</p>

<p>Homepage: <a href="https://github.com/rbsec/sslscan">https://github.com/rbsec/sslscan</a></p>

<!-- more -->


<h2>sslscan description</h2>

<blockquote><p>sslscan  queries SSL/TLS services, such as HTTPS, in order to determine the ciphers that are supported.</p>

<p>SSLScan is designed to be easy, lean and fast. The output includes preferred  ciphers of the SSL/TLS service, and
text and XML output formats are supported. It is TLS SNI aware when used with a  supported  version of OpenSSL.</p>

<p>Output is colour coded to indicate security issues. Colours are as follows:</p>

<p>Red Background:  NULL cipher (no encryption)</p>

<p>Red:             Broken cipher (&lt;= 40 bit), broken  protocol  (SSLv2  or SSLv3) or broken certificate signing
algorithm (MD5)</p>

<p>Yellow:           Weak  cipher  (&lt;=  56  bit or RC4) or weak certificate signing algorithm (SHA-1)</p>

<p>Purple:          Anonymous cipher (ADH or AECDH)</p></blockquote>

<p>Manpage: <a href="http://manpages.ubuntu.com/manpages/xenial/man1/sslscan.1.html">http://manpages.ubuntu.com/manpages/xenial/man1/sslscan.1.html</a></p>

<h2>sslscan options</h2>

<p>```</p>

<pre><code>       ___ ___| |___  ___ __ _ _ __
      / __/ __| / __|/ __/ _` | '_ \
      \__ \__ \ \__ \ (_| (_| | | | |
      |___/___/_|___/\___\__,_|_| |_|


    1.11.10-static
    OpenSSL 1.0.2-chacha (1.0.2g-dev)
</code></pre>

<p>Command:
  sslscan [Options] [host:port | host]</p>

<p>Options:
  &mdash;targets=<file>     A file containing a list of hosts to check.</p>

<pre><code>                   Hosts can  be supplied  with ports (host:port)
</code></pre>

<p>  &mdash;sni-name=<name>    Hostname for SNI
  &mdash;ipv4               Only use IPv4
  &mdash;ipv6               Only use IPv6
  &mdash;show-certificate   Show full certificate information
  &mdash;no-check-certificate  Don&rsquo;t warn about weak certificate algorithm or keys
  &mdash;show-client-cas    Show trusted CAs for TLS client auth
  &mdash;show-ciphers       Show supported client ciphers
  &mdash;show-cipher-ids    Show cipher ids
  &mdash;show-times         Show handhake times in milliseconds
  &mdash;ssl2               Only check SSLv2 ciphers
  &mdash;ssl3               Only check SSLv3 ciphers
  &mdash;tls10              Only check TLSv1.0 ciphers
  &mdash;tls11              Only check TLSv1.1 ciphers
  &mdash;tls12              Only check TLSv1.2 ciphers
  &mdash;tlsall             Only check TLS ciphers (all versions)
  &mdash;ocsp               Request OCSP response from server
  &mdash;pk=<file>          A file containing the private key or a PKCS#12 file</p>

<pre><code>                   containing a private key/certificate pair
</code></pre>

<p>  &mdash;pkpass=<password>  The password for the private  key or PKCS#12 file
  &mdash;certs=<file>       A file containing PEM/ASN1 formatted client certificates
  &mdash;no-ciphersuites    Do not check for supported ciphersuites
  &mdash;no-fallback        Do not check for TLS Fallback SCSV
  &mdash;no-renegotiation   Do not check for TLS renegotiation
  &mdash;no-compression     Do not check for TLS compression (CRIME)
  &mdash;no-heartbleed      Do not check for OpenSSL Heartbleed (CVE-2014-0160)
  &mdash;starttls-ftp       STARTTLS setup for FTP
  &mdash;starttls-imap      STARTTLS setup for IMAP
  &mdash;starttls-irc       STARTTLS setup for IRC
  &mdash;starttls-ldap      STARTTLS setup for LDAP
  &mdash;starttls-pop3      STARTTLS setup for POP3
  &mdash;starttls-smtp      STARTTLS setup for SMTP
  &mdash;starttls-mysql     STARTTLS setup for MYSQL
  &mdash;starttls-xmpp      STARTTLS setup for XMPP
  &mdash;starttls-psql      STARTTLS setup for PostgreSQL
  &mdash;xmpp-server        Use a server-to-server XMPP handshake
  &mdash;http               Test a HTTP connection
  &mdash;rdp                Send RDP preamble before starting scan
  &mdash;bugs               Enable SSL implementation bug work-arounds
  &mdash;timeout=<sec>      Set socket timeout. Default is 3s
  &mdash;sleep=<msec>       Pause between connection request. Default is disabled
  &mdash;xml=<file>         Output results to an XML file</p>

<pre><code>                   &lt;file&gt; can be -, which means stdout
</code></pre>

<p>  &mdash;version            Display the program version
  &mdash;verbose            Display verbose output
  &mdash;no-cipher-details  Disable EC curve names and EDH/RSA key lengths output
  &mdash;no-colour          Disable coloured output
  &mdash;help               Display the  help text  you are  now reading</p>

<p>Example:
  sslscan 127.0.0.1
  sslscan [::1]
```</p>

<h2>sslscan usage</h2>

<p>```
sslscan <a href="https://www.cylance.com">https://www.cylance.com</a>
Version: 1.11.10-static
OpenSSL 1.0.2-chacha (1.0.2g-dev)</p>

<p>Testing SSL server www.cylance.com on port 443 using SNI name www.cylance.com</p>

<p>  TLS Fallback SCSV:
Server supports TLS Fallback SCSV</p>

<p>  TLS renegotiation:
Secure session renegotiation supported</p>

<p>  TLS Compression:
Compression disabled</p>

<p>  Heartbleed:
TLS 1.2 not vulnerable to heartbleed
TLS 1.1 not vulnerable to heartbleed
TLS 1.0 not vulnerable to heartbleed</p>

<p>  Supported Server Cipher(s):
Preferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  ECDHE-RSA-AES128-SHA256       Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-GCM-SHA384   Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-SHA384       Curve P-256 DHE 256
Accepted  TLSv1.2  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.2  128 bits  AES128-GCM-SHA256          <br/>
Accepted  TLSv1.2  128 bits  AES128-SHA256              <br/>
Accepted  TLSv1.2  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.2  256 bits  AES256-GCM-SHA384          <br/>
Accepted  TLSv1.2  256 bits  AES256-SHA256              <br/>
Accepted  TLSv1.2  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.2  112 bits  DES-CBC3-SHA               <br/>
Preferred TLSv1.1  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.1  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.1  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.1  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.1  112 bits  DES-CBC3-SHA               <br/>
Preferred TLSv1.0  128 bits  ECDHE-RSA-AES128-SHA          Curve P-256 DHE 256
Accepted  TLSv1.0  256 bits  ECDHE-RSA-AES256-SHA          Curve P-256 DHE 256
Accepted  TLSv1.0  128 bits  AES128-SHA                 <br/>
Accepted  TLSv1.0  256 bits  AES256-SHA                 <br/>
Accepted  TLSv1.0  112 bits  DES-CBC3-SHA</p>

<p>  SSL Certificate:
Signature Algorithm: sha256WithRSAEncryption
RSA Key Strength:    2048</p>

<p>Subject:  <em>.cylance.com
Altnames: DNS:</em>.cylance.com, DNS:cylance.com, DNS:www.cylance.com, DNS:info.cylance.com, DNS:blog.cylance.com, DNS:education.cylance.com, DNS:support.cylance.com
Issuer:   DigiCert SHA2 Secure Server CA</p>

<p>Not valid before: May 24 00:00:00 2017 GMT
Not valid after:  May 29 12:00:00 2018 GMT
```</p>

<p>```</p>

<hr />

<p>/ Q: Do you know what the death rate \
\ around here is? A: One per person. /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
